!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
_SQSTD_AUXLIB_H_	extlibs/squirrel/include/sqstdaux.h	/^#define _SQSTD_AUXLIB_H_$/;"	d
_SQSTDBLOB_H_	extlibs/squirrel/include/sqstdblob.h	/^#define _SQSTDBLOB_H_$/;"	d
SQFILE	extlibs/squirrel/include/sqstdio.h	/^typedef void* SQFILE;$/;"	t
SQSTD_STREAM_TYPE_TAG	extlibs/squirrel/include/sqstdio.h	/^#define SQSTD_STREAM_TYPE_TAG /;"	d
SQStream	extlibs/squirrel/include/sqstdio.h	/^struct SQStream {$/;"	s
SQ_SEEK_CUR	extlibs/squirrel/include/sqstdio.h	/^#define SQ_SEEK_CUR /;"	d
SQ_SEEK_END	extlibs/squirrel/include/sqstdio.h	/^#define SQ_SEEK_END /;"	d
SQ_SEEK_SET	extlibs/squirrel/include/sqstdio.h	/^#define SQ_SEEK_SET /;"	d
_SQSTDIO_H_	extlibs/squirrel/include/sqstdio.h	/^#define _SQSTDIO_H_$/;"	d
_SQSTD_MATH_H_	extlibs/squirrel/include/sqstdmath.h	/^#define _SQSTD_MATH_H_$/;"	d
SQRex	extlibs/squirrel/include/sqstdstring.h	/^typedef struct SQRex SQRex;$/;"	t	typeref:struct:SQRex
SQRexBool	extlibs/squirrel/include/sqstdstring.h	/^typedef unsigned int SQRexBool;$/;"	t
SQRexMatch	extlibs/squirrel/include/sqstdstring.h	/^} SQRexMatch;$/;"	t	typeref:struct:__anon1
_SQSTD_STRING_H_	extlibs/squirrel/include/sqstdstring.h	/^#define _SQSTD_STRING_H_$/;"	d
begin	extlibs/squirrel/include/sqstdstring.h	/^	const SQChar *begin;$/;"	m	struct:__anon1
len	extlibs/squirrel/include/sqstdstring.h	/^	SQInteger len;$/;"	m	struct:__anon1
_SQSTD_SYSTEMLIB_H_	extlibs/squirrel/include/sqstdsystem.h	/^#define _SQSTD_SYSTEMLIB_H_$/;"	d
HSQMEMBERHANDLE	extlibs/squirrel/include/squirrel.h	/^typedef SQMemberHandle HSQMEMBERHANDLE;$/;"	t
HSQOBJECT	extlibs/squirrel/include/squirrel.h	/^typedef SQObject HSQOBJECT;$/;"	t
HSQUIRRELVM	extlibs/squirrel/include/squirrel.h	/^typedef struct SQVM* HSQUIRRELVM;$/;"	t	typeref:struct:SQVM
ISREFCOUNTED	extlibs/squirrel/include/squirrel.h	/^#define ISREFCOUNTED(/;"	d
MAX_CHAR	extlibs/squirrel/include/squirrel.h	/^#define MAX_CHAR /;"	d
OT_ARRAY	extlibs/squirrel/include/squirrel.h	/^	OT_ARRAY =			(_RT_ARRAY|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_BOOL	extlibs/squirrel/include/squirrel.h	/^	OT_BOOL =			(_RT_BOOL|SQOBJECT_CANBEFALSE),$/;"	e	enum:tagSQObjectType
OT_CLASS	extlibs/squirrel/include/squirrel.h	/^	OT_CLASS =			(_RT_CLASS|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_CLOSURE	extlibs/squirrel/include/squirrel.h	/^	OT_CLOSURE =		(_RT_CLOSURE|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_FLOAT	extlibs/squirrel/include/squirrel.h	/^	OT_FLOAT =			(_RT_FLOAT|SQOBJECT_NUMERIC|SQOBJECT_CANBEFALSE),$/;"	e	enum:tagSQObjectType
OT_FUNCPROTO	extlibs/squirrel/include/squirrel.h	/^	OT_FUNCPROTO =		(_RT_FUNCPROTO|SQOBJECT_REF_COUNTED), \/\/internal usage only$/;"	e	enum:tagSQObjectType
OT_GENERATOR	extlibs/squirrel/include/squirrel.h	/^	OT_GENERATOR =		(_RT_GENERATOR|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_INSTANCE	extlibs/squirrel/include/squirrel.h	/^	OT_INSTANCE =		(_RT_INSTANCE|SQOBJECT_REF_COUNTED|SQOBJECT_DELEGABLE),$/;"	e	enum:tagSQObjectType
OT_INTEGER	extlibs/squirrel/include/squirrel.h	/^	OT_INTEGER =		(_RT_INTEGER|SQOBJECT_NUMERIC|SQOBJECT_CANBEFALSE),$/;"	e	enum:tagSQObjectType
OT_NATIVECLOSURE	extlibs/squirrel/include/squirrel.h	/^	OT_NATIVECLOSURE =	(_RT_NATIVECLOSURE|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_NULL	extlibs/squirrel/include/squirrel.h	/^	OT_NULL =			(_RT_NULL|SQOBJECT_CANBEFALSE),$/;"	e	enum:tagSQObjectType
OT_OUTER	extlibs/squirrel/include/squirrel.h	/^	OT_OUTER =			(_RT_OUTER|SQOBJECT_REF_COUNTED) \/\/internal usage only$/;"	e	enum:tagSQObjectType
OT_STRING	extlibs/squirrel/include/squirrel.h	/^	OT_STRING =			(_RT_STRING|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
OT_TABLE	extlibs/squirrel/include/squirrel.h	/^	OT_TABLE =			(_RT_TABLE|SQOBJECT_REF_COUNTED|SQOBJECT_DELEGABLE),$/;"	e	enum:tagSQObjectType
OT_THREAD	extlibs/squirrel/include/squirrel.h	/^	OT_THREAD =			(_RT_THREAD|SQOBJECT_REF_COUNTED) ,$/;"	e	enum:tagSQObjectType
OT_USERDATA	extlibs/squirrel/include/squirrel.h	/^	OT_USERDATA =		(_RT_USERDATA|SQOBJECT_REF_COUNTED|SQOBJECT_DELEGABLE),$/;"	e	enum:tagSQObjectType
OT_USERPOINTER	extlibs/squirrel/include/squirrel.h	/^	OT_USERPOINTER =	_RT_USERPOINTER,$/;"	e	enum:tagSQObjectType
OT_WEAKREF	extlibs/squirrel/include/squirrel.h	/^	OT_WEAKREF =		(_RT_WEAKREF|SQOBJECT_REF_COUNTED),$/;"	e	enum:tagSQObjectType
SQBool	extlibs/squirrel/include/squirrel.h	/^typedef SQUnsignedInteger SQBool;$/;"	t
SQCOMPILERERROR	extlibs/squirrel/include/squirrel.h	/^typedef void (*SQCOMPILERERROR)(HSQUIRRELVM,const SQChar * \/*desc*\/,const SQChar * \/*source*\/,SQInteger \/*line*\/,SQInteger \/*column*\/);$/;"	t
SQChar	extlibs/squirrel/include/squirrel.h	/^typedef char SQChar;$/;"	t
SQChar	extlibs/squirrel/include/squirrel.h	/^typedef wchar_t SQChar;$/;"	t
SQDEBUGHOOK	extlibs/squirrel/include/squirrel.h	/^typedef void (*SQDEBUGHOOK)(HSQUIRRELVM \/*v*\/, SQInteger \/*type*\/, const SQChar * \/*sourcename*\/, SQInteger \/*line*\/, const SQChar * \/*funcname*\/);$/;"	t
SQFUNCTION	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger (*SQFUNCTION)(HSQUIRRELVM);$/;"	t
SQFalse	extlibs/squirrel/include/squirrel.h	/^#define SQFalse	/;"	d
SQFloat	extlibs/squirrel/include/squirrel.h	/^typedef double SQFloat;$/;"	t
SQFloat	extlibs/squirrel/include/squirrel.h	/^typedef float SQFloat;$/;"	t
SQFunctionInfo	extlibs/squirrel/include/squirrel.h	/^}SQFunctionInfo;$/;"	t	typeref:struct:tagSQFunctionInfo
SQHash	extlibs/squirrel/include/squirrel.h	/^typedef unsigned __int64 SQHash; \/*should be the same size of a pointer*\/$/;"	t
SQHash	extlibs/squirrel/include/squirrel.h	/^typedef unsigned int SQHash; \/*should be the same size of a pointer*\/$/;"	t
SQHash	extlibs/squirrel/include/squirrel.h	/^typedef unsigned long long SQHash; \/*should be the same size of a pointer*\/$/;"	t
SQInt32	extlibs/squirrel/include/squirrel.h	/^typedef int SQInt32; $/;"	t
SQInt32	extlibs/squirrel/include/squirrel.h	/^typedef int SQInt32; \/*must be 32 bits(also on 64bits processors)*\/$/;"	t
SQInteger	extlibs/squirrel/include/squirrel.h	/^typedef __int64 SQInteger;$/;"	t
SQInteger	extlibs/squirrel/include/squirrel.h	/^typedef int SQInteger;$/;"	t
SQInteger	extlibs/squirrel/include/squirrel.h	/^typedef long long SQInteger;$/;"	t
SQLEXREADFUNC	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger (*SQLEXREADFUNC)(SQUserPointer);$/;"	t
SQMemberHandle	extlibs/squirrel/include/squirrel.h	/^}SQMemberHandle;$/;"	t	typeref:struct:tagSQMemberHandle
SQOBJECT_CANBEFALSE	extlibs/squirrel/include/squirrel.h	/^#define SQOBJECT_CANBEFALSE	/;"	d
SQOBJECT_DELEGABLE	extlibs/squirrel/include/squirrel.h	/^#define SQOBJECT_DELEGABLE	/;"	d
SQOBJECT_NUMERIC	extlibs/squirrel/include/squirrel.h	/^#define SQOBJECT_NUMERIC	/;"	d
SQOBJECT_REF_COUNTED	extlibs/squirrel/include/squirrel.h	/^#define SQOBJECT_REF_COUNTED	/;"	d
SQObject	extlibs/squirrel/include/squirrel.h	/^}SQObject;$/;"	t	typeref:struct:tagSQObject
SQObjectType	extlibs/squirrel/include/squirrel.h	/^}SQObjectType;$/;"	t	typeref:enum:tagSQObjectType
SQObjectValue	extlibs/squirrel/include/squirrel.h	/^}SQObjectValue;$/;"	t	typeref:union:tagSQObjectValue
SQPRINTFUNCTION	extlibs/squirrel/include/squirrel.h	/^typedef void (*SQPRINTFUNCTION)(HSQUIRRELVM,const SQChar * ,...);$/;"	t
SQREADFUNC	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger (*SQREADFUNC)(SQUserPointer,SQUserPointer,SQInteger);$/;"	t
SQRELEASEHOOK	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger (*SQRELEASEHOOK)(SQUserPointer,SQInteger size);$/;"	t
SQRESULT	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger SQRESULT;$/;"	t
SQRawObjectVal	extlibs/squirrel/include/squirrel.h	/^typedef SQUnsignedInteger SQRawObjectVal; \/\/is 32 bits on 32 bits builds and 64 bits otherwise$/;"	t
SQRawObjectVal	extlibs/squirrel/include/squirrel.h	/^typedef __int64 SQRawObjectVal; \/\/must be 64bits$/;"	t
SQRawObjectVal	extlibs/squirrel/include/squirrel.h	/^typedef long long SQRawObjectVal; \/\/must be 64bits$/;"	t
SQRegFunction	extlibs/squirrel/include/squirrel.h	/^}SQRegFunction;$/;"	t	typeref:struct:tagSQRegFunction
SQStackInfos	extlibs/squirrel/include/squirrel.h	/^}SQStackInfos;$/;"	t	typeref:struct:tagSQStackInfos
SQTrue	extlibs/squirrel/include/squirrel.h	/^#define SQTrue	/;"	d
SQUIRREL_API	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_API /;"	d
SQUIRREL_AUTHOR	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_AUTHOR	/;"	d
SQUIRREL_COPYRIGHT	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_COPYRIGHT	/;"	d
SQUIRREL_EOB	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_EOB /;"	d
SQUIRREL_VERSION	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_VERSION	/;"	d
SQUIRREL_VERSION_NUMBER	extlibs/squirrel/include/squirrel.h	/^#define SQUIRREL_VERSION_NUMBER	/;"	d
SQUNICODE	extlibs/squirrel/include/squirrel.h	/^#define SQUNICODE$/;"	d
SQUnsignedInteger	extlibs/squirrel/include/squirrel.h	/^typedef unsigned __int64 SQUnsignedInteger;$/;"	t
SQUnsignedInteger	extlibs/squirrel/include/squirrel.h	/^typedef unsigned int SQUnsignedInteger;$/;"	t
SQUnsignedInteger	extlibs/squirrel/include/squirrel.h	/^typedef unsigned long long SQUnsignedInteger;$/;"	t
SQUnsignedInteger32	extlibs/squirrel/include/squirrel.h	/^typedef unsigned int SQUnsignedInteger32; \/*must be 32 bits(also on 64bits processors)*\/$/;"	t
SQUnsignedInteger32	extlibs/squirrel/include/squirrel.h	/^typedef unsigned int SQUnsignedInteger32;$/;"	t
SQUserPointer	extlibs/squirrel/include/squirrel.h	/^typedef void* SQUserPointer;$/;"	t
SQWRITEFUNC	extlibs/squirrel/include/squirrel.h	/^typedef SQInteger (*SQWRITEFUNC)(SQUserPointer,SQUserPointer,SQInteger);$/;"	t
SQ_ALIGNMENT	extlibs/squirrel/include/squirrel.h	/^#define SQ_ALIGNMENT /;"	d
SQ_BYTECODE_STREAM_TAG	extlibs/squirrel/include/squirrel.h	/^#define SQ_BYTECODE_STREAM_TAG	/;"	d
SQ_ERROR	extlibs/squirrel/include/squirrel.h	/^#define SQ_ERROR /;"	d
SQ_FAILED	extlibs/squirrel/include/squirrel.h	/^#define SQ_FAILED(/;"	d
SQ_MATCHTYPEMASKSTRING	extlibs/squirrel/include/squirrel.h	/^#define SQ_MATCHTYPEMASKSTRING /;"	d
SQ_OBJECT_RAWINIT	extlibs/squirrel/include/squirrel.h	/^#define SQ_OBJECT_RAWINIT(/;"	d
SQ_OK	extlibs/squirrel/include/squirrel.h	/^#define SQ_OK /;"	d
SQ_SUCCEEDED	extlibs/squirrel/include/squirrel.h	/^#define SQ_SUCCEEDED(/;"	d
SQ_VMSTATE_IDLE	extlibs/squirrel/include/squirrel.h	/^#define SQ_VMSTATE_IDLE	/;"	d
SQ_VMSTATE_RUNNING	extlibs/squirrel/include/squirrel.h	/^#define SQ_VMSTATE_RUNNING	/;"	d
SQ_VMSTATE_SUSPENDED	extlibs/squirrel/include/squirrel.h	/^#define SQ_VMSTATE_SUSPENDED	/;"	d
_PRINT_INT_FMT	extlibs/squirrel/include/squirrel.h	/^#define _PRINT_INT_FMT /;"	d
_PRINT_INT_PREC	extlibs/squirrel/include/squirrel.h	/^#define _PRINT_INT_PREC /;"	d
_RAW_TYPE	extlibs/squirrel/include/squirrel.h	/^#define _RAW_TYPE(/;"	d
_RT_ARRAY	extlibs/squirrel/include/squirrel.h	/^#define _RT_ARRAY	/;"	d
_RT_BOOL	extlibs/squirrel/include/squirrel.h	/^#define _RT_BOOL	/;"	d
_RT_CLASS	extlibs/squirrel/include/squirrel.h	/^#define _RT_CLASS	/;"	d
_RT_CLOSURE	extlibs/squirrel/include/squirrel.h	/^#define _RT_CLOSURE	/;"	d
_RT_FLOAT	extlibs/squirrel/include/squirrel.h	/^#define _RT_FLOAT	/;"	d
_RT_FUNCPROTO	extlibs/squirrel/include/squirrel.h	/^#define _RT_FUNCPROTO	/;"	d
_RT_GENERATOR	extlibs/squirrel/include/squirrel.h	/^#define _RT_GENERATOR	/;"	d
_RT_INSTANCE	extlibs/squirrel/include/squirrel.h	/^#define _RT_INSTANCE	/;"	d
_RT_INTEGER	extlibs/squirrel/include/squirrel.h	/^#define _RT_INTEGER	/;"	d
_RT_MASK	extlibs/squirrel/include/squirrel.h	/^#define _RT_MASK /;"	d
_RT_NATIVECLOSURE	extlibs/squirrel/include/squirrel.h	/^#define _RT_NATIVECLOSURE	/;"	d
_RT_NULL	extlibs/squirrel/include/squirrel.h	/^#define _RT_NULL	/;"	d
_RT_OUTER	extlibs/squirrel/include/squirrel.h	/^#define _RT_OUTER	/;"	d
_RT_STRING	extlibs/squirrel/include/squirrel.h	/^#define _RT_STRING	/;"	d
_RT_TABLE	extlibs/squirrel/include/squirrel.h	/^#define _RT_TABLE	/;"	d
_RT_THREAD	extlibs/squirrel/include/squirrel.h	/^#define _RT_THREAD	/;"	d
_RT_USERDATA	extlibs/squirrel/include/squirrel.h	/^#define _RT_USERDATA	/;"	d
_RT_USERPOINTER	extlibs/squirrel/include/squirrel.h	/^#define _RT_USERPOINTER	/;"	d
_RT_WEAKREF	extlibs/squirrel/include/squirrel.h	/^#define _RT_WEAKREF	/;"	d
_SC	extlibs/squirrel/include/squirrel.h	/^#define _SC(/;"	d
_SQ64	extlibs/squirrel/include/squirrel.h	/^#define _SQ64$/;"	d
_SQUIRREL_H_	extlibs/squirrel/include/squirrel.h	/^#define _SQUIRREL_H_$/;"	d
_index	extlibs/squirrel/include/squirrel.h	/^	SQInteger _index;$/;"	m	struct:tagSQMemberHandle
_static	extlibs/squirrel/include/squirrel.h	/^	SQBool _static;$/;"	m	struct:tagSQMemberHandle
_type	extlibs/squirrel/include/squirrel.h	/^	SQObjectType _type;$/;"	m	struct:tagSQObject
_unVal	extlibs/squirrel/include/squirrel.h	/^	SQObjectValue _unVal;$/;"	m	struct:tagSQObject
f	extlibs/squirrel/include/squirrel.h	/^	SQFUNCTION f;$/;"	m	struct:tagSQRegFunction
fFloat	extlibs/squirrel/include/squirrel.h	/^	SQFloat fFloat;$/;"	m	union:tagSQObjectValue
funcid	extlibs/squirrel/include/squirrel.h	/^	SQUserPointer funcid;$/;"	m	struct:tagSQFunctionInfo
funcname	extlibs/squirrel/include/squirrel.h	/^	const SQChar* funcname;$/;"	m	struct:tagSQStackInfos
line	extlibs/squirrel/include/squirrel.h	/^	SQInteger line;$/;"	m	struct:tagSQStackInfos
nInteger	extlibs/squirrel/include/squirrel.h	/^	SQInteger nInteger;$/;"	m	union:tagSQObjectValue
name	extlibs/squirrel/include/squirrel.h	/^	const SQChar *name;$/;"	m	struct:tagSQFunctionInfo
name	extlibs/squirrel/include/squirrel.h	/^	const SQChar *name;$/;"	m	struct:tagSQRegFunction
nparamscheck	extlibs/squirrel/include/squirrel.h	/^	SQInteger nparamscheck;$/;"	m	struct:tagSQRegFunction
pArray	extlibs/squirrel/include/squirrel.h	/^	struct SQArray *pArray;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQArray
pClass	extlibs/squirrel/include/squirrel.h	/^	struct SQClass *pClass;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQClass
pClosure	extlibs/squirrel/include/squirrel.h	/^	struct SQClosure *pClosure;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQClosure
pDelegable	extlibs/squirrel/include/squirrel.h	/^	struct SQDelegable *pDelegable;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQDelegable
pFunctionProto	extlibs/squirrel/include/squirrel.h	/^	struct SQFunctionProto *pFunctionProto;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQFunctionProto
pGenerator	extlibs/squirrel/include/squirrel.h	/^	struct SQGenerator *pGenerator;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQGenerator
pInstance	extlibs/squirrel/include/squirrel.h	/^	struct SQInstance *pInstance;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQInstance
pNativeClosure	extlibs/squirrel/include/squirrel.h	/^	struct SQNativeClosure *pNativeClosure;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQNativeClosure
pOuter	extlibs/squirrel/include/squirrel.h	/^	struct SQOuter *pOuter;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQOuter
pRefCounted	extlibs/squirrel/include/squirrel.h	/^	struct SQRefCounted *pRefCounted;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQRefCounted
pString	extlibs/squirrel/include/squirrel.h	/^	struct SQString *pString;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQString
pTable	extlibs/squirrel/include/squirrel.h	/^	struct SQTable *pTable;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQTable
pThread	extlibs/squirrel/include/squirrel.h	/^	struct SQVM *pThread;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQVM
pUserData	extlibs/squirrel/include/squirrel.h	/^	struct SQUserData *pUserData;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQUserData
pUserPointer	extlibs/squirrel/include/squirrel.h	/^	SQUserPointer pUserPointer;$/;"	m	union:tagSQObjectValue
pWeakRef	extlibs/squirrel/include/squirrel.h	/^	struct SQWeakRef *pWeakRef;$/;"	m	union:tagSQObjectValue	typeref:struct:tagSQObjectValue::SQWeakRef
raw	extlibs/squirrel/include/squirrel.h	/^	SQRawObjectVal raw;$/;"	m	union:tagSQObjectValue
scatoi	extlibs/squirrel/include/squirrel.h	/^#define scatoi	/;"	d
scisalnum	extlibs/squirrel/include/squirrel.h	/^#define scisalnum	/;"	d
scisalpha	extlibs/squirrel/include/squirrel.h	/^#define scisalpha	/;"	d
sciscntrl	extlibs/squirrel/include/squirrel.h	/^#define sciscntrl	/;"	d
scisdigit	extlibs/squirrel/include/squirrel.h	/^#define scisdigit	/;"	d
scisspace	extlibs/squirrel/include/squirrel.h	/^#define scisspace	/;"	d
scisxdigit	extlibs/squirrel/include/squirrel.h	/^#define scisxdigit	/;"	d
scprintf	extlibs/squirrel/include/squirrel.h	/^#define scprintf	/;"	d
scsprintf	extlibs/squirrel/include/squirrel.h	/^#define scsprintf	/;"	d
scstrcmp	extlibs/squirrel/include/squirrel.h	/^#define	scstrcmp	/;"	d
scstrlen	extlibs/squirrel/include/squirrel.h	/^#define scstrlen	/;"	d
scstrstr	extlibs/squirrel/include/squirrel.h	/^#define scstrstr	/;"	d
scstrtod	extlibs/squirrel/include/squirrel.h	/^#define scstrtod	/;"	d
scstrtol	extlibs/squirrel/include/squirrel.h	/^#define scstrtol	/;"	d
scstrtoul	extlibs/squirrel/include/squirrel.h	/^#define scstrtoul	/;"	d
scvsprintf	extlibs/squirrel/include/squirrel.h	/^#define scvsprintf	/;"	d
source	extlibs/squirrel/include/squirrel.h	/^	const SQChar *source;$/;"	m	struct:tagSQFunctionInfo
source	extlibs/squirrel/include/squirrel.h	/^	const SQChar* source;$/;"	m	struct:tagSQStackInfos
sq_createslot	extlibs/squirrel/include/squirrel.h	/^#define sq_createslot(/;"	d
sq_isarray	extlibs/squirrel/include/squirrel.h	/^#define sq_isarray(/;"	d
sq_isbool	extlibs/squirrel/include/squirrel.h	/^#define sq_isbool(/;"	d
sq_isclass	extlibs/squirrel/include/squirrel.h	/^#define sq_isclass(/;"	d
sq_isclosure	extlibs/squirrel/include/squirrel.h	/^#define sq_isclosure(/;"	d
sq_isfloat	extlibs/squirrel/include/squirrel.h	/^#define sq_isfloat(/;"	d
sq_isfunction	extlibs/squirrel/include/squirrel.h	/^#define sq_isfunction(/;"	d
sq_isgenerator	extlibs/squirrel/include/squirrel.h	/^#define sq_isgenerator(/;"	d
sq_isinstance	extlibs/squirrel/include/squirrel.h	/^#define sq_isinstance(/;"	d
sq_isinteger	extlibs/squirrel/include/squirrel.h	/^#define sq_isinteger(/;"	d
sq_isnativeclosure	extlibs/squirrel/include/squirrel.h	/^#define sq_isnativeclosure(/;"	d
sq_isnull	extlibs/squirrel/include/squirrel.h	/^#define sq_isnull(/;"	d
sq_isnumeric	extlibs/squirrel/include/squirrel.h	/^#define sq_isnumeric(/;"	d
sq_isstring	extlibs/squirrel/include/squirrel.h	/^#define sq_isstring(/;"	d
sq_istable	extlibs/squirrel/include/squirrel.h	/^#define sq_istable(/;"	d
sq_isthread	extlibs/squirrel/include/squirrel.h	/^#define sq_isthread(/;"	d
sq_isuserdata	extlibs/squirrel/include/squirrel.h	/^#define sq_isuserdata(/;"	d
sq_isuserpointer	extlibs/squirrel/include/squirrel.h	/^#define sq_isuserpointer(/;"	d
sq_isweakref	extlibs/squirrel/include/squirrel.h	/^#define sq_isweakref(/;"	d
sq_type	extlibs/squirrel/include/squirrel.h	/^#define sq_type(/;"	d
tagSQFunctionInfo	extlibs/squirrel/include/squirrel.h	/^typedef struct tagSQFunctionInfo {$/;"	s
tagSQMemberHandle	extlibs/squirrel/include/squirrel.h	/^typedef struct  tagSQMemberHandle{$/;"	s
tagSQObject	extlibs/squirrel/include/squirrel.h	/^typedef struct tagSQObject$/;"	s
tagSQObjectType	extlibs/squirrel/include/squirrel.h	/^typedef enum tagSQObjectType{$/;"	g
tagSQObjectValue	extlibs/squirrel/include/squirrel.h	/^typedef union tagSQObjectValue$/;"	u
tagSQRegFunction	extlibs/squirrel/include/squirrel.h	/^typedef struct tagSQRegFunction{$/;"	s
tagSQStackInfos	extlibs/squirrel/include/squirrel.h	/^typedef struct tagSQStackInfos{$/;"	s
typemask	extlibs/squirrel/include/squirrel.h	/^	const SQChar *typemask;$/;"	m	struct:tagSQRegFunction
wchar_t	extlibs/squirrel/include/squirrel.h	/^#define wchar_t /;"	d
_sqstd_aux_printerror	extlibs/squirrel/sqstdlib/sqstdaux.cpp	/^static SQInteger _sqstd_aux_printerror(HSQUIRRELVM v)$/;"	f	file:
_sqstd_compiler_error	extlibs/squirrel/sqstdlib/sqstdaux.cpp	/^void _sqstd_compiler_error(HSQUIRRELVM v,const SQChar *sErr,const SQChar *sSource,SQInteger line,SQInteger column)$/;"	f
sqstd_printcallstack	extlibs/squirrel/sqstdlib/sqstdaux.cpp	/^void sqstd_printcallstack(HSQUIRRELVM v)$/;"	f
sqstd_seterrorhandlers	extlibs/squirrel/sqstdlib/sqstdaux.cpp	/^void sqstd_seterrorhandlers(HSQUIRRELVM v)$/;"	f
SETUP_BLOB	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^#define SETUP_BLOB(/;"	d	file:
SQSTD_BLOB_TYPE_TAG	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^#define SQSTD_BLOB_TYPE_TAG /;"	d	file:
_DECL_BLOB_FUNC	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^#define _DECL_BLOB_FUNC(/;"	d	file:
_DECL_GLOBALBLOB_FUNC	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^#define _DECL_GLOBALBLOB_FUNC(/;"	d	file:
__swap_dword	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static void __swap_dword(unsigned int *n)$/;"	f	file:
__swap_word	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static void __swap_word(unsigned short *n)$/;"	f	file:
_blob__cloned	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob__cloned(HSQUIRRELVM v)$/;"	f	file:
_blob__get	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob__get(HSQUIRRELVM v)$/;"	f	file:
_blob__nexti	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob__nexti(HSQUIRRELVM v)$/;"	f	file:
_blob__set	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob__set(HSQUIRRELVM v)$/;"	f	file:
_blob__typeof	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob__typeof(HSQUIRRELVM v)$/;"	f	file:
_blob_constructor	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob_constructor(HSQUIRRELVM v)$/;"	f	file:
_blob_methods	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQRegFunction _blob_methods[] = {$/;"	v	file:
_blob_releasehook	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob_releasehook(SQUserPointer p, SQInteger size)$/;"	f	file:
_blob_resize	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob_resize(HSQUIRRELVM v)$/;"	f	file:
_blob_swap2	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob_swap2(HSQUIRRELVM v)$/;"	f	file:
_blob_swap4	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _blob_swap4(HSQUIRRELVM v)$/;"	f	file:
_g_blob_castf2i	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _g_blob_castf2i(HSQUIRRELVM v)$/;"	f	file:
_g_blob_casti2f	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _g_blob_casti2f(HSQUIRRELVM v)$/;"	f	file:
_g_blob_swap2	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _g_blob_swap2(HSQUIRRELVM v)$/;"	f	file:
_g_blob_swap4	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _g_blob_swap4(HSQUIRRELVM v)$/;"	f	file:
_g_blob_swapfloat	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQInteger _g_blob_swapfloat(HSQUIRRELVM v)$/;"	f	file:
bloblib_funcs	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^static SQRegFunction bloblib_funcs[]={$/;"	v	file:
sqstd_createblob	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^SQUserPointer sqstd_createblob(HSQUIRRELVM v, SQInteger size)$/;"	f
sqstd_getblob	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^SQRESULT sqstd_getblob(HSQUIRRELVM v,SQInteger idx,SQUserPointer *ptr)$/;"	f
sqstd_getblobsize	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^SQInteger sqstd_getblobsize(HSQUIRRELVM v,SQInteger idx)$/;"	f
sqstd_register_bloblib	extlibs/squirrel/sqstdlib/sqstdblob.cpp	/^SQRESULT sqstd_register_bloblib(HSQUIRRELVM v)$/;"	f
CanAdvance	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool CanAdvance(SQInteger n) {$/;"	f	struct:SQBlob
EOS	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool EOS() {$/;"	f	struct:SQBlob
Flush	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Flush() { return 0; }$/;"	f	struct:SQBlob
GetBuf	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQUserPointer GetBuf(){ return _buf; }$/;"	f	struct:SQBlob
GrowBufOf	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool GrowBufOf(SQInteger n)$/;"	f	struct:SQBlob
IsValid	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool IsValid() {$/;"	f	struct:SQBlob
Len	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Len() { return _size; }$/;"	f	struct:SQBlob
Read	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Read(void *buffer,SQInteger size) {$/;"	f	struct:SQBlob
Resize	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool Resize(SQInteger n) {$/;"	f	struct:SQBlob
SQBlob	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQBlob(SQInteger size) {$/;"	f	struct:SQBlob
SQBlob	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^struct SQBlob : public SQStream$/;"	s
Seek	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Seek(SQInteger offset, SQInteger origin) {$/;"	f	struct:SQBlob
Tell	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Tell() { return _ptr; }$/;"	f	struct:SQBlob
Write	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger Write(void *buffer, SQInteger size) {$/;"	f	struct:SQBlob
_SQSTD_BLOBIMPL_H_	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^#define _SQSTD_BLOBIMPL_H_$/;"	d
_allocated	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger _allocated;$/;"	m	struct:SQBlob
_buf	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	unsigned char *_buf;$/;"	m	struct:SQBlob
_owns	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	bool _owns;$/;"	m	struct:SQBlob
_ptr	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger _ptr;$/;"	m	struct:SQBlob
_size	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	SQInteger _size;$/;"	m	struct:SQBlob
~SQBlob	extlibs/squirrel/sqstdlib/sqstdblobimpl.h	/^	virtual ~SQBlob() {$/;"	f	struct:SQBlob
Close	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	void Close() {$/;"	f	struct:SQFile
EOS	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	bool EOS() { return Tell()==Len()?true:false;}$/;"	f	struct:SQFile
Flush	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Flush() {$/;"	f	struct:SQFile
GetHandle	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQFILE GetHandle() {return _handle;}$/;"	f	struct:SQFile
IsValid	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	bool IsValid() { return _handle?true:false; }$/;"	f	struct:SQFile
Len	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Len() {$/;"	f	struct:SQFile
Open	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	bool Open(const SQChar *filename ,const SQChar *mode) {$/;"	f	struct:SQFile
READ	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^#define READ(/;"	d	file:
Read	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Read(void *buffer,SQInteger size) {$/;"	f	struct:SQFile
SQFile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQFile() { _handle = NULL; _owns = false;}$/;"	f	struct:SQFile
SQFile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQFile(SQFILE file, bool owns) { _handle = file; _owns = owns;}$/;"	f	struct:SQFile
SQFile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^struct SQFile : public SQStream {$/;"	s	file:
SQSTD_FILE_TYPE_TAG	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^#define SQSTD_FILE_TYPE_TAG /;"	d	file:
Seek	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Seek(SQInteger offset, SQInteger origin)	{$/;"	f	struct:SQFile
Tell	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Tell() {$/;"	f	struct:SQFile
Write	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQInteger Write(void *buffer,SQInteger size) {$/;"	f	struct:SQFile
_DECL_FILE_FUNC	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^#define _DECL_FILE_FUNC(/;"	d	file:
_DECL_GLOBALIO_FUNC	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^#define _DECL_GLOBALIO_FUNC(/;"	d	file:
_file__typeof	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _file__typeof(HSQUIRRELVM v)$/;"	f	file:
_file_close	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _file_close(HSQUIRRELVM v)$/;"	f	file:
_file_constructor	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _file_constructor(HSQUIRRELVM v)$/;"	f	file:
_file_methods	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQRegFunction _file_methods[] = {$/;"	v	file:
_file_releasehook	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _file_releasehook(SQUserPointer p, SQInteger size)$/;"	f	file:
_g_io_dofile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger _g_io_dofile(HSQUIRRELVM v)$/;"	f
_g_io_loadfile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger _g_io_loadfile(HSQUIRRELVM v)$/;"	f
_g_io_writeclosuretofile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger _g_io_writeclosuretofile(HSQUIRRELVM v)$/;"	f
_handle	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	SQFILE _handle;$/;"	m	struct:SQFile	file:
_io_file_lexfeed_PLAIN	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _io_file_lexfeed_PLAIN(SQUserPointer file)$/;"	f	file:
_io_file_lexfeed_UCS2_BE	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _io_file_lexfeed_UCS2_BE(SQUserPointer file)$/;"	f	file:
_io_file_lexfeed_UCS2_LE	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _io_file_lexfeed_UCS2_LE(SQUserPointer file)$/;"	f	file:
_io_file_lexfeed_UTF8	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQInteger _io_file_lexfeed_UTF8(SQUserPointer file)$/;"	f	file:
_owns	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	bool _owns;$/;"	m	struct:SQFile	file:
file_read	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger file_read(SQUserPointer file,SQUserPointer buf,SQInteger size)$/;"	f
file_write	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger file_write(SQUserPointer file,SQUserPointer p,SQInteger size)$/;"	f
iolib_funcs	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^static SQRegFunction iolib_funcs[]={$/;"	v	file:
sqstd_createfile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_createfile(HSQUIRRELVM v, SQFILE file,SQBool own)$/;"	f
sqstd_dofile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_dofile(HSQUIRRELVM v,const SQChar *filename,SQBool retval,SQBool printerror)$/;"	f
sqstd_fclose	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_fclose(SQFILE file)$/;"	f
sqstd_feof	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_feof(SQFILE file)$/;"	f
sqstd_fflush	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_fflush(SQFILE file)$/;"	f
sqstd_fopen	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQFILE sqstd_fopen(const SQChar *filename ,const SQChar *mode)$/;"	f
sqstd_fread	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_fread(void* buffer, SQInteger size, SQInteger count, SQFILE file)$/;"	f
sqstd_fseek	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_fseek(SQFILE file, SQInteger offset, SQInteger origin)$/;"	f
sqstd_ftell	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_ftell(SQFILE file)$/;"	f
sqstd_fwrite	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQInteger sqstd_fwrite(const SQUserPointer buffer, SQInteger size, SQInteger count, SQFILE file)$/;"	f
sqstd_getfile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_getfile(HSQUIRRELVM v, SQInteger idx, SQFILE *file)$/;"	f
sqstd_loadfile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_loadfile(HSQUIRRELVM v,const SQChar *filename,SQBool printerror)$/;"	f
sqstd_register_iolib	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_register_iolib(HSQUIRRELVM v)$/;"	f
sqstd_writeclosuretofile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^SQRESULT sqstd_writeclosuretofile(HSQUIRRELVM v,const SQChar *filename)$/;"	f
~SQFile	extlibs/squirrel/sqstdlib/sqstdio.cpp	/^	virtual ~SQFile() { Close(); }$/;"	f	struct:SQFile
M_PI	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^#define M_PI /;"	d	file:
SINGLE_ARG_FUNC	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^#define SINGLE_ARG_FUNC(/;"	d	file:
TWO_ARGS_FUNC	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^#define TWO_ARGS_FUNC(/;"	d	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^#define _DECL_FUNC(/;"	d	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^#undef _DECL_FUNC$/;"	d	file:
math_abs	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^static SQInteger math_abs(HSQUIRRELVM v)$/;"	f	file:
math_rand	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^static SQInteger math_rand(HSQUIRRELVM v)$/;"	f	file:
math_srand	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^static SQInteger math_srand(HSQUIRRELVM v)$/;"	f	file:
mathlib_funcs	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^static SQRegFunction mathlib_funcs[] = {$/;"	v	file:
sqstd_register_mathlib	extlibs/squirrel/sqstdlib/sqstdmath.cpp	/^SQRESULT sqstd_register_mathlib(HSQUIRRELVM v)$/;"	f
OP_BOL	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_BOL	/;"	d	file:
OP_CCLASS	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_CCLASS	/;"	d	file:
OP_CHAR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_CHAR	/;"	d	file:
OP_CLASS	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_CLASS	/;"	d	file:
OP_DOT	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_DOT	/;"	d	file:
OP_EOL	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_EOL	/;"	d	file:
OP_EXPR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_EXPR	/;"	d	file:
OP_GREEDY	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_GREEDY	/;"	d	file:
OP_NCLASS	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_NCLASS	/;"	d	file:
OP_NOCAPEXPR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_NOCAPEXPR	/;"	d	file:
OP_OR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_OR	/;"	d	file:
OP_RANGE	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_RANGE	/;"	d	file:
OP_WB	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define OP_WB	/;"	d	file:
SQREX_SYMBOL_ANY_CHAR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_ANY_CHAR /;"	d	file:
SQREX_SYMBOL_BEGINNING_OF_STRING	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_BEGINNING_OF_STRING /;"	d	file:
SQREX_SYMBOL_BRANCH	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_BRANCH /;"	d	file:
SQREX_SYMBOL_END_OF_STRING	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_END_OF_STRING /;"	d	file:
SQREX_SYMBOL_ESCAPE_CHAR	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_ESCAPE_CHAR /;"	d	file:
SQREX_SYMBOL_GREEDY_ONE_OR_MORE	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_GREEDY_ONE_OR_MORE /;"	d	file:
SQREX_SYMBOL_GREEDY_ZERO_OR_MORE	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_GREEDY_ZERO_OR_MORE /;"	d	file:
SQREX_SYMBOL_GREEDY_ZERO_OR_ONE	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define SQREX_SYMBOL_GREEDY_ZERO_OR_ONE /;"	d	file:
SQRex	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^struct SQRex{$/;"	s	file:
SQRexNode	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^}SQRexNode;$/;"	t	typeref:struct:tagSQRexNode	file:
SQRexNodeType	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^typedef int SQRexNodeType;$/;"	t	file:
_bol	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	const SQChar *_bol;$/;"	m	struct:SQRex	file:
_currsubexp	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _currsubexp;$/;"	m	struct:SQRex	file:
_eol	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	const SQChar *_eol;$/;"	m	struct:SQRex	file:
_error	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	const SQChar **_error;$/;"	m	struct:SQRex	file:
_first	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _first;$/;"	m	struct:SQRex	file:
_jmpbuf	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	void *_jmpbuf;$/;"	m	struct:SQRex	file:
_matches	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQRexMatch *_matches;$/;"	m	struct:SQRex	file:
_nallocated	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _nallocated;$/;"	m	struct:SQRex	file:
_nodes	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQRexNode *_nodes;$/;"	m	struct:SQRex	file:
_nsize	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _nsize;$/;"	m	struct:SQRex	file:
_nsubexpr	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _nsubexpr;$/;"	m	struct:SQRex	file:
_op	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger _op;$/;"	m	struct:SQRex	file:
_p	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	const SQChar *_p;$/;"	m	struct:SQRex	file:
g_nnames	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static const SQChar *g_nnames[] =$/;"	v	file:
left	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger left;$/;"	m	struct:tagSQRexNode	file:
next	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger next;$/;"	m	struct:tagSQRexNode	file:
right	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQInteger right;$/;"	m	struct:tagSQRexNode	file:
scisprint	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^#define scisprint /;"	d	file:
sqstd_rex_charclass	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_charclass(SQRex *exp,SQInteger classid)$/;"	f	file:
sqstd_rex_charnode	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_charnode(SQRex *exp,SQBool isclass)$/;"	f	file:
sqstd_rex_class	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_class(SQRex *exp)$/;"	f	file:
sqstd_rex_compile	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQRex *sqstd_rex_compile(const SQChar *pattern,const SQChar **error)$/;"	f
sqstd_rex_element	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_element(SQRex *exp)$/;"	f	file:
sqstd_rex_error	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static void sqstd_rex_error(SQRex *exp,const SQChar *error)$/;"	f	file:
sqstd_rex_escapechar	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQChar sqstd_rex_escapechar(SQRex *exp)$/;"	f	file:
sqstd_rex_expect	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static void sqstd_rex_expect(SQRex *exp, SQInteger n){$/;"	f	file:
sqstd_rex_free	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^void sqstd_rex_free(SQRex *exp)$/;"	f
sqstd_rex_getsubexp	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQBool sqstd_rex_getsubexp(SQRex* exp, SQInteger n, SQRexMatch *subexp)$/;"	f
sqstd_rex_getsubexpcount	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQInteger sqstd_rex_getsubexpcount(SQRex* exp)$/;"	f
sqstd_rex_list	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_list(SQRex *exp)$/;"	f	file:
sqstd_rex_match	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQBool sqstd_rex_match(SQRex* exp,const SQChar* text)$/;"	f
sqstd_rex_matchcclass	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQBool sqstd_rex_matchcclass(SQInteger cclass,SQChar c)$/;"	f	file:
sqstd_rex_matchclass	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQBool sqstd_rex_matchclass(SQRex* exp,SQRexNode *node,SQChar c)$/;"	f	file:
sqstd_rex_matchnode	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static const SQChar *sqstd_rex_matchnode(SQRex* exp,SQRexNode *node,const SQChar *str,SQRexNode *next)$/;"	f	file:
sqstd_rex_newnode	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_newnode(SQRex *exp, SQRexNodeType type)$/;"	f	file:
sqstd_rex_parsenumber	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^static SQInteger sqstd_rex_parsenumber(SQRex *exp)$/;"	f	file:
sqstd_rex_search	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQBool sqstd_rex_search(SQRex* exp,const SQChar* text, const SQChar** out_begin, const SQChar** out_end)$/;"	f
sqstd_rex_searchrange	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^SQBool sqstd_rex_searchrange(SQRex* exp,const SQChar* text_begin,const SQChar* text_end,const SQChar** out_begin, const SQChar** out_end)$/;"	f
tagSQRexNode	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^typedef struct tagSQRexNode{$/;"	s	file:
type	extlibs/squirrel/sqstdlib/sqstdrex.cpp	/^	SQRexNodeType type;$/;"	m	struct:tagSQRexNode	file:
SAFE_READN	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^#define SAFE_READN(/;"	d	file:
SETUP_STREAM	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^#define SETUP_STREAM(/;"	d	file:
_stream__cloned	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^ SQInteger _stream__cloned(HSQUIRRELVM v)$/;"	f
_stream_eos	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_eos(HSQUIRRELVM v)$/;"	f
_stream_flush	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_flush(HSQUIRRELVM v)$/;"	f
_stream_len	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_len(HSQUIRRELVM v)$/;"	f
_stream_methods	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^static SQRegFunction _stream_methods[] = {$/;"	v	file:
_stream_readblob	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_readblob(HSQUIRRELVM v)$/;"	f
_stream_readn	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_readn(HSQUIRRELVM v)$/;"	f
_stream_seek	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_seek(HSQUIRRELVM v)$/;"	f
_stream_tell	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_tell(HSQUIRRELVM v)$/;"	f
_stream_writeblob	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_writeblob(HSQUIRRELVM v)$/;"	f
_stream_writen	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQInteger _stream_writen(HSQUIRRELVM v)$/;"	f
declare_stream	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^SQRESULT declare_stream(HSQUIRRELVM v,const SQChar* name,SQUserPointer typetag,const SQChar* reg_name,SQRegFunction *methods,SQRegFunction *globals)$/;"	f
init_streamclass	extlibs/squirrel/sqstdlib/sqstdstream.cpp	/^void init_streamclass(HSQUIRRELVM v)$/;"	f
_DECL_STREAM_FUNC	extlibs/squirrel/sqstdlib/sqstdstream.h	/^#define _DECL_STREAM_FUNC(/;"	d
_SQSTD_STREAM_H_	extlibs/squirrel/sqstdlib/sqstdstream.h	/^#define _SQSTD_STREAM_H_$/;"	d
ADDITIONAL_FORMAT_SPACE	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define ADDITIONAL_FORMAT_SPACE /;"	d	file:
MAX_FORMAT_LEN	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define MAX_FORMAT_LEN	/;"	d	file:
MAX_WFORMAT_LEN	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define MAX_WFORMAT_LEN	/;"	d	file:
SETUP_REX	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define SETUP_REX(/;"	d	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define _DECL_FUNC(/;"	d	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#undef _DECL_FUNC$/;"	d	file:
_DECL_REX_FUNC	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define _DECL_REX_FUNC(/;"	d	file:
_DECL_REX_FUNC	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#undef _DECL_REX_FUNC$/;"	d	file:
__strip_l	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static void __strip_l(const SQChar *str,const SQChar **start)$/;"	f	file:
__strip_r	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static void __strip_r(const SQChar *str,SQInteger len,const SQChar **end)$/;"	f	file:
_addrexmatch	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static void _addrexmatch(HSQUIRRELVM v,const SQChar *str,const SQChar *begin,const SQChar *end)$/;"	f	file:
_regexp__typeof	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp__typeof(HSQUIRRELVM v)$/;"	f	file:
_regexp_capture	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp_capture(HSQUIRRELVM v)$/;"	f	file:
_regexp_constructor	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp_constructor(HSQUIRRELVM v)$/;"	f	file:
_regexp_match	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp_match(HSQUIRRELVM v)$/;"	f	file:
_regexp_search	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp_search(HSQUIRRELVM v)$/;"	f	file:
_regexp_subexpcount	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _regexp_subexpcount(HSQUIRRELVM v)$/;"	f	file:
_rexobj_releasehook	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _rexobj_releasehook(SQUserPointer p, SQInteger size)$/;"	f	file:
_string_format	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _string_format(HSQUIRRELVM v)$/;"	f	file:
_string_lstrip	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _string_lstrip(HSQUIRRELVM v)$/;"	f	file:
_string_rstrip	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _string_rstrip(HSQUIRRELVM v)$/;"	f	file:
_string_split	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _string_split(HSQUIRRELVM v)$/;"	f	file:
_string_strip	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger _string_strip(HSQUIRRELVM v)$/;"	f	file:
rexobj_funcs	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQRegFunction rexobj_funcs[]={$/;"	v	file:
scatoi	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define scatoi /;"	d	file:
scsnprintf	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define scsnprintf /;"	d	file:
scstrchr	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define scstrchr /;"	d	file:
scstrtok	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^#define scstrtok /;"	d	file:
sqstd_format	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^SQRESULT sqstd_format(HSQUIRRELVM v,SQInteger nformatstringidx,SQInteger *outlen,SQChar **output)$/;"	f
sqstd_register_stringlib	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^SQInteger sqstd_register_stringlib(HSQUIRRELVM v)$/;"	f
stringlib_funcs	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQRegFunction stringlib_funcs[]={$/;"	v	file:
validate_format	extlibs/squirrel/sqstdlib/sqstdstring.cpp	/^static SQInteger validate_format(HSQUIRRELVM v, SQChar *fmt, const SQChar *src, SQInteger n,SQInteger &width)$/;"	f	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define _DECL_FUNC(/;"	d	file:
_DECL_FUNC	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#undef _DECL_FUNC$/;"	d	file:
_set_integer_slot	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static void _set_integer_slot(HSQUIRRELVM v,const SQChar *name,SQInteger val)$/;"	f	file:
_system_clock	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_clock(HSQUIRRELVM v)$/;"	f	file:
_system_date	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_date(HSQUIRRELVM v)$/;"	f	file:
_system_getenv	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_getenv(HSQUIRRELVM v)$/;"	f	file:
_system_remove	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_remove(HSQUIRRELVM v)$/;"	f	file:
_system_rename	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_rename(HSQUIRRELVM v)$/;"	f	file:
_system_system	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_system(HSQUIRRELVM v)$/;"	f	file:
_system_time	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQInteger _system_time(HSQUIRRELVM v)$/;"	f	file:
scasctime	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define scasctime /;"	d	file:
scgetenv	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define scgetenv /;"	d	file:
scremove	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define scremove /;"	d	file:
screname	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define screname /;"	d	file:
scsystem	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^#define scsystem /;"	d	file:
sqstd_register_systemlib	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^SQInteger sqstd_register_systemlib(HSQUIRRELVM v)$/;"	f
systemlib_funcs	extlibs/squirrel/sqstdlib/sqstdsystem.cpp	/^static SQRegFunction systemlib_funcs[]={$/;"	v	file:
BufState	extlibs/squirrel/squirrel/sqapi.cpp	/^struct BufState{$/;"	s	file:
_GETSAFE_OBJ	extlibs/squirrel/squirrel/sqapi.cpp	/^#define _GETSAFE_OBJ(/;"	d	file:
_getmemberbyhandle	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT _getmemberbyhandle(HSQUIRRELVM v,SQObjectPtr &self,const HSQMEMBERHANDLE *handle,SQObjectPtr *&val)$/;"	f
buf	extlibs/squirrel/squirrel/sqapi.cpp	/^	const SQChar *buf;$/;"	m	struct:BufState	file:
buf_lexfeed	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger buf_lexfeed(SQUserPointer file)$/;"	f
ptr	extlibs/squirrel/squirrel/sqapi.cpp	/^	SQInteger ptr;$/;"	m	struct:BufState	file:
size	extlibs/squirrel/squirrel/sqapi.cpp	/^	SQInteger size;$/;"	m	struct:BufState	file:
sq_addref	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_addref(HSQUIRRELVM v,HSQOBJECT *po)$/;"	f
sq_arrayappend	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arrayappend(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_arrayinsert	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arrayinsert(HSQUIRRELVM v,SQInteger idx,SQInteger destpos)$/;"	f
sq_arraypop	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arraypop(HSQUIRRELVM v,SQInteger idx,SQBool pushval)$/;"	f
sq_arrayremove	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arrayremove(HSQUIRRELVM v,SQInteger idx,SQInteger itemidx)$/;"	f
sq_arrayresize	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arrayresize(HSQUIRRELVM v,SQInteger idx,SQInteger newsize)$/;"	f
sq_arrayreverse	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_arrayreverse(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_aux_gettypedarg	extlibs/squirrel/squirrel/sqapi.cpp	/^bool sq_aux_gettypedarg(HSQUIRRELVM v,SQInteger idx,SQObjectType type,SQObjectPtr **o)$/;"	f
sq_aux_invalidtype	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_aux_invalidtype(HSQUIRRELVM v,SQObjectType type)$/;"	f
sq_aux_paramscheck	extlibs/squirrel/squirrel/sqapi.cpp	/^#define sq_aux_paramscheck(/;"	d	file:
sq_bindenv	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_bindenv(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_call	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_call(HSQUIRRELVM v,SQInteger params,SQBool retval,SQBool raiseerror)$/;"	f
sq_clear	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_clear(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_clone	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_clone(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_close	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_close(HSQUIRRELVM v)$/;"	f
sq_cmp	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_cmp(HSQUIRRELVM v)$/;"	f
sq_collectgarbage	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_collectgarbage(HSQUIRRELVM v)$/;"	f
sq_compile	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_compile(HSQUIRRELVM v,SQLEXREADFUNC read,SQUserPointer p,const SQChar *sourcename,SQBool raiseerror)$/;"	f
sq_compilebuffer	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_compilebuffer(HSQUIRRELVM v,const SQChar *s,SQInteger size,const SQChar *sourcename,SQBool raiseerror) {$/;"	f
sq_createinstance	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_createinstance(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_deleteslot	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_deleteslot(HSQUIRRELVM v,SQInteger idx,SQBool pushval)$/;"	f
sq_enabledebuginfo	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_enabledebuginfo(HSQUIRRELVM v, SQBool enable)$/;"	f
sq_free	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_free(void *p,SQUnsignedInteger size)$/;"	f
sq_get	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_get(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_getattributes	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getattributes(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_getbase	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getbase(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_getbool	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getbool(HSQUIRRELVM v,SQInteger idx,SQBool *b)$/;"	f
sq_getbyhandle	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getbyhandle(HSQUIRRELVM v,SQInteger idx,const HSQMEMBERHANDLE *handle)$/;"	f
sq_getcallee	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getcallee(HSQUIRRELVM v)$/;"	f
sq_getclass	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getclass(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_getclosureinfo	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getclosureinfo(HSQUIRRELVM v,SQInteger idx,SQUnsignedInteger *nparams,SQUnsignedInteger *nfreevars)$/;"	f
sq_getclosurename	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getclosurename(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_getdefaultdelegate	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getdefaultdelegate(HSQUIRRELVM v,SQObjectType t)$/;"	f
sq_getdelegate	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getdelegate(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_geterrorfunc	extlibs/squirrel/squirrel/sqapi.cpp	/^SQPRINTFUNCTION sq_geterrorfunc(HSQUIRRELVM v)$/;"	f
sq_getfloat	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getfloat(HSQUIRRELVM v,SQInteger idx,SQFloat *f)$/;"	f
sq_getforeignptr	extlibs/squirrel/squirrel/sqapi.cpp	/^SQUserPointer sq_getforeignptr(HSQUIRRELVM v)$/;"	f
sq_getfreevariable	extlibs/squirrel/squirrel/sqapi.cpp	/^const SQChar *sq_getfreevariable(HSQUIRRELVM v,SQInteger idx,SQUnsignedInteger nval)$/;"	f
sq_gethash	extlibs/squirrel/squirrel/sqapi.cpp	/^SQHash sq_gethash(HSQUIRRELVM v, SQInteger idx)$/;"	f
sq_getinstanceup	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getinstanceup(HSQUIRRELVM v, SQInteger idx, SQUserPointer *p,SQUserPointer typetag)$/;"	f
sq_getinteger	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getinteger(HSQUIRRELVM v,SQInteger idx,SQInteger *i)$/;"	f
sq_getlasterror	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_getlasterror(HSQUIRRELVM v)$/;"	f
sq_getlocal	extlibs/squirrel/squirrel/sqapi.cpp	/^const SQChar *sq_getlocal(HSQUIRRELVM v,SQUnsignedInteger level,SQUnsignedInteger idx)$/;"	f
sq_getmemberhandle	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getmemberhandle(HSQUIRRELVM v,SQInteger idx,HSQMEMBERHANDLE *handle)$/;"	f
sq_getobjtypetag	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getobjtypetag(const HSQOBJECT *o,SQUserPointer * typetag)$/;"	f
sq_getprintfunc	extlibs/squirrel/squirrel/sqapi.cpp	/^SQPRINTFUNCTION sq_getprintfunc(HSQUIRRELVM v)$/;"	f
sq_getrefcount	extlibs/squirrel/squirrel/sqapi.cpp	/^SQUnsignedInteger sq_getrefcount(HSQUIRRELVM v,HSQOBJECT *po)$/;"	f
sq_getscratchpad	extlibs/squirrel/squirrel/sqapi.cpp	/^SQChar *sq_getscratchpad(HSQUIRRELVM v,SQInteger minsize)$/;"	f
sq_getsize	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_getsize(HSQUIRRELVM v, SQInteger idx)$/;"	f
sq_getstackobj	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getstackobj(HSQUIRRELVM v,SQInteger idx,HSQOBJECT *po)$/;"	f
sq_getstring	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getstring(HSQUIRRELVM v,SQInteger idx,const SQChar **c)$/;"	f
sq_getthread	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getthread(HSQUIRRELVM v,SQInteger idx,HSQUIRRELVM *thread)$/;"	f
sq_gettop	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_gettop(HSQUIRRELVM v)$/;"	f
sq_gettype	extlibs/squirrel/squirrel/sqapi.cpp	/^SQObjectType sq_gettype(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_gettypetag	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_gettypetag(HSQUIRRELVM v,SQInteger idx,SQUserPointer *typetag)$/;"	f
sq_getuserdata	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getuserdata(HSQUIRRELVM v,SQInteger idx,SQUserPointer *p,SQUserPointer *typetag)$/;"	f
sq_getuserpointer	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getuserpointer(HSQUIRRELVM v, SQInteger idx, SQUserPointer *p)$/;"	f
sq_getversion	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_getversion()$/;"	f
sq_getvmstate	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_getvmstate(HSQUIRRELVM v)$/;"	f
sq_getweakrefval	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_getweakrefval(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_instanceof	extlibs/squirrel/squirrel/sqapi.cpp	/^SQBool sq_instanceof(HSQUIRRELVM v)$/;"	f
sq_malloc	extlibs/squirrel/squirrel/sqapi.cpp	/^void *sq_malloc(SQUnsignedInteger size)$/;"	f
sq_move	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_move(HSQUIRRELVM dest,HSQUIRRELVM src,SQInteger idx)$/;"	f
sq_newarray	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_newarray(HSQUIRRELVM v,SQInteger size)$/;"	f
sq_newclass	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_newclass(HSQUIRRELVM v,SQBool hasbase)$/;"	f
sq_newclosure	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_newclosure(HSQUIRRELVM v,SQFUNCTION func,SQUnsignedInteger nfreevars)$/;"	f
sq_newmember	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_newmember(HSQUIRRELVM v,SQInteger idx,SQBool bstatic)$/;"	f
sq_newslot	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_newslot(HSQUIRRELVM v, SQInteger idx, SQBool bstatic)$/;"	f
sq_newtable	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_newtable(HSQUIRRELVM v)$/;"	f
sq_newtableex	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_newtableex(HSQUIRRELVM v,SQInteger initialcapacity)$/;"	f
sq_newthread	extlibs/squirrel/squirrel/sqapi.cpp	/^HSQUIRRELVM sq_newthread(HSQUIRRELVM friendvm, SQInteger initialstacksize)$/;"	f
sq_newuserdata	extlibs/squirrel/squirrel/sqapi.cpp	/^SQUserPointer sq_newuserdata(HSQUIRRELVM v,SQUnsignedInteger size)$/;"	f
sq_next	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_next(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_notifyallexceptions	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_notifyallexceptions(HSQUIRRELVM v, SQBool enable)$/;"	f
sq_objtobool	extlibs/squirrel/squirrel/sqapi.cpp	/^SQBool sq_objtobool(const HSQOBJECT *o) $/;"	f
sq_objtofloat	extlibs/squirrel/squirrel/sqapi.cpp	/^SQFloat sq_objtofloat(const HSQOBJECT *o) $/;"	f
sq_objtointeger	extlibs/squirrel/squirrel/sqapi.cpp	/^SQInteger sq_objtointeger(const HSQOBJECT *o) $/;"	f
sq_objtostring	extlibs/squirrel/squirrel/sqapi.cpp	/^const SQChar *sq_objtostring(const HSQOBJECT *o) $/;"	f
sq_objtouserpointer	extlibs/squirrel/squirrel/sqapi.cpp	/^SQUserPointer sq_objtouserpointer(const HSQOBJECT *o)$/;"	f
sq_open	extlibs/squirrel/squirrel/sqapi.cpp	/^HSQUIRRELVM sq_open(SQInteger initialstacksize)$/;"	f
sq_pop	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pop(HSQUIRRELVM v, SQInteger nelemstopop)$/;"	f
sq_poptop	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_poptop(HSQUIRRELVM v)$/;"	f
sq_push	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_push(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_pushbool	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushbool(HSQUIRRELVM v,SQBool b)$/;"	f
sq_pushconsttable	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushconsttable(HSQUIRRELVM v)$/;"	f
sq_pushfloat	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushfloat(HSQUIRRELVM v,SQFloat n)$/;"	f
sq_pushinteger	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushinteger(HSQUIRRELVM v,SQInteger n)$/;"	f
sq_pushnull	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushnull(HSQUIRRELVM v)$/;"	f
sq_pushobject	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushobject(HSQUIRRELVM v,HSQOBJECT obj)$/;"	f
sq_pushregistrytable	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushregistrytable(HSQUIRRELVM v)$/;"	f
sq_pushroottable	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushroottable(HSQUIRRELVM v)$/;"	f
sq_pushstring	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushstring(HSQUIRRELVM v,const SQChar *s,SQInteger len)$/;"	f
sq_pushuserpointer	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_pushuserpointer(HSQUIRRELVM v,SQUserPointer p)$/;"	f
sq_rawdeleteslot	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_rawdeleteslot(HSQUIRRELVM v,SQInteger idx,SQBool pushval)$/;"	f
sq_rawget	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_rawget(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_rawnewmember	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_rawnewmember(HSQUIRRELVM v,SQInteger idx,SQBool bstatic)$/;"	f
sq_rawset	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_rawset(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_readclosure	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_readclosure(HSQUIRRELVM v,SQREADFUNC r,SQUserPointer up)$/;"	f
sq_realloc	extlibs/squirrel/squirrel/sqapi.cpp	/^void *sq_realloc(void* p,SQUnsignedInteger oldsize,SQUnsignedInteger newsize)$/;"	f
sq_release	extlibs/squirrel/squirrel/sqapi.cpp	/^SQBool sq_release(HSQUIRRELVM v,HSQOBJECT *po)$/;"	f
sq_remove	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_remove(HSQUIRRELVM v, SQInteger idx)$/;"	f
sq_reservestack	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_reservestack(HSQUIRRELVM v,SQInteger nsize)$/;"	f
sq_reseterror	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_reseterror(HSQUIRRELVM v)$/;"	f
sq_resetobject	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_resetobject(HSQOBJECT *po)$/;"	f
sq_resume	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_resume(HSQUIRRELVM v,SQBool retval,SQBool raiseerror)$/;"	f
sq_resurrectunreachable	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_resurrectunreachable(HSQUIRRELVM v)$/;"	f
sq_set	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_set(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_setattributes	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setattributes(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_setbyhandle	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setbyhandle(HSQUIRRELVM v,SQInteger idx,const HSQMEMBERHANDLE *handle)$/;"	f
sq_setclassudsize	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setclassudsize(HSQUIRRELVM v, SQInteger idx, SQInteger udsize)$/;"	f
sq_setcompilererrorhandler	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setcompilererrorhandler(HSQUIRRELVM v,SQCOMPILERERROR f)$/;"	f
sq_setconsttable	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setconsttable(HSQUIRRELVM v)$/;"	f
sq_setdebughook	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setdebughook(HSQUIRRELVM v)$/;"	f
sq_setdelegate	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setdelegate(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_seterrorhandler	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_seterrorhandler(HSQUIRRELVM v)$/;"	f
sq_setforeignptr	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setforeignptr(HSQUIRRELVM v,SQUserPointer p)$/;"	f
sq_setfreevariable	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setfreevariable(HSQUIRRELVM v,SQInteger idx,SQUnsignedInteger nval)$/;"	f
sq_setinstanceup	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setinstanceup(HSQUIRRELVM v, SQInteger idx, SQUserPointer p)$/;"	f
sq_setnativeclosurename	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setnativeclosurename(HSQUIRRELVM v,SQInteger idx,const SQChar *name)$/;"	f
sq_setnativedebughook	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setnativedebughook(HSQUIRRELVM v,SQDEBUGHOOK hook)$/;"	f
sq_setparamscheck	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setparamscheck(HSQUIRRELVM v,SQInteger nparamscheck,const SQChar *typemask)$/;"	f
sq_setprintfunc	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setprintfunc(HSQUIRRELVM v, SQPRINTFUNCTION printfunc,SQPRINTFUNCTION errfunc)$/;"	f
sq_setreleasehook	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_setreleasehook(HSQUIRRELVM v,SQInteger idx,SQRELEASEHOOK hook)$/;"	f
sq_setroottable	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_setroottable(HSQUIRRELVM v)$/;"	f
sq_settop	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_settop(HSQUIRRELVM v, SQInteger newtop)$/;"	f
sq_settypetag	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_settypetag(HSQUIRRELVM v,SQInteger idx,SQUserPointer typetag)$/;"	f
sq_suspendvm	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_suspendvm(HSQUIRRELVM v)$/;"	f
sq_throwerror	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_throwerror(HSQUIRRELVM v,const SQChar *err)$/;"	f
sq_throwobject	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_throwobject(HSQUIRRELVM v)$/;"	f
sq_tobool	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_tobool(HSQUIRRELVM v, SQInteger idx, SQBool *b)$/;"	f
sq_tostring	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_tostring(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_typeof	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_typeof(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_wakeupvm	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_wakeupvm(HSQUIRRELVM v,SQBool wakeupret,SQBool retval,SQBool raiseerror,SQBool throwerror)$/;"	f
sq_weakref	extlibs/squirrel/squirrel/sqapi.cpp	/^void sq_weakref(HSQUIRRELVM v,SQInteger idx)$/;"	f
sq_writeclosure	extlibs/squirrel/squirrel/sqapi.cpp	/^SQRESULT sq_writeclosure(HSQUIRRELVM v,SQWRITEFUNC w,SQUserPointer up)$/;"	f
Append	extlibs/squirrel/squirrel/sqarray.h	/^	void Append(const SQObject &o){_values.push_back(o);}$/;"	f	struct:SQArray
Clone	extlibs/squirrel/squirrel/sqarray.h	/^	SQArray *Clone(){SQArray *anew=Create(_opt_ss(this),0); anew->_values.copy(_values); return anew; }$/;"	f	struct:SQArray
Create	extlibs/squirrel/squirrel/sqarray.h	/^	static SQArray* Create(SQSharedState *ss,SQInteger nInitialSize){$/;"	f	struct:SQArray
Finalize	extlibs/squirrel/squirrel/sqarray.h	/^	void Finalize(){$/;"	f	struct:SQArray
Get	extlibs/squirrel/squirrel/sqarray.h	/^	bool Get(const SQInteger nidx,SQObjectPtr &val)$/;"	f	struct:SQArray
GetType	extlibs/squirrel/squirrel/sqarray.h	/^	SQObjectType GetType() {return OT_ARRAY;}$/;"	f	struct:SQArray
Insert	extlibs/squirrel/squirrel/sqarray.h	/^	bool Insert(SQInteger idx,const SQObject &val){$/;"	f	struct:SQArray
Next	extlibs/squirrel/squirrel/sqarray.h	/^	SQInteger Next(const SQObjectPtr &refpos,SQObjectPtr &outkey,SQObjectPtr &outval)$/;"	f	struct:SQArray
Pop	extlibs/squirrel/squirrel/sqarray.h	/^	void Pop(){_values.pop_back(); ShrinkIfNeeded(); }$/;"	f	struct:SQArray
Release	extlibs/squirrel/squirrel/sqarray.h	/^	void Release()$/;"	f	struct:SQArray
Remove	extlibs/squirrel/squirrel/sqarray.h	/^	bool Remove(SQInteger idx){$/;"	f	struct:SQArray
Reserve	extlibs/squirrel/squirrel/sqarray.h	/^	void Reserve(SQInteger size) { _values.reserve(size); }$/;"	f	struct:SQArray
Resize	extlibs/squirrel/squirrel/sqarray.h	/^	void Resize(SQInteger size)$/;"	f	struct:SQArray
Resize	extlibs/squirrel/squirrel/sqarray.h	/^	void Resize(SQInteger size,SQObjectPtr &fill) { _values.resize(size,fill); ShrinkIfNeeded(); }$/;"	f	struct:SQArray
SQArray	extlibs/squirrel/squirrel/sqarray.h	/^	SQArray(SQSharedState *ss,SQInteger nsize){_values.resize(nsize); INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this);}$/;"	f	struct:SQArray
SQArray	extlibs/squirrel/squirrel/sqarray.h	/^struct SQArray : public CHAINABLE_OBJ$/;"	s
Set	extlibs/squirrel/squirrel/sqarray.h	/^	bool Set(const SQInteger nidx,const SQObjectPtr &val)$/;"	f	struct:SQArray
ShrinkIfNeeded	extlibs/squirrel/squirrel/sqarray.h	/^	void ShrinkIfNeeded() {$/;"	f	struct:SQArray
Size	extlibs/squirrel/squirrel/sqarray.h	/^	SQInteger Size() const {return _values.size();}$/;"	f	struct:SQArray
Top	extlibs/squirrel/squirrel/sqarray.h	/^	SQObjectPtr &Top(){return _values.top();}$/;"	f	struct:SQArray
_SQARRAY_H_	extlibs/squirrel/squirrel/sqarray.h	/^#define _SQARRAY_H_$/;"	d
_values	extlibs/squirrel/squirrel/sqarray.h	/^	SQObjectPtrVec _values;$/;"	m	struct:SQArray
~SQArray	extlibs/squirrel/squirrel/sqarray.h	/^	~SQArray()$/;"	f	struct:SQArray
STRING_TOFUNCZ	extlibs/squirrel/squirrel/sqbaselib.cpp	/^#define STRING_TOFUNCZ(/;"	d	file:
__getcallstackinfos	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger __getcallstackinfos(HSQUIRRELVM v,SQInteger level)$/;"	f	file:
__map_array	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger __map_array(SQArray *dest,SQArray *src,HSQUIRRELVM v) {$/;"	f	file:
_array_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_array_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_class_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_class_default_delegate_funcz[] = {$/;"	m	class:SQSharedState	file:
_closure_acall	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger _closure_acall(HSQUIRRELVM v,SQBool raiseerror)$/;"	f	file:
_closure_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_closure_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_generator_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_generator_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_hsort	extlibs/squirrel/squirrel/sqbaselib.cpp	/^bool _hsort(HSQUIRRELVM v,SQObjectPtr &arr, SQInteger l, SQInteger r,SQInteger func)$/;"	f
_hsort_sift_down	extlibs/squirrel/squirrel/sqbaselib.cpp	/^bool _hsort_sift_down(HSQUIRRELVM v,SQArray *arr, SQInteger root, SQInteger bottom, SQInteger func)$/;"	f
_instance_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_instance_default_delegate_funcz[] = {$/;"	m	class:SQSharedState	file:
_number_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_number_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_sort_compare	extlibs/squirrel/squirrel/sqbaselib.cpp	/^bool _sort_compare(HSQUIRRELVM v,SQObjectPtr &a,SQObjectPtr &b,SQInteger func,SQInteger &ret)$/;"	f
_string_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_string_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_table_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_table_default_delegate_funcz[]={$/;"	m	class:SQSharedState	file:
_thread_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_thread_default_delegate_funcz[] = {$/;"	m	class:SQSharedState	file:
_weakref_default_delegate_funcz	extlibs/squirrel/squirrel/sqbaselib.cpp	/^SQRegFunction SQSharedState::_weakref_default_delegate_funcz[] = {$/;"	m	class:SQSharedState	file:
array_append	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_append(HSQUIRRELVM v)$/;"	f	file:
array_apply	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_apply(HSQUIRRELVM v)$/;"	f	file:
array_extend	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_extend(HSQUIRRELVM v)$/;"	f	file:
array_filter	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_filter(HSQUIRRELVM v)$/;"	f	file:
array_find	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_find(HSQUIRRELVM v)$/;"	f	file:
array_insert	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_insert(HSQUIRRELVM v)$/;"	f	file:
array_map	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_map(HSQUIRRELVM v)$/;"	f	file:
array_pop	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_pop(HSQUIRRELVM v)$/;"	f	file:
array_reduce	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_reduce(HSQUIRRELVM v)$/;"	f	file:
array_remove	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_remove(HSQUIRRELVM v)$/;"	f	file:
array_resize	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_resize(HSQUIRRELVM v)$/;"	f	file:
array_reverse	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_reverse(HSQUIRRELVM v)$/;"	f	file:
array_slice	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_slice(HSQUIRRELVM v)$/;"	f	file:
array_sort	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_sort(HSQUIRRELVM v)$/;"	f	file:
array_top	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger array_top(HSQUIRRELVM v)$/;"	f	file:
base_array	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_array(HSQUIRRELVM v)$/;"	f	file:
base_assert	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_assert(HSQUIRRELVM v)$/;"	f	file:
base_callee	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_callee(HSQUIRRELVM v)$/;"	f	file:
base_collectgarbage	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_collectgarbage(HSQUIRRELVM v)$/;"	f	file:
base_compilestring	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_compilestring(HSQUIRRELVM v)$/;"	f	file:
base_dummy	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_dummy(HSQUIRRELVM v)$/;"	f	file:
base_enabledebuginfo	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_enabledebuginfo(HSQUIRRELVM v)$/;"	f	file:
base_error	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_error(HSQUIRRELVM v)$/;"	f	file:
base_funcs	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQRegFunction base_funcs[]={$/;"	v	file:
base_getconsttable	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_getconsttable(HSQUIRRELVM v)$/;"	f	file:
base_getroottable	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_getroottable(HSQUIRRELVM v)$/;"	f	file:
base_getstackinfos	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_getstackinfos(HSQUIRRELVM v)$/;"	f	file:
base_newthread	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_newthread(HSQUIRRELVM v)$/;"	f	file:
base_print	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_print(HSQUIRRELVM v)$/;"	f	file:
base_resurectureachable	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_resurectureachable(HSQUIRRELVM v)$/;"	f	file:
base_setconsttable	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_setconsttable(HSQUIRRELVM v)$/;"	f	file:
base_setdebughook	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_setdebughook(HSQUIRRELVM v)$/;"	f	file:
base_seterrorhandler	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_seterrorhandler(HSQUIRRELVM v)$/;"	f	file:
base_setroottable	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_setroottable(HSQUIRRELVM v)$/;"	f	file:
base_suspend	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_suspend(HSQUIRRELVM v)$/;"	f	file:
base_type	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger base_type(HSQUIRRELVM v)$/;"	f	file:
class_getattributes	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_getattributes(HSQUIRRELVM v)$/;"	f	file:
class_getbase	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_getbase(HSQUIRRELVM v)$/;"	f	file:
class_instance	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_instance(HSQUIRRELVM v)$/;"	f	file:
class_newmember	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_newmember(HSQUIRRELVM v)$/;"	f	file:
class_rawnewmember	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_rawnewmember(HSQUIRRELVM v)$/;"	f	file:
class_setattributes	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger class_setattributes(HSQUIRRELVM v)$/;"	f	file:
closure_acall	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_acall(HSQUIRRELVM v)$/;"	f	file:
closure_bindenv	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_bindenv(HSQUIRRELVM v)$/;"	f	file:
closure_call	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_call(HSQUIRRELVM v)$/;"	f	file:
closure_getinfos	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_getinfos(HSQUIRRELVM v) {$/;"	f	file:
closure_pacall	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_pacall(HSQUIRRELVM v)$/;"	f	file:
closure_pcall	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger closure_pcall(HSQUIRRELVM v)$/;"	f	file:
container_rawexists	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger container_rawexists(HSQUIRRELVM v)$/;"	f	file:
container_rawget	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger container_rawget(HSQUIRRELVM v)$/;"	f	file:
container_rawset	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger container_rawset(HSQUIRRELVM v)$/;"	f	file:
default_delegate_len	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger default_delegate_len(HSQUIRRELVM v)$/;"	f	file:
default_delegate_tofloat	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger default_delegate_tofloat(HSQUIRRELVM v)$/;"	f	file:
default_delegate_tointeger	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger default_delegate_tointeger(HSQUIRRELVM v)$/;"	f	file:
default_delegate_tostring	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger default_delegate_tostring(HSQUIRRELVM v)$/;"	f	file:
generator_getstatus	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger generator_getstatus(HSQUIRRELVM v)$/;"	f	file:
get_slice_params	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger get_slice_params(HSQUIRRELVM v,SQInteger &sidx,SQInteger &eidx,SQObjectPtr &o)$/;"	f	file:
instance_getclass	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger instance_getclass(HSQUIRRELVM v)$/;"	f	file:
number_delegate_tochar	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger number_delegate_tochar(HSQUIRRELVM v)$/;"	f	file:
obj_clear	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger obj_clear(HSQUIRRELVM v)$/;"	f	file:
obj_delegate_weakref	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger obj_delegate_weakref(HSQUIRRELVM v)$/;"	f	file:
sq_base_register	extlibs/squirrel/squirrel/sqbaselib.cpp	/^void sq_base_register(HSQUIRRELVM v)$/;"	f
str2num	extlibs/squirrel/squirrel/sqbaselib.cpp	/^bool str2num(const SQChar *s,SQObjectPtr &res)$/;"	f
string_find	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger string_find(HSQUIRRELVM v)$/;"	f	file:
string_slice	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger string_slice(HSQUIRRELVM v)$/;"	f	file:
table_getdelegate	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger table_getdelegate(HSQUIRRELVM v)$/;"	f	file:
table_rawdelete	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger table_rawdelete(HSQUIRRELVM v)$/;"	f	file:
table_setdelegate	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger table_setdelegate(HSQUIRRELVM v)$/;"	f	file:
thread_call	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger thread_call(HSQUIRRELVM v)$/;"	f	file:
thread_getstackinfos	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger thread_getstackinfos(HSQUIRRELVM v)$/;"	f	file:
thread_getstatus	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger thread_getstatus(HSQUIRRELVM v)$/;"	f	file:
thread_wakeup	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger thread_wakeup(HSQUIRRELVM v)$/;"	f	file:
weakref_ref	extlibs/squirrel/squirrel/sqbaselib.cpp	/^static SQInteger weakref_ref(HSQUIRRELVM v)$/;"	f	file:
CreateInstance	extlibs/squirrel/squirrel/sqclass.cpp	/^SQInstance *SQClass::CreateInstance()$/;"	f	class:SQClass
Finalize	extlibs/squirrel/squirrel/sqclass.cpp	/^void SQClass::Finalize() { $/;"	f	class:SQClass
Finalize	extlibs/squirrel/squirrel/sqclass.cpp	/^void SQInstance::Finalize() $/;"	f	class:SQInstance
GetAttributes	extlibs/squirrel/squirrel/sqclass.cpp	/^bool SQClass::GetAttributes(const SQObjectPtr &key,SQObjectPtr &outval)$/;"	f	class:SQClass
GetMetaMethod	extlibs/squirrel/squirrel/sqclass.cpp	/^bool SQInstance::GetMetaMethod(SQVM *v,SQMetaMethod mm,SQObjectPtr &res)$/;"	f	class:SQInstance
Init	extlibs/squirrel/squirrel/sqclass.cpp	/^void SQInstance::Init(SQSharedState *ss)$/;"	f	class:SQInstance
InstanceOf	extlibs/squirrel/squirrel/sqclass.cpp	/^bool SQInstance::InstanceOf(SQClass *trg)$/;"	f	class:SQInstance
NewSlot	extlibs/squirrel/squirrel/sqclass.cpp	/^bool SQClass::NewSlot(SQSharedState *ss,const SQObjectPtr &key,const SQObjectPtr &val,bool bstatic)$/;"	f	class:SQClass
Next	extlibs/squirrel/squirrel/sqclass.cpp	/^SQInteger SQClass::Next(const SQObjectPtr &refpos, SQObjectPtr &outkey, SQObjectPtr &outval)$/;"	f	class:SQClass
SQClass	extlibs/squirrel/squirrel/sqclass.cpp	/^SQClass::SQClass(SQSharedState *ss,SQClass *base)$/;"	f	class:SQClass
SQInstance	extlibs/squirrel/squirrel/sqclass.cpp	/^SQInstance::SQInstance(SQSharedState *ss, SQClass *c, SQInteger memsize)$/;"	f	class:SQInstance
SQInstance	extlibs/squirrel/squirrel/sqclass.cpp	/^SQInstance::SQInstance(SQSharedState *ss, SQInstance *i, SQInteger memsize)$/;"	f	class:SQInstance
SetAttributes	extlibs/squirrel/squirrel/sqclass.cpp	/^bool SQClass::SetAttributes(const SQObjectPtr &key,const SQObjectPtr &val)$/;"	f	class:SQClass
~SQClass	extlibs/squirrel/squirrel/sqclass.cpp	/^SQClass::~SQClass()$/;"	f	class:SQClass
~SQInstance	extlibs/squirrel/squirrel/sqclass.cpp	/^SQInstance::~SQInstance()$/;"	f	class:SQInstance
Clone	extlibs/squirrel/squirrel/sqclass.h	/^	SQInstance *Clone(SQSharedState *ss)$/;"	f	struct:SQInstance
Create	extlibs/squirrel/squirrel/sqclass.h	/^	static SQClass* Create(SQSharedState *ss,SQClass *base) {$/;"	f	struct:SQClass
Create	extlibs/squirrel/squirrel/sqclass.h	/^	static SQInstance* Create(SQSharedState *ss,SQClass *theclass) {$/;"	f	struct:SQInstance
Get	extlibs/squirrel/squirrel/sqclass.h	/^	bool Get(const SQObjectPtr &key,SQObjectPtr &val)  {$/;"	f	struct:SQInstance
Get	extlibs/squirrel/squirrel/sqclass.h	/^	bool Get(const SQObjectPtr &key,SQObjectPtr &val) {$/;"	f	struct:SQClass
GetConstructor	extlibs/squirrel/squirrel/sqclass.h	/^	bool GetConstructor(SQObjectPtr &ctor)$/;"	f	struct:SQClass
GetType	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectType GetType() {return OT_CLASS;}$/;"	f	struct:SQClass
GetType	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectType GetType() {return OT_INSTANCE;}$/;"	f	struct:SQInstance
Lock	extlibs/squirrel/squirrel/sqclass.h	/^	void Lock() { _locked = true; if(_base) _base->Lock(); }$/;"	f	struct:SQClass
MEMBER_TYPE_FIELD	extlibs/squirrel/squirrel/sqclass.h	/^#define MEMBER_TYPE_FIELD /;"	d
MEMBER_TYPE_METHOD	extlibs/squirrel/squirrel/sqclass.h	/^#define MEMBER_TYPE_METHOD /;"	d
Release	extlibs/squirrel/squirrel/sqclass.h	/^	void Release() { $/;"	f	struct:SQClass
Release	extlibs/squirrel/squirrel/sqclass.h	/^	void Release() {$/;"	f	struct:SQInstance
SQClass	extlibs/squirrel/squirrel/sqclass.h	/^struct SQClass : public CHAINABLE_OBJ$/;"	s
SQClassMember	extlibs/squirrel/squirrel/sqclass.h	/^struct SQClassMember {$/;"	s
SQClassMemberVec	extlibs/squirrel/squirrel/sqclass.h	/^typedef sqvector<SQClassMember> SQClassMemberVec;$/;"	t
SQInstance	extlibs/squirrel/squirrel/sqclass.h	/^struct SQInstance : public SQDelegable $/;"	s
Set	extlibs/squirrel/squirrel/sqclass.h	/^	bool Set(const SQObjectPtr &key,const SQObjectPtr &val) {$/;"	f	struct:SQInstance
_SQCLASS_H_	extlibs/squirrel/squirrel/sqclass.h	/^#define _SQCLASS_H_$/;"	d
_attributes	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectPtr _attributes;$/;"	m	struct:SQClass
_base	extlibs/squirrel/squirrel/sqclass.h	/^	SQClass *_base;$/;"	m	struct:SQClass
_class	extlibs/squirrel/squirrel/sqclass.h	/^	SQClass *_class;$/;"	m	struct:SQInstance
_constructoridx	extlibs/squirrel/squirrel/sqclass.h	/^	SQInteger _constructoridx;$/;"	m	struct:SQClass
_defaultvalues	extlibs/squirrel/squirrel/sqclass.h	/^	SQClassMemberVec _defaultvalues;$/;"	m	struct:SQClass
_hook	extlibs/squirrel/squirrel/sqclass.h	/^	SQRELEASEHOOK _hook;$/;"	m	struct:SQClass
_hook	extlibs/squirrel/squirrel/sqclass.h	/^	SQRELEASEHOOK _hook;$/;"	m	struct:SQInstance
_isfield	extlibs/squirrel/squirrel/sqclass.h	/^#define _isfield(/;"	d
_ismethod	extlibs/squirrel/squirrel/sqclass.h	/^#define _ismethod(/;"	d
_locked	extlibs/squirrel/squirrel/sqclass.h	/^	bool _locked;$/;"	m	struct:SQClass
_make_field_idx	extlibs/squirrel/squirrel/sqclass.h	/^#define _make_field_idx(/;"	d
_make_method_idx	extlibs/squirrel/squirrel/sqclass.h	/^#define _make_method_idx(/;"	d
_member_idx	extlibs/squirrel/squirrel/sqclass.h	/^#define _member_idx(/;"	d
_member_type	extlibs/squirrel/squirrel/sqclass.h	/^#define _member_type(/;"	d
_members	extlibs/squirrel/squirrel/sqclass.h	/^	SQTable *_members;$/;"	m	struct:SQClass
_memsize	extlibs/squirrel/squirrel/sqclass.h	/^	SQInteger _memsize;$/;"	m	struct:SQInstance
_metamethods	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectPtr _metamethods[MT_LAST];$/;"	m	struct:SQClass
_methods	extlibs/squirrel/squirrel/sqclass.h	/^	SQClassMemberVec _methods;$/;"	m	struct:SQClass
_typetag	extlibs/squirrel/squirrel/sqclass.h	/^	SQUserPointer _typetag;$/;"	m	struct:SQClass
_udsize	extlibs/squirrel/squirrel/sqclass.h	/^	SQInteger _udsize;$/;"	m	struct:SQClass
_userpointer	extlibs/squirrel/squirrel/sqclass.h	/^	SQUserPointer _userpointer;$/;"	m	struct:SQInstance
_values	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectPtr _values[1];$/;"	m	struct:SQInstance
attrs	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectPtr attrs;$/;"	m	struct:SQClassMember
calcinstancesize	extlibs/squirrel/squirrel/sqclass.h	/^#define calcinstancesize(/;"	d
val	extlibs/squirrel/squirrel/sqclass.h	/^	SQObjectPtr val;$/;"	m	struct:SQClassMember
Clone	extlibs/squirrel/squirrel/sqclosure.h	/^	SQClosure *Clone()$/;"	f	struct:SQClosure
Clone	extlibs/squirrel/squirrel/sqclosure.h	/^	SQNativeClosure *Clone()$/;"	f	struct:SQNativeClosure
Create	extlibs/squirrel/squirrel/sqclosure.h	/^	static SQClosure *Create(SQSharedState *ss,SQFunctionProto *func){$/;"	f	struct:SQClosure
Create	extlibs/squirrel/squirrel/sqclosure.h	/^	static SQGenerator *Create(SQSharedState *ss,SQClosure *closure){$/;"	f	struct:SQGenerator
Create	extlibs/squirrel/squirrel/sqclosure.h	/^	static SQNativeClosure *Create(SQSharedState *ss,SQFUNCTION func,SQInteger nouters)$/;"	f	struct:SQNativeClosure
Create	extlibs/squirrel/squirrel/sqclosure.h	/^	static SQOuter *Create(SQSharedState *ss, SQObjectPtr *outer)$/;"	f	struct:SQOuter
Finalize	extlibs/squirrel/squirrel/sqclosure.h	/^	void Finalize() { _NULL_SQOBJECT_VECTOR(_outervalues,_noutervalues); }$/;"	f	struct:SQNativeClosure
Finalize	extlibs/squirrel/squirrel/sqclosure.h	/^	void Finalize() { _value.Null(); }$/;"	f	struct:SQOuter
Finalize	extlibs/squirrel/squirrel/sqclosure.h	/^	void Finalize(){$/;"	f	struct:SQClosure
Finalize	extlibs/squirrel/squirrel/sqclosure.h	/^	void Finalize(){_stack.resize(0);_closure.Null();}$/;"	f	struct:SQGenerator
GetType	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectType GetType() {return OT_CLOSURE;}$/;"	f	struct:SQClosure
GetType	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectType GetType() {return OT_GENERATOR;}$/;"	f	struct:SQGenerator
GetType	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectType GetType() {return OT_NATIVECLOSURE;}$/;"	f	struct:SQNativeClosure
GetType	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectType GetType() {return OT_OUTER;}$/;"	f	struct:SQOuter
Kill	extlibs/squirrel/squirrel/sqclosure.h	/^    void Kill(){$/;"	f	struct:SQGenerator
Release	extlibs/squirrel/squirrel/sqclosure.h	/^	void Release()$/;"	f	struct:SQOuter
Release	extlibs/squirrel/squirrel/sqclosure.h	/^	void Release(){$/;"	f	struct:SQClosure
Release	extlibs/squirrel/squirrel/sqclosure.h	/^	void Release(){$/;"	f	struct:SQGenerator
Release	extlibs/squirrel/squirrel/sqclosure.h	/^	void Release(){$/;"	f	struct:SQNativeClosure
SQClosure	extlibs/squirrel/squirrel/sqclosure.h	/^	SQClosure(SQSharedState *ss,SQFunctionProto *func){_function = func; __ObjAddRef(_function); _base = NULL; INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this); _env = NULL;}$/;"	f	struct:SQClosure
SQClosure	extlibs/squirrel/squirrel/sqclosure.h	/^struct SQClosure : public CHAINABLE_OBJ$/;"	s
SQGenerator	extlibs/squirrel/squirrel/sqclosure.h	/^	SQGenerator(SQSharedState *ss,SQClosure *closure){_closure=closure;_state=eRunning;_ci._generator=NULL;INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this);}$/;"	f	struct:SQGenerator
SQGenerator	extlibs/squirrel/squirrel/sqclosure.h	/^struct SQGenerator : public CHAINABLE_OBJ $/;"	s
SQGeneratorState	extlibs/squirrel/squirrel/sqclosure.h	/^	enum SQGeneratorState{eRunning,eSuspended,eDead};$/;"	g	struct:SQGenerator
SQNativeClosure	extlibs/squirrel/squirrel/sqclosure.h	/^	SQNativeClosure(SQSharedState *ss,SQFUNCTION func){_function=func;INIT_CHAIN();ADD_TO_CHAIN(&_ss(this)->_gc_chain,this); _env = NULL;}$/;"	f	struct:SQNativeClosure
SQNativeClosure	extlibs/squirrel/squirrel/sqclosure.h	/^struct SQNativeClosure : public CHAINABLE_OBJ$/;"	s
SQOuter	extlibs/squirrel/squirrel/sqclosure.h	/^	SQOuter(SQSharedState *ss, SQObjectPtr *outer){_valptr = outer; _next = NULL; INIT_CHAIN(); ADD_TO_CHAIN(&_ss(this)->_gc_chain,this); }$/;"	f	struct:SQOuter
SQOuter	extlibs/squirrel/squirrel/sqclosure.h	/^struct SQOuter : public CHAINABLE_OBJ$/;"	s
_CALC_CLOSURE_SIZE	extlibs/squirrel/squirrel/sqclosure.h	/^#define _CALC_CLOSURE_SIZE(/;"	d
_CALC_NATVIVECLOSURE_SIZE	extlibs/squirrel/squirrel/sqclosure.h	/^#define _CALC_NATVIVECLOSURE_SIZE(/;"	d
_SQCLOSURE_H_	extlibs/squirrel/squirrel/sqclosure.h	/^#define _SQCLOSURE_H_$/;"	d
_base	extlibs/squirrel/squirrel/sqclosure.h	/^	SQClass *_base;$/;"	m	struct:SQClosure
_ci	extlibs/squirrel/squirrel/sqclosure.h	/^	SQVM::CallInfo _ci;$/;"	m	struct:SQGenerator
_closure	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr _closure;$/;"	m	struct:SQGenerator
_defaultparams	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr *_defaultparams;$/;"	m	struct:SQClosure
_env	extlibs/squirrel/squirrel/sqclosure.h	/^	SQWeakRef *_env;$/;"	m	struct:SQClosure
_env	extlibs/squirrel/squirrel/sqclosure.h	/^	SQWeakRef *_env;$/;"	m	struct:SQNativeClosure
_etraps	extlibs/squirrel/squirrel/sqclosure.h	/^	ExceptionsTraps _etraps;$/;"	m	struct:SQGenerator
_function	extlibs/squirrel/squirrel/sqclosure.h	/^	SQFUNCTION _function;$/;"	m	struct:SQNativeClosure
_function	extlibs/squirrel/squirrel/sqclosure.h	/^	SQFunctionProto *_function;$/;"	m	struct:SQClosure
_idx	extlibs/squirrel/squirrel/sqclosure.h	/^	SQInteger    _idx;     \/* idx in stack array, for relocation *\/$/;"	m	struct:SQOuter
_name	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr _name;$/;"	m	struct:SQNativeClosure
_next	extlibs/squirrel/squirrel/sqclosure.h	/^	SQOuter     *_next;    \/* pointer to next outer when frame is open   *\/$/;"	m	struct:SQOuter
_noutervalues	extlibs/squirrel/squirrel/sqclosure.h	/^	SQUnsignedInteger _noutervalues;$/;"	m	struct:SQNativeClosure
_nparamscheck	extlibs/squirrel/squirrel/sqclosure.h	/^	SQInteger _nparamscheck;$/;"	m	struct:SQNativeClosure
_outervalues	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr *_outervalues;$/;"	m	struct:SQClosure
_outervalues	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr *_outervalues;$/;"	m	struct:SQNativeClosure
_stack	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtrVec _stack;$/;"	m	struct:SQGenerator
_state	extlibs/squirrel/squirrel/sqclosure.h	/^	SQGeneratorState _state;$/;"	m	struct:SQGenerator
_typecheck	extlibs/squirrel/squirrel/sqclosure.h	/^	SQIntVec _typecheck;$/;"	m	struct:SQNativeClosure
_valptr	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr *_valptr;  \/* pointer to value on stack, or _value below *\/$/;"	m	struct:SQOuter
_value	extlibs/squirrel/squirrel/sqclosure.h	/^	SQObjectPtr  _value;   \/* value of outer after stack frame is closed *\/$/;"	m	struct:SQOuter
eDead	extlibs/squirrel/squirrel/sqclosure.h	/^	enum SQGeneratorState{eRunning,eSuspended,eDead};$/;"	e	enum:SQGenerator::SQGeneratorState
eRunning	extlibs/squirrel/squirrel/sqclosure.h	/^	enum SQGeneratorState{eRunning,eSuspended,eDead};$/;"	e	enum:SQGenerator::SQGeneratorState
eSuspended	extlibs/squirrel/squirrel/sqclosure.h	/^	enum SQGeneratorState{eRunning,eSuspended,eDead};$/;"	e	enum:SQGenerator::SQGeneratorState
~SQGenerator	extlibs/squirrel/squirrel/sqclosure.h	/^	~SQGenerator()$/;"	f	struct:SQGenerator
~SQNativeClosure	extlibs/squirrel/squirrel/sqclosure.h	/^	~SQNativeClosure()$/;"	f	struct:SQNativeClosure
~SQOuter	extlibs/squirrel/squirrel/sqclosure.h	/^	~SQOuter() { REMOVE_FROM_CHAIN(&_ss(this)->_gc_chain,this); }$/;"	f	struct:SQOuter
BASE	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define BASE /;"	d	file:
BEGIN_BREAKBLE_BLOCK	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define BEGIN_BREAKBLE_BLOCK(/;"	d	file:
BEGIN_SCOPE	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define BEGIN_SCOPE(/;"	d	file:
BIN_EXP	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	template<typename T> void BIN_EXP(SQOpcode op, T f,SQInteger op3 = 0)$/;"	f	class:SQCompiler
BitwiseAndExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void BitwiseAndExp()$/;"	f	class:SQCompiler
BitwiseOrExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void BitwiseOrExp()$/;"	f	class:SQCompiler
BitwiseXorExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void BitwiseXorExp()$/;"	f	class:SQCompiler
ChooseArithOpByToken	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQOpcode ChooseArithOpByToken(SQInteger tok)$/;"	f	class:SQCompiler
ChooseCompArithCharByToken	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger ChooseCompArithCharByToken(SQInteger tok)$/;"	f	class:SQCompiler
ClassExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ClassExp()$/;"	f	class:SQCompiler
ClassStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ClassStatement()$/;"	f	class:SQCompiler
CommaExpr	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void CommaExpr()$/;"	f	class:SQCompiler
CompExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void CompExp()$/;"	f	class:SQCompiler
Compile	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	bool Compile(SQObjectPtr &o)$/;"	f	class:SQCompiler
Compile	extlibs/squirrel/squirrel/sqcompiler.cpp	/^bool Compile(SQVM *vm,SQLEXREADFUNC rg, SQUserPointer up, const SQChar *sourcename, SQObjectPtr &out, bool raiseerror, bool lineinfo)$/;"	f
CreateFunction	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void CreateFunction(SQObject &name,bool lambda = false)$/;"	f	class:SQCompiler
DeleteExpr	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void DeleteExpr()$/;"	f	class:SQCompiler
DoWhileStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void DoWhileStatement()$/;"	f	class:SQCompiler
END_BREAKBLE_BLOCK	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define END_BREAKBLE_BLOCK(/;"	d	file:
END_SCOPE	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define END_SCOPE(/;"	d	file:
END_SCOPE_NO_CLOSE	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define END_SCOPE_NO_CLOSE(/;"	d	file:
EXPR	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define EXPR /;"	d	file:
Emit2ArgsOP	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Emit2ArgsOP(SQOpcode op, SQInteger p3 = 0)$/;"	f	class:SQCompiler
EmitCompoundArith	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EmitCompoundArith(SQInteger tok, SQInteger etype, SQInteger pos)$/;"	f	class:SQCompiler
EmitDerefOp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EmitDerefOp(SQOpcode op)$/;"	f	class:SQCompiler
EmitLoadConstFloat	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EmitLoadConstFloat(SQFloat value,SQInteger target)$/;"	f	class:SQCompiler
EmitLoadConstInt	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EmitLoadConstInt(SQInteger value,SQInteger target)$/;"	f	class:SQCompiler
EnumStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EnumStatement()$/;"	f	class:SQCompiler
EqExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void EqExp()$/;"	f	class:SQCompiler
Error	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Error(const SQChar *s, ...)$/;"	f	class:SQCompiler
Expect	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQObject Expect(SQInteger tok)$/;"	f	class:SQCompiler
ExpectScalar	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQObject ExpectScalar()$/;"	f	class:SQCompiler
Expression	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Expression()$/;"	f	class:SQCompiler
Factor	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger Factor()$/;"	f	class:SQCompiler
ForEachStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ForEachStatement()$/;"	f	class:SQCompiler
ForStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ForStatement()$/;"	f	class:SQCompiler
FunctionCallArgs	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void FunctionCallArgs()$/;"	f	class:SQCompiler
FunctionExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void FunctionExp(SQInteger ftype,bool lambda = false)$/;"	f	class:SQCompiler
FunctionStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void FunctionStatement()$/;"	f	class:SQCompiler
IfStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void IfStatement()$/;"	f	class:SQCompiler
IsEndOfStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	bool IsEndOfStatement() { return ((_lex._prevtoken == _SC('\\n')) || (_token == SQUIRREL_EOB) || (_token == _SC('}')) || (_token == _SC(';'))); }$/;"	f	class:SQCompiler
LOCAL	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define LOCAL /;"	d	file:
Lex	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Lex(){	_token = _lex.Lex();}$/;"	f	class:SQCompiler
LocalDeclStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void LocalDeclStatement()$/;"	f	class:SQCompiler
LogicalAndExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void LogicalAndExp()$/;"	f	class:SQCompiler
LogicalOrExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void LogicalOrExp()$/;"	f	class:SQCompiler
MoveIfCurrentTargetIsLocal	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void MoveIfCurrentTargetIsLocal() {$/;"	f	class:SQCompiler
MultExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void MultExp()$/;"	f	class:SQCompiler
NeedGet	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	bool NeedGet()$/;"	f	class:SQCompiler
OBJECT	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define OBJECT /;"	d	file:
OUTER	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define OUTER /;"	d	file:
OptionalSemicolon	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void OptionalSemicolon()$/;"	f	class:SQCompiler
ParseTableOrClass	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ParseTableOrClass(SQInteger separator,SQInteger terminator)$/;"	f	class:SQCompiler
PlusExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void PlusExp()$/;"	f	class:SQCompiler
PrefixIncDec	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void PrefixIncDec(SQInteger token)$/;"	f	class:SQCompiler
PrefixedExpr	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void PrefixedExpr()$/;"	f	class:SQCompiler
RESOLVE_OUTERS	extlibs/squirrel/squirrel/sqcompiler.cpp	/^#define RESOLVE_OUTERS(/;"	d	file:
ResolveBreaks	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ResolveBreaks(SQFuncState *funcstate, SQInteger ntoresolve)$/;"	f	class:SQCompiler
ResolveContinues	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ResolveContinues(SQFuncState *funcstate, SQInteger ntoresolve, SQInteger targetpos)$/;"	f	class:SQCompiler
SQCompiler	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQCompiler(SQVM *v, SQLEXREADFUNC rg, SQUserPointer up, const SQChar* sourcename, bool raiseerror, bool lineinfo)$/;"	f	class:SQCompiler
SQCompiler	extlibs/squirrel/squirrel/sqcompiler.cpp	/^class SQCompiler$/;"	c	file:
SQExpState	extlibs/squirrel/squirrel/sqcompiler.cpp	/^struct SQExpState {$/;"	s	file:
SQScope	extlibs/squirrel/squirrel/sqcompiler.cpp	/^struct SQScope {$/;"	s	file:
ShiftExp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void ShiftExp()$/;"	f	class:SQCompiler
Statement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Statement(bool closeframe = true)$/;"	f	class:SQCompiler
Statements	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void Statements()$/;"	f	class:SQCompiler
SwitchStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void SwitchStatement()$/;"	f	class:SQCompiler
ThrowError	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	static void ThrowError(void *ud, const SQChar *s) {$/;"	f	class:SQCompiler
TryCatchStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void TryCatchStatement()$/;"	f	class:SQCompiler
UnaryOP	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void UnaryOP(SQOpcode op)$/;"	f	class:SQCompiler
WhileStatement	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	void WhileStatement()$/;"	f	class:SQCompiler
_debugline	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger _debugline;$/;"	m	class:SQCompiler	file:
_debugop	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger _debugop;$/;"	m	class:SQCompiler	file:
_errorjmp	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	jmp_buf _errorjmp;$/;"	m	class:SQCompiler	file:
_es	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQExpState   _es;$/;"	m	class:SQCompiler	file:
_fs	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQFuncState *_fs;$/;"	m	class:SQCompiler	file:
_lex	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQLexer _lex;$/;"	m	class:SQCompiler	file:
_lineinfo	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	bool _lineinfo;$/;"	m	class:SQCompiler	file:
_raiseerror	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	bool _raiseerror;$/;"	m	class:SQCompiler	file:
_scope	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQScope _scope;$/;"	m	class:SQCompiler	file:
_sourcename	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQObjectPtr _sourcename;$/;"	m	class:SQCompiler	file:
_token	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger _token;$/;"	m	class:SQCompiler	file:
_vm	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQVM *_vm;$/;"	m	class:SQCompiler	file:
compilererror	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQChar *compilererror;$/;"	m	class:SQCompiler	file:
donot_get	extlibs/squirrel/squirrel/sqcompiler.cpp	/^  bool       donot_get;   \/* signal not to deref the next value *\/$/;"	m	struct:SQExpState	file:
epos	extlibs/squirrel/squirrel/sqcompiler.cpp	/^  SQInteger  epos;        \/* expr. location on stack; -1 for OBJECT and BASE *\/$/;"	m	struct:SQExpState	file:
etype	extlibs/squirrel/squirrel/sqcompiler.cpp	/^  SQInteger  etype;       \/* expr. type; one of EXPR, OBJECT, BASE, OUTER or LOCAL *\/$/;"	m	struct:SQExpState	file:
outers	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger outers;$/;"	m	struct:SQScope	file:
stacksize	extlibs/squirrel/squirrel/sqcompiler.cpp	/^	SQInteger stacksize;$/;"	m	struct:SQScope	file:
CompilerErrorFunc	extlibs/squirrel/squirrel/sqcompiler.h	/^typedef void(*CompilerErrorFunc)(void *ud, const SQChar *s);$/;"	t
TK_3WAYSCMP	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_3WAYSCMP /;"	d
TK_AND	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_AND	/;"	d
TK_ARROW	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_ARROW	/;"	d
TK_ATTR_CLOSE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_ATTR_CLOSE /;"	d
TK_ATTR_OPEN	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_ATTR_OPEN /;"	d
TK_BASE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_BASE	/;"	d
TK_BREAK	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_BREAK	/;"	d
TK_CASE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_CASE /;"	d
TK_CATCH	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_CATCH /;"	d
TK_CLASS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_CLASS /;"	d
TK_CLONE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_CLONE	/;"	d
TK_CONST	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_CONST /;"	d
TK_CONSTRUCTOR	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_CONSTRUCTOR /;"	d
TK_CONTINUE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_CONTINUE	/;"	d
TK_DEFAULT	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_DEFAULT /;"	d
TK_DELETE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_DELETE	/;"	d
TK_DIVEQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_DIVEQ /;"	d
TK_DO	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_DO	/;"	d
TK_DOUBLE_COLON	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_DOUBLE_COLON /;"	d
TK_ELSE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_ELSE	/;"	d
TK_ENUM	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_ENUM /;"	d
TK_EQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_EQ	/;"	d
TK_EXTENDS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_EXTENDS /;"	d
TK_FALSE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_FALSE /;"	d
TK_FLOAT	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_FLOAT	/;"	d
TK_FOR	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_FOR	/;"	d
TK_FOREACH	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_FOREACH	/;"	d
TK_FUNCTION	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_FUNCTION	/;"	d
TK_GE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_GE	/;"	d
TK_IDENTIFIER	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_IDENTIFIER	/;"	d
TK_IF	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_IF	/;"	d
TK_IN	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_IN	/;"	d
TK_INSTANCEOF	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_INSTANCEOF /;"	d
TK_INTEGER	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_INTEGER	/;"	d
TK_LE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_LE	/;"	d
TK_LOCAL	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_LOCAL	/;"	d
TK_MINUSEQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_MINUSEQ	/;"	d
TK_MINUSMINUS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_MINUSMINUS /;"	d
TK_MODEQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_MODEQ /;"	d
TK_MODULO	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_MODULO	/;"	d
TK_MULEQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_MULEQ /;"	d
TK_NE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_NE	/;"	d
TK_NEWSLOT	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_NEWSLOT	/;"	d
TK_NULL	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_NULL	/;"	d
TK_OR	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_OR	/;"	d
TK_PLUSEQ	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_PLUSEQ	/;"	d
TK_PLUSPLUS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_PLUSPLUS /;"	d
TK_RESUME	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_RESUME /;"	d
TK_RETURN	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_RETURN	/;"	d
TK_SHIFTL	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_SHIFTL /;"	d
TK_SHIFTR	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_SHIFTR /;"	d
TK_STATIC	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_STATIC /;"	d
TK_STRING_LITERAL	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_STRING_LITERAL	/;"	d
TK_SWITCH	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_SWITCH	/;"	d
TK_THIS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_THIS /;"	d
TK_THROW	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_THROW /;"	d
TK_TRUE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_TRUE /;"	d
TK_TRY	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_TRY /;"	d
TK_TYPEOF	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_TYPEOF	/;"	d
TK_UMINUS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_UMINUS	/;"	d
TK_USHIFTR	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_USHIFTR /;"	d
TK_VARPARAMS	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_VARPARAMS /;"	d
TK_WHILE	extlibs/squirrel/squirrel/sqcompiler.h	/^#define	TK_WHILE	/;"	d
TK_YIELD	extlibs/squirrel/squirrel/sqcompiler.h	/^#define TK_YIELD /;"	d
_SQCOMPILER_H_	extlibs/squirrel/squirrel/sqcompiler.h	/^#define _SQCOMPILER_H_$/;"	d
PrintObjVal	extlibs/squirrel/squirrel/sqdebug.cpp	/^SQString *SQVM::PrintObjVal(const SQObjectPtr &o)$/;"	f	class:SQVM
Raise_CompareError	extlibs/squirrel/squirrel/sqdebug.cpp	/^void SQVM::Raise_CompareError(const SQObject &o1, const SQObject &o2)$/;"	f	class:SQVM
Raise_Error	extlibs/squirrel/squirrel/sqdebug.cpp	/^void SQVM::Raise_Error(const SQChar *s, ...)$/;"	f	class:SQVM
Raise_Error	extlibs/squirrel/squirrel/sqdebug.cpp	/^void SQVM::Raise_Error(const SQObjectPtr &desc)$/;"	f	class:SQVM
Raise_IdxError	extlibs/squirrel/squirrel/sqdebug.cpp	/^void SQVM::Raise_IdxError(const SQObjectPtr &o)$/;"	f	class:SQVM
Raise_ParamTypeError	extlibs/squirrel/squirrel/sqdebug.cpp	/^void SQVM::Raise_ParamTypeError(SQInteger nparam,SQInteger typemask,SQInteger type)$/;"	f	class:SQVM
sq_getfunctioninfo	extlibs/squirrel/squirrel/sqdebug.cpp	/^SQRESULT sq_getfunctioninfo(HSQUIRRELVM v,SQInteger level,SQFunctionInfo *fi)$/;"	f
sq_stackinfos	extlibs/squirrel/squirrel/sqdebug.cpp	/^SQRESULT sq_stackinfos(HSQUIRRELVM v, SQInteger level, SQStackInfos *si)$/;"	f
Create	extlibs/squirrel/squirrel/sqfuncproto.h	/^	static SQFunctionProto *Create(SQSharedState *ss,SQInteger ninstructions,$/;"	f	struct:SQFunctionProto
Finalize	extlibs/squirrel/squirrel/sqfuncproto.h	/^	void Finalize(){ _NULL_SQOBJECT_VECTOR(_literals,_nliterals); }$/;"	f	struct:SQFunctionProto
GetType	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectType GetType() {return OT_FUNCPROTO;}$/;"	f	struct:SQFunctionProto
Release	extlibs/squirrel/squirrel/sqfuncproto.h	/^	void Release(){ $/;"	f	struct:SQFunctionProto
SQFunctionProto	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQFunctionProto : public CHAINABLE_OBJ$/;"	s
SQLineInfo	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQLineInfo { SQInteger _line;SQInteger _op; };$/;"	s
SQLineInfoVec	extlibs/squirrel/squirrel/sqfuncproto.h	/^typedef sqvector<SQLineInfo> SQLineInfoVec;$/;"	t
SQLocalVarInfo	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQLocalVarInfo():_start_op(0),_end_op(0),_pos(0){}$/;"	f	struct:SQLocalVarInfo
SQLocalVarInfo	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQLocalVarInfo(const SQLocalVarInfo &lvi)$/;"	f	struct:SQLocalVarInfo
SQLocalVarInfo	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQLocalVarInfo$/;"	s
SQLocalVarInfoVec	extlibs/squirrel/squirrel/sqfuncproto.h	/^typedef sqvector<SQLocalVarInfo> SQLocalVarInfoVec;$/;"	t
SQOuterType	extlibs/squirrel/squirrel/sqfuncproto.h	/^enum SQOuterType {$/;"	g
SQOuterVar	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQOuterVar(){}$/;"	f	struct:SQOuterVar
SQOuterVar	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQOuterVar(const SQObjectPtr &name,const SQObjectPtr &src,SQOuterType t)$/;"	f	struct:SQOuterVar
SQOuterVar	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQOuterVar(const SQOuterVar &ov)$/;"	f	struct:SQOuterVar
SQOuterVar	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQOuterVar$/;"	s
SQOuterVarVec	extlibs/squirrel/squirrel/sqfuncproto.h	/^typedef sqvector<SQOuterVar> SQOuterVarVec;$/;"	t
_FUNC_SIZE	extlibs/squirrel/squirrel/sqfuncproto.h	/^#define _FUNC_SIZE(/;"	d
_SQFUNCTION_H_	extlibs/squirrel/squirrel/sqfuncproto.h	/^#define _SQFUNCTION_H_$/;"	d
_bgenerator	extlibs/squirrel/squirrel/sqfuncproto.h	/^	bool _bgenerator;$/;"	m	struct:SQFunctionProto
_defaultparams	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger *_defaultparams;$/;"	m	struct:SQFunctionProto
_end_op	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQUnsignedInteger _end_op;$/;"	m	struct:SQLocalVarInfo
_functions	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr *_functions;$/;"	m	struct:SQFunctionProto
_instructions	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInstruction _instructions[1];$/;"	m	struct:SQFunctionProto
_line	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQLineInfo { SQInteger _line;SQInteger _op; };$/;"	m	struct:SQLineInfo
_lineinfos	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQLineInfo *_lineinfos;$/;"	m	struct:SQFunctionProto
_literals	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr *_literals;$/;"	m	struct:SQFunctionProto
_localvarinfos	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQLocalVarInfo *_localvarinfos;$/;"	m	struct:SQFunctionProto
_name	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr _name;$/;"	m	struct:SQFunctionProto
_name	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr _name;$/;"	m	struct:SQLocalVarInfo
_name	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr _name;$/;"	m	struct:SQOuterVar
_ndefaultparams	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _ndefaultparams;$/;"	m	struct:SQFunctionProto
_nfunctions	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _nfunctions;$/;"	m	struct:SQFunctionProto
_ninstructions	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _ninstructions;$/;"	m	struct:SQFunctionProto
_nlineinfos	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _nlineinfos;$/;"	m	struct:SQFunctionProto
_nliterals	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _nliterals;$/;"	m	struct:SQFunctionProto
_nlocalvarinfos	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _nlocalvarinfos;$/;"	m	struct:SQFunctionProto
_noutervalues	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _noutervalues;$/;"	m	struct:SQFunctionProto
_nparameters	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _nparameters;$/;"	m	struct:SQFunctionProto
_op	extlibs/squirrel/squirrel/sqfuncproto.h	/^struct SQLineInfo { SQInteger _line;SQInteger _op; };$/;"	m	struct:SQLineInfo
_outervalues	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQOuterVar *_outervalues;$/;"	m	struct:SQFunctionProto
_parameters	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr *_parameters;$/;"	m	struct:SQFunctionProto
_pos	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQUnsignedInteger _pos;$/;"	m	struct:SQLocalVarInfo
_sourcename	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr _sourcename;$/;"	m	struct:SQFunctionProto
_src	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQObjectPtr _src;$/;"	m	struct:SQOuterVar
_stacksize	extlibs/squirrel/squirrel/sqfuncproto.h	/^    SQInteger _stacksize;$/;"	m	struct:SQFunctionProto
_start_op	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQUnsignedInteger _start_op;$/;"	m	struct:SQLocalVarInfo
_type	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQOuterType _type;$/;"	m	struct:SQOuterVar
_varparams	extlibs/squirrel/squirrel/sqfuncproto.h	/^	SQInteger _varparams;$/;"	m	struct:SQFunctionProto
otLOCAL	extlibs/squirrel/squirrel/sqfuncproto.h	/^	otLOCAL = 0,$/;"	e	enum:SQOuterType
otOUTER	extlibs/squirrel/squirrel/sqfuncproto.h	/^	otOUTER = 1$/;"	e	enum:SQOuterType
AddInstruction	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::AddInstruction(SQInstruction &i)$/;"	f	class:SQFuncState
AddLineInfos	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::AddLineInfos(SQInteger line,bool lineop,bool force)$/;"	f	class:SQFuncState
AddParameter	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::AddParameter(const SQObject &name)$/;"	f	class:SQFuncState
AllocStackPos	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::AllocStackPos()$/;"	f	class:SQFuncState
BuildProto	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQFunctionProto *SQFuncState::BuildProto()$/;"	f	class:SQFuncState
CountOuters	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::CountOuters(SQInteger stacksize)$/;"	f	class:SQFuncState
CreateString	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQObject SQFuncState::CreateString(const SQChar *s,SQInteger len)$/;"	f	class:SQFuncState
CreateTable	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQObject SQFuncState::CreateTable()$/;"	f	class:SQFuncState
DiscardTarget	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::DiscardTarget()$/;"	f	class:SQFuncState
Dump	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::Dump(SQFunctionProto *func)$/;"	f	class:SQFuncState
DumpLiteral	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void DumpLiteral(SQObjectPtr &o)$/;"	f
Error	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::Error(const SQChar *err)$/;"	f	class:SQFuncState
GetConstant	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetConstant(const SQObject &cons)$/;"	f	class:SQFuncState
GetLocalVariable	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetLocalVariable(const SQObject &name)$/;"	f	class:SQFuncState
GetNumericConstant	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetNumericConstant(const SQFloat cons)$/;"	f	class:SQFuncState
GetNumericConstant	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetNumericConstant(const SQInteger cons)$/;"	f	class:SQFuncState
GetOuterVariable	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetOuterVariable(const SQObject &name)$/;"	f	class:SQFuncState
GetStackSize	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetStackSize()$/;"	f	class:SQFuncState
GetUpTarget	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::GetUpTarget(SQInteger n){$/;"	f	class:SQFuncState
IsConstant	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^bool SQFuncState::IsConstant(const SQObject &name,SQObject &e)$/;"	f	class:SQFuncState
IsLocal	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^bool SQFuncState::IsLocal(SQUnsignedInteger stkpos)$/;"	f	class:SQFuncState
MarkLocalAsOuter	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::MarkLocalAsOuter(SQInteger pos)$/;"	f	class:SQFuncState
PopChildState	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::PopChildState()$/;"	f	class:SQFuncState
PopTarget	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::PopTarget()$/;"	f	class:SQFuncState
PushChildState	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQFuncState *SQFuncState::PushChildState(SQSharedState *ss)$/;"	f	class:SQFuncState
PushLocalVariable	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::PushLocalVariable(const SQObject &name)$/;"	f	class:SQFuncState
PushTarget	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::PushTarget(SQInteger n)$/;"	f	class:SQFuncState
SQFuncState	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQFuncState::SQFuncState(SQSharedState *ss,SQFuncState *parent,CompilerErrorFunc efunc,void *ed)$/;"	f	class:SQFuncState
SetIntructionParam	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::SetIntructionParam(SQInteger pos,SQInteger arg,SQInteger val)$/;"	f	class:SQFuncState
SetIntructionParams	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::SetIntructionParams(SQInteger pos,SQInteger arg0,SQInteger arg1,SQInteger arg2,SQInteger arg3)$/;"	f	class:SQFuncState
SetStackSize	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^void SQFuncState::SetStackSize(SQInteger n)$/;"	f	class:SQFuncState
TopTarget	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInteger SQFuncState::TopTarget(){$/;"	f	class:SQFuncState
g_InstrDesc	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQInstructionDesc g_InstrDesc[]={$/;"	v
~SQFuncState	extlibs/squirrel/squirrel/sqfuncstate.cpp	/^SQFuncState::~SQFuncState()$/;"	f	class:SQFuncState
AddDefaultParam	extlibs/squirrel/squirrel/sqfuncstate.h	/^	void AddDefaultParam(SQInteger trg) { _defaultparams.push_back(trg); }$/;"	f	struct:SQFuncState
AddInstruction	extlibs/squirrel/squirrel/sqfuncstate.h	/^	void AddInstruction(SQOpcode _op,SQInteger arg0=0,SQInteger arg1=0,SQInteger arg2=0,SQInteger arg3=0){SQInstruction i(_op,arg0,arg1,arg2,arg3);AddInstruction(i);}$/;"	f	struct:SQFuncState
GetCurrentPos	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger GetCurrentPos(){return _instructions.size()-1;}$/;"	f	struct:SQFuncState
GetDefaultParamCount	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger GetDefaultParamCount() { return _defaultparams.size(); }$/;"	f	struct:SQFuncState
GetInstruction	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInstruction &GetInstruction(SQInteger pos){return _instructions[pos];}$/;"	f	struct:SQFuncState
PopInstructions	extlibs/squirrel/squirrel/sqfuncstate.h	/^	void PopInstructions(SQInteger size){for(SQInteger i=0;i<size;i++)_instructions.pop_back();}$/;"	f	struct:SQFuncState
SQFuncState	extlibs/squirrel/squirrel/sqfuncstate.h	/^struct SQFuncState$/;"	s
SnoozeOpt	extlibs/squirrel/squirrel/sqfuncstate.h	/^	void SnoozeOpt(){_optimization=false;}$/;"	f	struct:SQFuncState
_SQFUNCSTATE_H_	extlibs/squirrel/squirrel/sqfuncstate.h	/^#define _SQFUNCSTATE_H_$/;"	d
_bgenerator	extlibs/squirrel/squirrel/sqfuncstate.h	/^	bool _bgenerator;$/;"	m	struct:SQFuncState
_breaktargets	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _breaktargets;$/;"	m	struct:SQFuncState
_childstates	extlibs/squirrel/squirrel/sqfuncstate.h	/^	sqvector<SQFuncState*> _childstates;$/;"	m	struct:SQFuncState
_continuetargets	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _continuetargets;$/;"	m	struct:SQFuncState
_defaultparams	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _defaultparams;$/;"	m	struct:SQFuncState
_errfunc	extlibs/squirrel/squirrel/sqfuncstate.h	/^	CompilerErrorFunc _errfunc;$/;"	m	struct:SQFuncState
_errtarget	extlibs/squirrel/squirrel/sqfuncstate.h	/^	void *_errtarget;$/;"	m	struct:SQFuncState
_functions	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtrVec _functions;$/;"	m	struct:SQFuncState
_instructions	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInstructionVec _instructions;$/;"	m	struct:SQFuncState
_lastline	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _lastline;$/;"	m	struct:SQFuncState
_lineinfos	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQLineInfoVec _lineinfos;$/;"	m	struct:SQFuncState
_literals	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtr _literals;$/;"	m	struct:SQFuncState
_localvarinfos	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQLocalVarInfoVec _localvarinfos;$/;"	m	struct:SQFuncState
_name	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtr _name;$/;"	m	struct:SQFuncState
_nliterals	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _nliterals;$/;"	m	struct:SQFuncState
_optimization	extlibs/squirrel/squirrel/sqfuncstate.h	/^	bool _optimization;$/;"	m	struct:SQFuncState
_outers	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _outers;$/;"	m	struct:SQFuncState
_outervalues	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQOuterVarVec _outervalues;$/;"	m	struct:SQFuncState
_parameters	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtrVec _parameters;$/;"	m	struct:SQFuncState
_parent	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQFuncState *_parent;$/;"	m	struct:SQFuncState
_returnexp	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _returnexp;$/;"	m	struct:SQFuncState
_scope_blocks	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _scope_blocks;$/;"	m	struct:SQFuncState
_sharedstate	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQFuncState
_sourcename	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtr _sourcename;$/;"	m	struct:SQFuncState
_ss	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQSharedState *_ss;$/;"	m	struct:SQFuncState
_stacksize	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _stacksize;$/;"	m	struct:SQFuncState
_strings	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQObjectPtr _strings;$/;"	m	struct:SQFuncState
_targetstack	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _targetstack;$/;"	m	struct:SQFuncState
_traps	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQInteger _traps; \/\/contains number of nested exception traps$/;"	m	struct:SQFuncState
_unresolvedbreaks	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _unresolvedbreaks;$/;"	m	struct:SQFuncState
_unresolvedcontinues	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQIntVec _unresolvedcontinues;$/;"	m	struct:SQFuncState
_varparams	extlibs/squirrel/squirrel/sqfuncstate.h	/^	bool _varparams;$/;"	m	struct:SQFuncState
_vlocals	extlibs/squirrel/squirrel/sqfuncstate.h	/^	SQLocalVarInfoVec _vlocals;$/;"	m	struct:SQFuncState
ADD_KEYWORD	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define ADD_KEYWORD(/;"	d	file:
APPEND_CHAR	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define APPEND_CHAR(/;"	d	file:
CUR_CHAR	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define CUR_CHAR /;"	d	file:
Error	extlibs/squirrel/squirrel/sqlexer.cpp	/^void SQLexer::Error(const SQChar *err)$/;"	f	class:SQLexer
GetIDType	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger SQLexer::GetIDType(SQChar *s)$/;"	f	class:SQLexer
INIT_TEMP_STRING	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define INIT_TEMP_STRING(/;"	d	file:
IS_EOB	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define IS_EOB(/;"	d	file:
Init	extlibs/squirrel/squirrel/sqlexer.cpp	/^void SQLexer::Init(SQSharedState *ss, SQLEXREADFUNC rg, SQUserPointer up,CompilerErrorFunc efunc,void *ed)$/;"	f	class:SQLexer
Lex	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger SQLexer::Lex()$/;"	f	class:SQLexer
LexBlockComment	extlibs/squirrel/squirrel/sqlexer.cpp	/^void SQLexer::LexBlockComment()$/;"	f	class:SQLexer
LexHexadecimal	extlibs/squirrel/squirrel/sqlexer.cpp	/^void LexHexadecimal(const SQChar *s,SQUnsignedInteger *res)$/;"	f
LexInteger	extlibs/squirrel/squirrel/sqlexer.cpp	/^void LexInteger(const SQChar *s,SQUnsignedInteger *res)$/;"	f
LexLineComment	extlibs/squirrel/squirrel/sqlexer.cpp	/^void SQLexer::LexLineComment()$/;"	f	class:SQLexer
LexOctal	extlibs/squirrel/squirrel/sqlexer.cpp	/^void LexOctal(const SQChar *s,SQUnsignedInteger *res)$/;"	f
MAX_HEX_DIGITS	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define MAX_HEX_DIGITS /;"	d	file:
NEXT	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define NEXT(/;"	d	file:
Next	extlibs/squirrel/squirrel/sqlexer.cpp	/^void SQLexer::Next()$/;"	f	class:SQLexer
RETURN_TOKEN	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define RETURN_TOKEN(/;"	d	file:
ReadID	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger SQLexer::ReadID()$/;"	f	class:SQLexer
ReadNumber	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger SQLexer::ReadNumber()$/;"	f	class:SQLexer
ReadString	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger SQLexer::ReadString(SQInteger ndelim,bool verbatim)$/;"	f	class:SQLexer
SQLexer	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQLexer::SQLexer(){}$/;"	f	class:SQLexer
TERMINATE_BUFFER	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define TERMINATE_BUFFER(/;"	d	file:
TFLOAT	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define TFLOAT /;"	d	file:
THEX	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define THEX /;"	d	file:
TINT	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define TINT /;"	d	file:
TOCTAL	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define TOCTAL /;"	d	file:
TSCIENTIFIC	extlibs/squirrel/squirrel/sqlexer.cpp	/^#define TSCIENTIFIC /;"	d	file:
Tok2Str	extlibs/squirrel/squirrel/sqlexer.cpp	/^const SQChar *SQLexer::Tok2Str(SQInteger tok)$/;"	f	class:SQLexer
isexponent	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger isexponent(SQInteger c) { return c == 'e' || c=='E'; }$/;"	f
scisodigit	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQInteger scisodigit(SQInteger c) { return c >= _SC('0') && c <= _SC('7'); }$/;"	f
~SQLexer	extlibs/squirrel/squirrel/sqlexer.cpp	/^SQLexer::~SQLexer()$/;"	f	class:SQLexer
LexChar	extlibs/squirrel/squirrel/sqlexer.h	/^typedef	unsigned char LexChar;$/;"	t
LexChar	extlibs/squirrel/squirrel/sqlexer.h	/^typedef SQChar LexChar;$/;"	t
SQLexer	extlibs/squirrel/squirrel/sqlexer.h	/^struct SQLexer$/;"	s
_SQLEXER_H_	extlibs/squirrel/squirrel/sqlexer.h	/^#define _SQLEXER_H_$/;"	d
_currdata	extlibs/squirrel/squirrel/sqlexer.h	/^	LexChar _currdata;$/;"	m	struct:SQLexer
_currentcolumn	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _currentcolumn;$/;"	m	struct:SQLexer
_currentline	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _currentline;$/;"	m	struct:SQLexer
_curtoken	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _curtoken;$/;"	m	struct:SQLexer
_errfunc	extlibs/squirrel/squirrel/sqlexer.h	/^	CompilerErrorFunc _errfunc;$/;"	m	struct:SQLexer
_errtarget	extlibs/squirrel/squirrel/sqlexer.h	/^	void *_errtarget;$/;"	m	struct:SQLexer
_fvalue	extlibs/squirrel/squirrel/sqlexer.h	/^	SQFloat _fvalue;$/;"	m	struct:SQLexer
_keywords	extlibs/squirrel/squirrel/sqlexer.h	/^	SQTable *_keywords;$/;"	m	struct:SQLexer
_lasttokenline	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _lasttokenline;$/;"	m	struct:SQLexer
_longstr	extlibs/squirrel/squirrel/sqlexer.h	/^	sqvector<SQChar> _longstr;$/;"	m	struct:SQLexer
_nvalue	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _nvalue;$/;"	m	struct:SQLexer
_prevtoken	extlibs/squirrel/squirrel/sqlexer.h	/^	SQInteger _prevtoken;$/;"	m	struct:SQLexer
_reached_eof	extlibs/squirrel/squirrel/sqlexer.h	/^	SQBool _reached_eof;$/;"	m	struct:SQLexer
_readf	extlibs/squirrel/squirrel/sqlexer.h	/^	SQLEXREADFUNC _readf;$/;"	m	struct:SQLexer
_sharedstate	extlibs/squirrel/squirrel/sqlexer.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQLexer
_svalue	extlibs/squirrel/squirrel/sqlexer.h	/^	const SQChar *_svalue;$/;"	m	struct:SQLexer
_up	extlibs/squirrel/squirrel/sqlexer.h	/^	SQUserPointer _up;$/;"	m	struct:SQLexer
sq_vm_free	extlibs/squirrel/squirrel/sqmem.cpp	/^void sq_vm_free(void *p, SQUnsignedInteger size){	free(p); }$/;"	f
sq_vm_malloc	extlibs/squirrel/squirrel/sqmem.cpp	/^void *sq_vm_malloc(SQUnsignedInteger size){	return malloc(size); }$/;"	f
sq_vm_realloc	extlibs/squirrel/squirrel/sqmem.cpp	/^void *sq_vm_realloc(void *p, SQUnsignedInteger oldsize, SQUnsignedInteger size){ return realloc(p, size); }$/;"	f
CheckTag	extlibs/squirrel/squirrel/sqobject.cpp	/^bool CheckTag(HSQUIRRELVM v,SQWRITEFUNC read,SQUserPointer up,SQUnsignedInteger32 tag)$/;"	f
Create	extlibs/squirrel/squirrel/sqobject.cpp	/^SQString *SQString::Create(SQSharedState *ss,const SQChar *s,SQInteger len)$/;"	f	class:SQString
END_MARK	extlibs/squirrel/squirrel/sqobject.cpp	/^#define END_MARK(/;"	d	file:
Extend	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQArray::Extend(const SQArray *a){$/;"	f	class:SQArray
GetLine	extlibs/squirrel/squirrel/sqobject.cpp	/^SQInteger SQFunctionProto::GetLine(SQInstruction *curr)$/;"	f	class:SQFunctionProto
GetLocal	extlibs/squirrel/squirrel/sqobject.cpp	/^const SQChar* SQFunctionProto::GetLocal(SQVM *vm,SQUnsignedInteger stackbase,SQUnsignedInteger nseq,SQUnsignedInteger nop)$/;"	f	class:SQFunctionProto
GetMetaMethod	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQDelegable::GetMetaMethod(SQVM *v,SQMetaMethod mm,SQObjectPtr &res) {$/;"	f	class:SQDelegable
GetTypeName	extlibs/squirrel/squirrel/sqobject.cpp	/^const SQChar *GetTypeName(const SQObjectPtr &obj1)$/;"	f
GetWeakRef	extlibs/squirrel/squirrel/sqobject.cpp	/^SQWeakRef *SQRefCounted::GetWeakRef(SQObjectType type)$/;"	f	class:SQRefCounted
IdType2Name	extlibs/squirrel/squirrel/sqobject.cpp	/^const SQChar *IdType2Name(SQObjectType type)$/;"	f
Load	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQClosure::Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret)$/;"	f	class:SQClosure
Load	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQFunctionProto::Load(SQVM *v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &ret)$/;"	f	class:SQFunctionProto
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQArray::Mark(SQCollectable **chain)$/;"	f	class:SQArray
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQClass::Mark(SQCollectable **chain)$/;"	f	class:SQClass
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQClosure::Mark(SQCollectable **chain)$/;"	f	class:SQClosure
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQFunctionProto::Mark(SQCollectable **chain)$/;"	f	class:SQFunctionProto
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQGenerator::Mark(SQCollectable **chain)$/;"	f	class:SQGenerator
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQInstance::Mark(SQCollectable **chain)$/;"	f	class:SQInstance
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQNativeClosure::Mark(SQCollectable **chain)$/;"	f	class:SQNativeClosure
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQOuter::Mark(SQCollectable **chain)$/;"	f	class:SQOuter
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQTable::Mark(SQCollectable **chain)$/;"	f	class:SQTable
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQUserData::Mark(SQCollectable **chain){$/;"	f	class:SQUserData
Mark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQVM::Mark(SQCollectable **chain)$/;"	f	class:SQVM
Next	extlibs/squirrel/squirrel/sqobject.cpp	/^SQInteger SQString::Next(const SQObjectPtr &refpos, SQObjectPtr &outkey, SQObjectPtr &outval)$/;"	f	class:SQString
ReadObject	extlibs/squirrel/squirrel/sqobject.cpp	/^bool ReadObject(HSQUIRRELVM v,SQUserPointer up,SQREADFUNC read,SQObjectPtr &o)$/;"	f
Release	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQString::Release()$/;"	f	class:SQString
Release	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQWeakRef::Release() { $/;"	f	class:SQWeakRef
Resume	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQGenerator::Resume(SQVM *v,SQObjectPtr &dest)$/;"	f	class:SQGenerator
SQFunctionProto	extlibs/squirrel/squirrel/sqobject.cpp	/^SQFunctionProto::SQFunctionProto(SQSharedState *ss)$/;"	f	class:SQFunctionProto
START_MARK	extlibs/squirrel/squirrel/sqobject.cpp	/^#define START_MARK(/;"	d	file:
SafeRead	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SafeRead(HSQUIRRELVM v,SQWRITEFUNC read,SQUserPointer up,SQUserPointer dest,SQInteger size)$/;"	f
SafeWrite	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SafeWrite(HSQUIRRELVM v,SQWRITEFUNC write,SQUserPointer up,SQUserPointer dest,SQInteger size)$/;"	f
Save	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQClosure::Save(SQVM *v,SQUserPointer up,SQWRITEFUNC write)$/;"	f	class:SQClosure
Save	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQFunctionProto::Save(SQVM *v,SQUserPointer up,SQWRITEFUNC write)$/;"	f	class:SQFunctionProto
SetDelegate	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQDelegable::SetDelegate(SQTable *mt)$/;"	f	class:SQDelegable
TranslateIndex	extlibs/squirrel/squirrel/sqobject.cpp	/^SQUnsignedInteger TranslateIndex(const SQObjectPtr &idx)$/;"	f
UnMark	extlibs/squirrel/squirrel/sqobject.cpp	/^void SQCollectable::UnMark() { _uiRef&=~MARK_FLAG; }$/;"	f	class:SQCollectable
WriteObject	extlibs/squirrel/squirrel/sqobject.cpp	/^bool WriteObject(HSQUIRRELVM v,SQUserPointer up,SQWRITEFUNC write,SQObjectPtr &o)$/;"	f
WriteTag	extlibs/squirrel/squirrel/sqobject.cpp	/^bool WriteTag(HSQUIRRELVM v,SQWRITEFUNC write,SQUserPointer up,SQUnsignedInteger32 tag)$/;"	f
Yield	extlibs/squirrel/squirrel/sqobject.cpp	/^bool SQGenerator::Yield(SQVM *v,SQInteger target)$/;"	f	class:SQGenerator
_CHECK_IO	extlibs/squirrel/squirrel/sqobject.cpp	/^#define _CHECK_IO(/;"	d	file:
~SQClosure	extlibs/squirrel/squirrel/sqobject.cpp	/^SQClosure::~SQClosure()$/;"	f	class:SQClosure
~SQFunctionProto	extlibs/squirrel/squirrel/sqobject.cpp	/^SQFunctionProto::~SQFunctionProto()$/;"	f	class:SQFunctionProto
~SQRefCounted	extlibs/squirrel/squirrel/sqobject.cpp	/^SQRefCounted::~SQRefCounted()$/;"	f	class:SQRefCounted
ADD_TO_CHAIN	extlibs/squirrel/squirrel/sqobject.h	/^#define ADD_TO_CHAIN(/;"	d
CHAINABLE_OBJ	extlibs/squirrel/squirrel/sqobject.h	/^#define CHAINABLE_OBJ /;"	d
INIT_CHAIN	extlibs/squirrel/squirrel/sqobject.h	/^#define INIT_CHAIN(/;"	d
MARK_FLAG	extlibs/squirrel/squirrel/sqobject.h	/^#define MARK_FLAG /;"	d
MINPOWER2	extlibs/squirrel/squirrel/sqobject.h	/^#define MINPOWER2 /;"	d
MM_ADD	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_ADD	/;"	d
MM_CALL	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_CALL	/;"	d
MM_CLONED	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_CLONED	/;"	d
MM_CMP	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_CMP	/;"	d
MM_DELSLOT	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_DELSLOT	/;"	d
MM_DIV	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_DIV	/;"	d
MM_GET	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_GET	/;"	d
MM_INHERITED	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_INHERITED /;"	d
MM_MODULO	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_MODULO	/;"	d
MM_MUL	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_MUL	/;"	d
MM_NEWMEMBER	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_NEWMEMBER /;"	d
MM_NEWSLOT	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_NEWSLOT	/;"	d
MM_NEXTI	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_NEXTI	/;"	d
MM_SET	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_SET	/;"	d
MM_SUB	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_SUB	/;"	d
MM_TOSTRING	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_TOSTRING	/;"	d
MM_TYPEOF	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_TYPEOF	/;"	d
MM_UNM	extlibs/squirrel/squirrel/sqobject.h	/^#define MM_UNM	/;"	d
MT_ADD	extlibs/squirrel/squirrel/sqobject.h	/^	MT_ADD=0,$/;"	e	enum:SQMetaMethod
MT_CALL	extlibs/squirrel/squirrel/sqobject.h	/^	MT_CALL=11,$/;"	e	enum:SQMetaMethod
MT_CLONED	extlibs/squirrel/squirrel/sqobject.h	/^	MT_CLONED=12,$/;"	e	enum:SQMetaMethod
MT_CMP	extlibs/squirrel/squirrel/sqobject.h	/^	MT_CMP=10,$/;"	e	enum:SQMetaMethod
MT_DELSLOT	extlibs/squirrel/squirrel/sqobject.h	/^	MT_DELSLOT=14,$/;"	e	enum:SQMetaMethod
MT_DIV	extlibs/squirrel/squirrel/sqobject.h	/^	MT_DIV=3,$/;"	e	enum:SQMetaMethod
MT_GET	extlibs/squirrel/squirrel/sqobject.h	/^	MT_GET=7,$/;"	e	enum:SQMetaMethod
MT_INHERITED	extlibs/squirrel/squirrel/sqobject.h	/^	MT_INHERITED=17,$/;"	e	enum:SQMetaMethod
MT_LAST	extlibs/squirrel/squirrel/sqobject.h	/^	MT_LAST = 18$/;"	e	enum:SQMetaMethod
MT_MODULO	extlibs/squirrel/squirrel/sqobject.h	/^	MT_MODULO=5,$/;"	e	enum:SQMetaMethod
MT_MUL	extlibs/squirrel/squirrel/sqobject.h	/^	MT_MUL=2,$/;"	e	enum:SQMetaMethod
MT_NEWMEMBER	extlibs/squirrel/squirrel/sqobject.h	/^	MT_NEWMEMBER=16,$/;"	e	enum:SQMetaMethod
MT_NEWSLOT	extlibs/squirrel/squirrel/sqobject.h	/^	MT_NEWSLOT=13,$/;"	e	enum:SQMetaMethod
MT_NEXTI	extlibs/squirrel/squirrel/sqobject.h	/^	MT_NEXTI=9,$/;"	e	enum:SQMetaMethod
MT_SET	extlibs/squirrel/squirrel/sqobject.h	/^	MT_SET=6,$/;"	e	enum:SQMetaMethod
MT_SUB	extlibs/squirrel/squirrel/sqobject.h	/^	MT_SUB=1,$/;"	e	enum:SQMetaMethod
MT_TOSTRING	extlibs/squirrel/squirrel/sqobject.h	/^	MT_TOSTRING=15,$/;"	e	enum:SQMetaMethod
MT_TYPEOF	extlibs/squirrel/squirrel/sqobject.h	/^	MT_TYPEOF=8,$/;"	e	enum:SQMetaMethod
MT_UNM	extlibs/squirrel/squirrel/sqobject.h	/^	MT_UNM=4,$/;"	e	enum:SQMetaMethod
Null	extlibs/squirrel/squirrel/sqobject.h	/^	inline void Null()$/;"	f	struct:SQObjectPtr
REMOVE_FROM_CHAIN	extlibs/squirrel/squirrel/sqobject.h	/^#define REMOVE_FROM_CHAIN(/;"	d
SQCollectable	extlibs/squirrel/squirrel/sqobject.h	/^struct SQCollectable : public SQRefCounted {$/;"	s
SQDelegable	extlibs/squirrel/squirrel/sqobject.h	/^struct SQDelegable : public CHAINABLE_OBJ {$/;"	s
SQIntVec	extlibs/squirrel/squirrel/sqobject.h	/^typedef sqvector<SQInteger> SQIntVec;$/;"	t
SQMetaMethod	extlibs/squirrel/squirrel/sqobject.h	/^enum SQMetaMethod{$/;"	g
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^		SQObjectPtr(const SQChar *){} \/\/safety$/;"	f	struct:SQObjectPtr
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^	SQObjectPtr()$/;"	f	struct:SQObjectPtr
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^	SQObjectPtr(bool bBool)$/;"	f	struct:SQObjectPtr
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^	SQObjectPtr(const SQObject &o)$/;"	f	struct:SQObjectPtr
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^	SQObjectPtr(const SQObjectPtr &o)$/;"	f	struct:SQObjectPtr
SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^struct SQObjectPtr : public SQObject$/;"	s
SQObjectPtrVec	extlibs/squirrel/squirrel/sqobject.h	/^typedef sqvector<SQObjectPtr> SQObjectPtrVec;$/;"	t
SQRefCounted	extlibs/squirrel/squirrel/sqobject.h	/^	SQRefCounted() { _uiRef = 0; _weakref = NULL; }$/;"	f	struct:SQRefCounted
SQRefCounted	extlibs/squirrel/squirrel/sqobject.h	/^struct SQRefCounted$/;"	s
SQWeakRef	extlibs/squirrel/squirrel/sqobject.h	/^struct SQWeakRef : SQRefCounted$/;"	s
SQ_CLOSURESTREAM_HEAD	extlibs/squirrel/squirrel/sqobject.h	/^#define SQ_CLOSURESTREAM_HEAD /;"	d
SQ_CLOSURESTREAM_PART	extlibs/squirrel/squirrel/sqobject.h	/^#define SQ_CLOSURESTREAM_PART /;"	d
SQ_CLOSURESTREAM_TAIL	extlibs/squirrel/squirrel/sqobject.h	/^#define SQ_CLOSURESTREAM_TAIL /;"	d
SQ_REFOBJECT_INIT	extlibs/squirrel/squirrel/sqobject.h	/^#define SQ_REFOBJECT_INIT(/;"	d
UINT_MINUS_ONE	extlibs/squirrel/squirrel/sqobject.h	/^#define UINT_MINUS_ONE /;"	d
_CONSTRUCT_VECTOR	extlibs/squirrel/squirrel/sqobject.h	/^#define _CONSTRUCT_VECTOR(/;"	d
_COPY_VECTOR	extlibs/squirrel/squirrel/sqobject.h	/^#define _COPY_VECTOR(/;"	d
_DESTRUCT_VECTOR	extlibs/squirrel/squirrel/sqobject.h	/^#define _DESTRUCT_VECTOR(/;"	d
_NULL_SQOBJECT_VECTOR	extlibs/squirrel/squirrel/sqobject.h	/^#define _NULL_SQOBJECT_VECTOR(/;"	d
_REF_TYPE_DECL	extlibs/squirrel/squirrel/sqobject.h	/^#define _REF_TYPE_DECL(/;"	d
_SCALAR_TYPE_DECL	extlibs/squirrel/squirrel/sqobject.h	/^#define _SCALAR_TYPE_DECL(/;"	d
_SQOBJECT_H_	extlibs/squirrel/squirrel/sqobject.h	/^#define _SQOBJECT_H_$/;"	d
_Swap	extlibs/squirrel/squirrel/sqobject.h	/^inline void _Swap(SQObject &a,SQObject &b)$/;"	f
__AddRef	extlibs/squirrel/squirrel/sqobject.h	/^#define __AddRef(/;"	d
__ObjAddRef	extlibs/squirrel/squirrel/sqobject.h	/^#define __ObjAddRef(/;"	d
__ObjRelease	extlibs/squirrel/squirrel/sqobject.h	/^#define __ObjRelease(/;"	d
__Release	extlibs/squirrel/squirrel/sqobject.h	/^#define __Release(/;"	d
_array	extlibs/squirrel/squirrel/sqobject.h	/^#define _array(/;"	d
_class	extlibs/squirrel/squirrel/sqobject.h	/^#define _class(/;"	d
_closure	extlibs/squirrel/squirrel/sqobject.h	/^#define _closure(/;"	d
_delegable	extlibs/squirrel/squirrel/sqobject.h	/^#define _delegable(/;"	d
_delegate	extlibs/squirrel/squirrel/sqobject.h	/^	SQTable *_delegate;$/;"	m	struct:SQDelegable
_float	extlibs/squirrel/squirrel/sqobject.h	/^#define _float(/;"	d
_funcproto	extlibs/squirrel/squirrel/sqobject.h	/^#define _funcproto(/;"	d
_generator	extlibs/squirrel/squirrel/sqobject.h	/^#define _generator(/;"	d
_instance	extlibs/squirrel/squirrel/sqobject.h	/^#define _instance(/;"	d
_integer	extlibs/squirrel/squirrel/sqobject.h	/^#define _integer(/;"	d
_nativeclosure	extlibs/squirrel/squirrel/sqobject.h	/^#define _nativeclosure(/;"	d
_next	extlibs/squirrel/squirrel/sqobject.h	/^	SQCollectable *_next;$/;"	m	struct:SQCollectable
_obj	extlibs/squirrel/squirrel/sqobject.h	/^	SQObject _obj;$/;"	m	struct:SQWeakRef
_outer	extlibs/squirrel/squirrel/sqobject.h	/^#define _outer(/;"	d
_prev	extlibs/squirrel/squirrel/sqobject.h	/^	SQCollectable *_prev;$/;"	m	struct:SQCollectable
_rawval	extlibs/squirrel/squirrel/sqobject.h	/^#define _rawval(/;"	d
_realval	extlibs/squirrel/squirrel/sqobject.h	/^#define _realval(/;"	d
_refcounted	extlibs/squirrel/squirrel/sqobject.h	/^#define _refcounted(/;"	d
_sharedstate	extlibs/squirrel/squirrel/sqobject.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQCollectable
_string	extlibs/squirrel/squirrel/sqobject.h	/^#define _string(/;"	d
_stringval	extlibs/squirrel/squirrel/sqobject.h	/^#define _stringval(/;"	d
_table	extlibs/squirrel/squirrel/sqobject.h	/^#define _table(/;"	d
_thread	extlibs/squirrel/squirrel/sqobject.h	/^#define _thread(/;"	d
_uiRef	extlibs/squirrel/squirrel/sqobject.h	/^	SQUnsignedInteger _uiRef;$/;"	m	struct:SQRefCounted
_userdata	extlibs/squirrel/squirrel/sqobject.h	/^#define _userdata(/;"	d
_userdataval	extlibs/squirrel/squirrel/sqobject.h	/^#define _userdataval(/;"	d
_userpointer	extlibs/squirrel/squirrel/sqobject.h	/^#define _userpointer(/;"	d
_weakref	extlibs/squirrel/squirrel/sqobject.h	/^	struct SQWeakRef *_weakref;$/;"	m	struct:SQRefCounted	typeref:struct:SQRefCounted::SQWeakRef
_weakref	extlibs/squirrel/squirrel/sqobject.h	/^#define _weakref(/;"	d
is_delegable	extlibs/squirrel/squirrel/sqobject.h	/^#define is_delegable(/;"	d
operator =	extlibs/squirrel/squirrel/sqobject.h	/^	inline SQObjectPtr& operator=(bool b)$/;"	f	struct:SQObjectPtr
operator =	extlibs/squirrel/squirrel/sqobject.h	/^	inline SQObjectPtr& operator=(const SQObject& obj)$/;"	f	struct:SQObjectPtr
operator =	extlibs/squirrel/squirrel/sqobject.h	/^	inline SQObjectPtr& operator=(const SQObjectPtr& obj)$/;"	f	struct:SQObjectPtr
raw_type	extlibs/squirrel/squirrel/sqobject.h	/^#define raw_type(/;"	d
tofloat	extlibs/squirrel/squirrel/sqobject.h	/^#define tofloat(/;"	d
tointeger	extlibs/squirrel/squirrel/sqobject.h	/^#define tointeger(/;"	d
type	extlibs/squirrel/squirrel/sqobject.h	/^#define type(/;"	d
~SQObjectPtr	extlibs/squirrel/squirrel/sqobject.h	/^	~SQObjectPtr()$/;"	f	struct:SQObjectPtr
AAT_BOOL	extlibs/squirrel/squirrel/sqopcodes.h	/^	AAT_BOOL = 4$/;"	e	enum:AppendArrayType
AAT_FLOAT	extlibs/squirrel/squirrel/sqopcodes.h	/^	AAT_FLOAT = 3,$/;"	e	enum:AppendArrayType
AAT_INT	extlibs/squirrel/squirrel/sqopcodes.h	/^	AAT_INT = 2,$/;"	e	enum:AppendArrayType
AAT_LITERAL	extlibs/squirrel/squirrel/sqopcodes.h	/^	AAT_LITERAL = 1,$/;"	e	enum:AppendArrayType
AAT_STACK	extlibs/squirrel/squirrel/sqopcodes.h	/^	AAT_STACK = 0,$/;"	e	enum:AppendArrayType
AppendArrayType	extlibs/squirrel/squirrel/sqopcodes.h	/^enum AppendArrayType {$/;"	g
BW_AND	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_AND = 0,$/;"	e	enum:BitWiseOP
BW_OR	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_OR = 2,	$/;"	e	enum:BitWiseOP
BW_SHIFTL	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_SHIFTL = 4,$/;"	e	enum:BitWiseOP
BW_SHIFTR	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_SHIFTR = 5,$/;"	e	enum:BitWiseOP
BW_USHIFTR	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_USHIFTR = 6$/;"	e	enum:BitWiseOP
BW_XOR	extlibs/squirrel/squirrel/sqopcodes.h	/^	BW_XOR = 3,$/;"	e	enum:BitWiseOP
BitWiseOP	extlibs/squirrel/squirrel/sqopcodes.h	/^enum BitWiseOP {$/;"	g
CMP_3W	extlibs/squirrel/squirrel/sqopcodes.h	/^	CMP_3W = 5$/;"	e	enum:CmpOP
CMP_G	extlibs/squirrel/squirrel/sqopcodes.h	/^	CMP_G = 0,$/;"	e	enum:CmpOP
CMP_GE	extlibs/squirrel/squirrel/sqopcodes.h	/^	CMP_GE = 2,	$/;"	e	enum:CmpOP
CMP_L	extlibs/squirrel/squirrel/sqopcodes.h	/^	CMP_L = 3,$/;"	e	enum:CmpOP
CMP_LE	extlibs/squirrel/squirrel/sqopcodes.h	/^	CMP_LE = 4,$/;"	e	enum:CmpOP
CmpOP	extlibs/squirrel/squirrel/sqopcodes.h	/^enum CmpOP {$/;"	g
MAX_FUNC_STACKSIZE	extlibs/squirrel/squirrel/sqopcodes.h	/^#define MAX_FUNC_STACKSIZE /;"	d
MAX_LITERALS	extlibs/squirrel/squirrel/sqopcodes.h	/^#define MAX_LITERALS /;"	d
NEW_SLOT_ATTRIBUTES_FLAG	extlibs/squirrel/squirrel/sqopcodes.h	/^#define NEW_SLOT_ATTRIBUTES_FLAG	/;"	d
NEW_SLOT_STATIC_FLAG	extlibs/squirrel/squirrel/sqopcodes.h	/^#define NEW_SLOT_STATIC_FLAG	/;"	d
NOT_ARRAY	extlibs/squirrel/squirrel/sqopcodes.h	/^	NOT_ARRAY = 1,$/;"	e	enum:NewObjectType
NOT_CLASS	extlibs/squirrel/squirrel/sqopcodes.h	/^	NOT_CLASS = 2$/;"	e	enum:NewObjectType
NOT_TABLE	extlibs/squirrel/squirrel/sqopcodes.h	/^	NOT_TABLE = 0,$/;"	e	enum:NewObjectType
NewObjectType	extlibs/squirrel/squirrel/sqopcodes.h	/^enum NewObjectType {$/;"	g
SQInstruction	extlibs/squirrel/squirrel/sqopcodes.h	/^	SQInstruction(){};$/;"	f	struct:SQInstruction
SQInstruction	extlibs/squirrel/squirrel/sqopcodes.h	/^	SQInstruction(SQOpcode _op,SQInteger a0=0,SQInteger a1=0,SQInteger a2=0,SQInteger a3=0)$/;"	f	struct:SQInstruction
SQInstruction	extlibs/squirrel/squirrel/sqopcodes.h	/^struct SQInstruction $/;"	s
SQInstructionDesc	extlibs/squirrel/squirrel/sqopcodes.h	/^struct SQInstructionDesc {	  $/;"	s
SQInstructionVec	extlibs/squirrel/squirrel/sqopcodes.h	/^typedef sqvector<SQInstruction> SQInstructionVec;$/;"	t
SQOpcode	extlibs/squirrel/squirrel/sqopcodes.h	/^enum SQOpcode$/;"	g
_OP_ADD	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_ADD=				0x11,$/;"	e	enum:SQOpcode
_OP_AND	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_AND=				0x2B,$/;"	e	enum:SQOpcode
_OP_APPENDARRAY	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_APPENDARRAY=		0x22,	$/;"	e	enum:SQOpcode
_OP_BITW	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_BITW=				0x16,$/;"	e	enum:SQOpcode
_OP_BWNOT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_BWNOT=				0x2F,	$/;"	e	enum:SQOpcode
_OP_CALL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_CALL=				0x06,	$/;"	e	enum:SQOpcode
_OP_CLONE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_CLONE=				0x35,$/;"	e	enum:SQOpcode
_OP_CLOSE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_CLOSE=				0x3C,$/;"	e	enum:SQOpcode
_OP_CLOSURE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_CLOSURE=			0x30,	$/;"	e	enum:SQOpcode
_OP_CMP	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_CMP=				0x28,$/;"	e	enum:SQOpcode
_OP_COMPARITH	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_COMPARITH=			0x23,	$/;"	e	enum:SQOpcode
_OP_DELETE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_DELETE=				0x0C,	$/;"	e	enum:SQOpcode
_OP_DIV	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_DIV=				0x14,$/;"	e	enum:SQOpcode
_OP_DLOAD	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_DLOAD=				0x04,$/;"	e	enum:SQOpcode
_OP_DMOVE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_DMOVE=				0x1B,	$/;"	e	enum:SQOpcode
_OP_EQ	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_EQ=					0x0F,$/;"	e	enum:SQOpcode
_OP_EXISTS	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_EXISTS=				0x29,	$/;"	e	enum:SQOpcode
_OP_FOREACH	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_FOREACH=			0x33,$/;"	e	enum:SQOpcode
_OP_GET	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_GET=				0x0E,$/;"	e	enum:SQOpcode
_OP_GETBASE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_GETBASE=			0x3B,$/;"	e	enum:SQOpcode
_OP_GETK	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_GETK=				0x09,	$/;"	e	enum:SQOpcode
_OP_GETOUTER	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_GETOUTER=			0x20,	$/;"	e	enum:SQOpcode
_OP_INC	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_INC=				0x24,	$/;"	e	enum:SQOpcode
_OP_INCL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_INCL=				0x25,	$/;"	e	enum:SQOpcode
_OP_INSTANCEOF	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_INSTANCEOF=			0x2A,$/;"	e	enum:SQOpcode
_OP_JCMP	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_JCMP=				0x1D,$/;"	e	enum:SQOpcode
_OP_JMP	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_JMP=				0x1C,	$/;"	e	enum:SQOpcode
_OP_JZ	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_JZ=					0x1E,	$/;"	e	enum:SQOpcode
_OP_LINE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LINE=				0x00,	$/;"	e	enum:SQOpcode
_OP_LOAD	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOAD=				0x01,$/;"	e	enum:SQOpcode
_OP_LOADBOOL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOADBOOL=			0x1A,$/;"	e	enum:SQOpcode
_OP_LOADFLOAT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOADFLOAT=			0x03,$/;"	e	enum:SQOpcode
_OP_LOADINT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOADINT=			0x02,$/;"	e	enum:SQOpcode
_OP_LOADNULLS	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOADNULLS=			0x18,	$/;"	e	enum:SQOpcode
_OP_LOADROOT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_LOADROOT=			0x19,$/;"	e	enum:SQOpcode
_OP_MOD	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_MOD=				0x15,$/;"	e	enum:SQOpcode
_OP_MOVE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_MOVE=				0x0A,	$/;"	e	enum:SQOpcode
_OP_MUL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_MUL=				0x13,$/;"	e	enum:SQOpcode
_OP_NE	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NE=					0x10,$/;"	e	enum:SQOpcode
_OP_NEG	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NEG=				0x2D,$/;"	e	enum:SQOpcode
_OP_NEWOBJ	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NEWOBJ=				0x21,$/;"	e	enum:SQOpcode
_OP_NEWSLOT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NEWSLOT=			0x0B,	$/;"	e	enum:SQOpcode
_OP_NEWSLOTA	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NEWSLOTA=			0x3A,$/;"	e	enum:SQOpcode
_OP_NOT	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_NOT=				0x2E,$/;"	e	enum:SQOpcode
_OP_OR	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_OR=					0x2C,$/;"	e	enum:SQOpcode
_OP_PINC	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_PINC=				0x26,	$/;"	e	enum:SQOpcode
_OP_PINCL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_PINCL=				0x27,	$/;"	e	enum:SQOpcode
_OP_POPTRAP	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_POPTRAP=			0x38,$/;"	e	enum:SQOpcode
_OP_POSTFOREACH	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_POSTFOREACH=		0x34,$/;"	e	enum:SQOpcode
_OP_PREPCALL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_PREPCALL=			0x07,	$/;"	e	enum:SQOpcode
_OP_PREPCALLK	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_PREPCALLK=			0x08,	$/;"	e	enum:SQOpcode
_OP_PUSHTRAP	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_PUSHTRAP=			0x37,$/;"	e	enum:SQOpcode
_OP_RESUME	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_RESUME=				0x32,$/;"	e	enum:SQOpcode
_OP_RETURN	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_RETURN=				0x17,	$/;"	e	enum:SQOpcode
_OP_SET	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_SET=				0x0D,	$/;"	e	enum:SQOpcode
_OP_SETOUTER	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_SETOUTER=			0x1F,	$/;"	e	enum:SQOpcode
_OP_SUB	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_SUB=				0x12,$/;"	e	enum:SQOpcode
_OP_TAILCALL	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_TAILCALL=			0x05,	$/;"	e	enum:SQOpcode
_OP_THROW	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_THROW=				0x39,$/;"	e	enum:SQOpcode
_OP_TYPEOF	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_TYPEOF=				0x36,$/;"	e	enum:SQOpcode
_OP_YIELD	extlibs/squirrel/squirrel/sqopcodes.h	/^	_OP_YIELD=				0x31,	$/;"	e	enum:SQOpcode
_SQOPCODES_H_	extlibs/squirrel/squirrel/sqopcodes.h	/^#define _SQOPCODES_H_$/;"	d
_arg0	extlibs/squirrel/squirrel/sqopcodes.h	/^	unsigned char _arg0;$/;"	m	struct:SQInstruction
_arg1	extlibs/squirrel/squirrel/sqopcodes.h	/^	SQInt32 _arg1;$/;"	m	struct:SQInstruction
_arg2	extlibs/squirrel/squirrel/sqopcodes.h	/^	unsigned char _arg2;$/;"	m	struct:SQInstruction
_arg3	extlibs/squirrel/squirrel/sqopcodes.h	/^	unsigned char _arg3;$/;"	m	struct:SQInstruction
name	extlibs/squirrel/squirrel/sqopcodes.h	/^	const SQChar *name;		  $/;"	m	struct:SQInstructionDesc
op	extlibs/squirrel/squirrel/sqopcodes.h	/^	unsigned char op;$/;"	m	struct:SQInstruction
_SQPCHEADER_H_	extlibs/squirrel/squirrel/sqpcheader.h	/^#define _SQPCHEADER_H_$/;"	d
Add	extlibs/squirrel/squirrel/sqstate.cpp	/^RefTable::RefNode *RefTable::Add(SQHash mainpos,SQObject &obj)$/;"	f	class:RefTable
Add	extlibs/squirrel/squirrel/sqstate.cpp	/^SQString *SQStringTable::Add(const SQChar *news,SQInteger len)$/;"	f	class:SQStringTable
AddRef	extlibs/squirrel/squirrel/sqstate.cpp	/^void RefTable::AddRef(SQObject &obj)$/;"	f	class:RefTable
AddToChain	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQCollectable::AddToChain(SQCollectable **chain,SQCollectable *c)$/;"	f	class:SQCollectable
AllocNodes	extlibs/squirrel/squirrel/sqstate.cpp	/^void RefTable::AllocNodes(SQUnsignedInteger size)$/;"	f	class:RefTable
AllocNodes	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQStringTable::AllocNodes(SQInteger size)$/;"	f	class:SQStringTable
CollectGarbage	extlibs/squirrel/squirrel/sqstate.cpp	/^SQInteger SQSharedState::CollectGarbage(SQVM *vm)$/;"	f	class:SQSharedState
CompileTypemask	extlibs/squirrel/squirrel/sqstate.cpp	/^bool CompileTypemask(SQIntVec &res,const SQChar *typemask)$/;"	f
CreateDefaultDelegate	extlibs/squirrel/squirrel/sqstate.cpp	/^SQTable *CreateDefaultDelegate(SQSharedState *ss,SQRegFunction *funcz)$/;"	f
Finalize	extlibs/squirrel/squirrel/sqstate.cpp	/^void RefTable::Finalize()$/;"	f	class:RefTable
Get	extlibs/squirrel/squirrel/sqstate.cpp	/^RefTable::RefNode *RefTable::Get(SQObject &obj,SQHash &mainpos,RefNode **prev,bool add)$/;"	f	class:RefTable
GetMetaMethodIdxByName	extlibs/squirrel/squirrel/sqstate.cpp	/^SQInteger SQSharedState::GetMetaMethodIdxByName(const SQObjectPtr &name)$/;"	f	class:SQSharedState
GetRefCount	extlibs/squirrel/squirrel/sqstate.cpp	/^SQUnsignedInteger RefTable::GetRefCount(SQObject &obj)$/;"	f	class:RefTable
GetScratchPad	extlibs/squirrel/squirrel/sqstate.cpp	/^SQChar* SQSharedState::GetScratchPad(SQInteger size)$/;"	f	class:SQSharedState
Init	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQSharedState::Init()$/;"	f	class:SQSharedState
Mark	extlibs/squirrel/squirrel/sqstate.cpp	/^void RefTable::Mark(SQCollectable **chain)$/;"	f	class:RefTable
MarkObject	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQSharedState::MarkObject(SQObjectPtr &o,SQCollectable **chain)$/;"	f	class:SQSharedState
RefTable	extlibs/squirrel/squirrel/sqstate.cpp	/^RefTable::RefTable()$/;"	f	class:RefTable
Release	extlibs/squirrel/squirrel/sqstate.cpp	/^SQBool RefTable::Release(SQObject &obj)$/;"	f	class:RefTable
Remove	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQStringTable::Remove(SQString *bs)$/;"	f	class:SQStringTable
RemoveFromChain	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQCollectable::RemoveFromChain(SQCollectable **chain,SQCollectable *c)$/;"	f	class:SQCollectable
Resize	extlibs/squirrel/squirrel/sqstate.cpp	/^void RefTable::Resize(SQUnsignedInteger size)$/;"	f	class:RefTable
Resize	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQStringTable::Resize(SQInteger size)$/;"	f	class:SQStringTable
ResurrectUnreachable	extlibs/squirrel/squirrel/sqstate.cpp	/^SQInteger SQSharedState::ResurrectUnreachable(SQVM *vm)$/;"	f	class:SQSharedState
RunMark	extlibs/squirrel/squirrel/sqstate.cpp	/^void SQSharedState::RunMark(SQVM *vm,SQCollectable **tchain)$/;"	f	class:SQSharedState
SQSharedState	extlibs/squirrel/squirrel/sqstate.cpp	/^SQSharedState::SQSharedState()$/;"	f	class:SQSharedState
SQStringTable	extlibs/squirrel/squirrel/sqstate.cpp	/^SQStringTable::SQStringTable(SQSharedState *ss)$/;"	f	class:SQStringTable
newmetamethod	extlibs/squirrel/squirrel/sqstate.cpp	/^#define newmetamethod(/;"	d	file:
newsysstring	extlibs/squirrel/squirrel/sqstate.cpp	/^#define newsysstring(/;"	d	file:
~RefTable	extlibs/squirrel/squirrel/sqstate.cpp	/^RefTable::~RefTable()$/;"	f	class:RefTable
~SQSharedState	extlibs/squirrel/squirrel/sqstate.cpp	/^SQSharedState::~SQSharedState()$/;"	f	class:SQSharedState
~SQStringTable	extlibs/squirrel/squirrel/sqstate.cpp	/^SQStringTable::~SQStringTable()$/;"	f	class:SQStringTable
ADD_STRING	extlibs/squirrel/squirrel/sqstate.h	/^#define ADD_STRING(/;"	d
NUMBER_MAX_CHAR	extlibs/squirrel/squirrel/sqstate.h	/^#define NUMBER_MAX_CHAR /;"	d
REMOVE_STRING	extlibs/squirrel/squirrel/sqstate.h	/^#define REMOVE_STRING(/;"	d
RefNode	extlibs/squirrel/squirrel/sqstate.h	/^	struct RefNode {$/;"	s	struct:RefTable
RefTable	extlibs/squirrel/squirrel/sqstate.h	/^struct RefTable {$/;"	s
SQSharedState	extlibs/squirrel/squirrel/sqstate.h	/^struct SQSharedState$/;"	s
SQStringTable	extlibs/squirrel/squirrel/sqstate.h	/^struct SQStringTable$/;"	s
_SQSTATE_H_	extlibs/squirrel/squirrel/sqstate.h	/^#define _SQSTATE_H_$/;"	d
_array_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _array_ddel	/;"	d
_array_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _array_default_delegate;$/;"	m	struct:SQSharedState
_array_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _array_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_buckets	extlibs/squirrel/squirrel/sqstate.h	/^	RefNode **_buckets;$/;"	m	struct:RefTable
_class_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _class_ddel	/;"	d
_class_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _class_default_delegate;$/;"	m	struct:SQSharedState
_class_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _class_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_closure_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _closure_ddel	/;"	d
_closure_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _closure_default_delegate;$/;"	m	struct:SQSharedState
_closure_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _closure_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_compilererrorhandler	extlibs/squirrel/squirrel/sqstate.h	/^	SQCOMPILERERROR _compilererrorhandler;$/;"	m	struct:SQSharedState
_constructoridx	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _constructoridx;$/;"	m	struct:SQSharedState
_consts	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _consts;$/;"	m	struct:SQSharedState
_debuginfo	extlibs/squirrel/squirrel/sqstate.h	/^	bool _debuginfo;$/;"	m	struct:SQSharedState
_errorfunc	extlibs/squirrel/squirrel/sqstate.h	/^	SQPRINTFUNCTION _errorfunc;$/;"	m	struct:SQSharedState
_freelist	extlibs/squirrel/squirrel/sqstate.h	/^	RefNode *_freelist;$/;"	m	struct:RefTable
_gc_chain	extlibs/squirrel/squirrel/sqstate.h	/^	SQCollectable *_gc_chain;$/;"	m	struct:SQSharedState
_generator_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _generator_ddel	/;"	d
_generator_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _generator_default_delegate;$/;"	m	struct:SQSharedState
_generator_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _generator_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_instance_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _instance_ddel	/;"	d
_instance_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _instance_default_delegate;$/;"	m	struct:SQSharedState
_instance_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _instance_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_metamethods	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtrVec *_metamethods;$/;"	m	struct:SQSharedState
_metamethodsmap	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _metamethodsmap;$/;"	m	struct:SQSharedState
_nodes	extlibs/squirrel/squirrel/sqstate.h	/^	RefNode *_nodes;$/;"	m	struct:RefTable
_notifyallexceptions	extlibs/squirrel/squirrel/sqstate.h	/^	bool _notifyallexceptions;$/;"	m	struct:SQSharedState
_number_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _number_ddel	/;"	d
_number_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _number_default_delegate;$/;"	m	struct:SQSharedState
_number_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _number_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_numofslots	extlibs/squirrel/squirrel/sqstate.h	/^	SQUnsignedInteger _numofslots;$/;"	m	struct:RefTable
_numofslots	extlibs/squirrel/squirrel/sqstate.h	/^	SQUnsignedInteger _numofslots;$/;"	m	struct:SQStringTable
_printfunc	extlibs/squirrel/squirrel/sqstate.h	/^	SQPRINTFUNCTION _printfunc;$/;"	m	struct:SQSharedState
_refs_table	extlibs/squirrel/squirrel/sqstate.h	/^	RefTable _refs_table;$/;"	m	struct:SQSharedState
_registry	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _registry;$/;"	m	struct:SQSharedState
_root_vm	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _root_vm;$/;"	m	struct:SQSharedState
_scratchpad	extlibs/squirrel/squirrel/sqstate.h	/^	SQChar *_scratchpad;$/;"	m	struct:SQSharedState
_scratchpadsize	extlibs/squirrel/squirrel/sqstate.h	/^	SQInteger _scratchpadsize;$/;"	m	struct:SQSharedState
_sharedstate	extlibs/squirrel/squirrel/sqstate.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQStringTable
_slotused	extlibs/squirrel/squirrel/sqstate.h	/^	SQUnsignedInteger _slotused;$/;"	m	struct:RefTable
_slotused	extlibs/squirrel/squirrel/sqstate.h	/^	SQUnsignedInteger _slotused;$/;"	m	struct:SQStringTable
_sp	extlibs/squirrel/squirrel/sqstate.h	/^#define _sp(/;"	d
_spval	extlibs/squirrel/squirrel/sqstate.h	/^#define _spval /;"	d
_string_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _string_ddel	/;"	d
_string_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _string_default_delegate;$/;"	m	struct:SQSharedState
_string_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _string_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_strings	extlibs/squirrel/squirrel/sqstate.h	/^	SQString **_strings;$/;"	m	struct:SQStringTable
_stringtable	extlibs/squirrel/squirrel/sqstate.h	/^	SQStringTable *_stringtable;$/;"	m	struct:SQSharedState
_systemstrings	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtrVec *_systemstrings;$/;"	m	struct:SQSharedState
_table_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _table_ddel	/;"	d
_table_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _table_default_delegate;$/;"	m	struct:SQSharedState
_table_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _table_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_thread_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _thread_ddel	/;"	d
_thread_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _thread_default_delegate;$/;"	m	struct:SQSharedState
_thread_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _thread_default_delegate_funcz[];$/;"	m	struct:SQSharedState
_types	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtrVec *_types;$/;"	m	struct:SQSharedState
_weakref_ddel	extlibs/squirrel/squirrel/sqstate.h	/^#define _weakref_ddel	/;"	d
_weakref_default_delegate	extlibs/squirrel/squirrel/sqstate.h	/^	SQObjectPtr _weakref_default_delegate;$/;"	m	struct:SQSharedState
_weakref_default_delegate_funcz	extlibs/squirrel/squirrel/sqstate.h	/^	static SQRegFunction _weakref_default_delegate_funcz[];$/;"	m	struct:SQSharedState
next	extlibs/squirrel/squirrel/sqstate.h	/^		struct RefNode *next;$/;"	m	struct:RefTable::RefNode	typeref:struct:RefTable::RefNode::RefNode
obj	extlibs/squirrel/squirrel/sqstate.h	/^		SQObjectPtr obj;$/;"	m	struct:RefTable::RefNode
refs	extlibs/squirrel/squirrel/sqstate.h	/^		SQUnsignedInteger refs;$/;"	m	struct:RefTable::RefNode
rsl	extlibs/squirrel/squirrel/sqstate.h	/^#define rsl(/;"	d
SQString	extlibs/squirrel/squirrel/sqstring.h	/^	SQString(){}$/;"	f	struct:SQString
SQString	extlibs/squirrel/squirrel/sqstring.h	/^struct SQString : public SQRefCounted$/;"	s
_SQSTRING_H_	extlibs/squirrel/squirrel/sqstring.h	/^#define _SQSTRING_H_$/;"	d
_hash	extlibs/squirrel/squirrel/sqstring.h	/^	SQHash _hash;$/;"	m	struct:SQString
_hashstr	extlibs/squirrel/squirrel/sqstring.h	/^inline SQHash _hashstr (const SQChar *s, size_t l)$/;"	f
_len	extlibs/squirrel/squirrel/sqstring.h	/^	SQInteger _len;$/;"	m	struct:SQString
_next	extlibs/squirrel/squirrel/sqstring.h	/^	SQString *_next; \/\/chain for the string table$/;"	m	struct:SQString
_sharedstate	extlibs/squirrel/squirrel/sqstring.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQString
_val	extlibs/squirrel/squirrel/sqstring.h	/^	SQChar _val[1];$/;"	m	struct:SQString
~SQString	extlibs/squirrel/squirrel/sqstring.h	/^	~SQString(){}$/;"	f	struct:SQString
AllocNodes	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::AllocNodes(SQInteger nSize)$/;"	f	class:SQTable
Clear	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::Clear()$/;"	f	class:SQTable
Clone	extlibs/squirrel/squirrel/sqtable.cpp	/^SQTable *SQTable::Clone()$/;"	f	class:SQTable
Finalize	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::Finalize()$/;"	f	class:SQTable
Get	extlibs/squirrel/squirrel/sqtable.cpp	/^bool SQTable::Get(const SQObjectPtr &key,SQObjectPtr &val)$/;"	f	class:SQTable
NewSlot	extlibs/squirrel/squirrel/sqtable.cpp	/^bool SQTable::NewSlot(const SQObjectPtr &key,const SQObjectPtr &val)$/;"	f	class:SQTable
Next	extlibs/squirrel/squirrel/sqtable.cpp	/^SQInteger SQTable::Next(bool getweakrefs,const SQObjectPtr &refpos, SQObjectPtr &outkey, SQObjectPtr &outval)$/;"	f	class:SQTable
Rehash	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::Rehash(bool force)$/;"	f	class:SQTable
Remove	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::Remove(const SQObjectPtr &key)$/;"	f	class:SQTable
SQTable	extlibs/squirrel/squirrel/sqtable.cpp	/^SQTable::SQTable(SQSharedState *ss,SQInteger nInitialSize)$/;"	f	class:SQTable
Set	extlibs/squirrel/squirrel/sqtable.cpp	/^bool SQTable::Set(const SQObjectPtr &key, const SQObjectPtr &val)$/;"	f	class:SQTable
_ClearNodes	extlibs/squirrel/squirrel/sqtable.cpp	/^void SQTable::_ClearNodes()$/;"	f	class:SQTable
CountUsed	extlibs/squirrel/squirrel/sqtable.h	/^	SQInteger CountUsed(){ return _usednodes;}$/;"	f	struct:SQTable
Create	extlibs/squirrel/squirrel/sqtable.h	/^	static SQTable* Create(SQSharedState *ss,SQInteger nInitialSize)$/;"	f	struct:SQTable
GetType	extlibs/squirrel/squirrel/sqtable.h	/^	SQObjectType GetType() {return OT_TABLE;}$/;"	f	struct:SQTable
HashObj	extlibs/squirrel/squirrel/sqtable.h	/^inline SQHash HashObj(const SQObjectPtr &key)$/;"	f
Release	extlibs/squirrel/squirrel/sqtable.h	/^	void Release()$/;"	f	struct:SQTable
SQTable	extlibs/squirrel/squirrel/sqtable.h	/^struct SQTable : public SQDelegable $/;"	s
_Get	extlibs/squirrel/squirrel/sqtable.h	/^	inline _HashNode *_Get(const SQObjectPtr &key,SQHash hash)$/;"	f	struct:SQTable
_HashNode	extlibs/squirrel/squirrel/sqtable.h	/^		_HashNode() { next = NULL; }$/;"	f	struct:SQTable::_HashNode
_HashNode	extlibs/squirrel/squirrel/sqtable.h	/^	struct _HashNode$/;"	s	struct:SQTable
_SQTABLE_H_	extlibs/squirrel/squirrel/sqtable.h	/^#define _SQTABLE_H_$/;"	d
_firstfree	extlibs/squirrel/squirrel/sqtable.h	/^	_HashNode *_firstfree;$/;"	m	struct:SQTable
_nodes	extlibs/squirrel/squirrel/sqtable.h	/^	_HashNode *_nodes;$/;"	m	struct:SQTable
_numofnodes	extlibs/squirrel/squirrel/sqtable.h	/^	SQInteger _numofnodes;$/;"	m	struct:SQTable
_usednodes	extlibs/squirrel/squirrel/sqtable.h	/^	SQInteger _usednodes;$/;"	m	struct:SQTable
hashptr	extlibs/squirrel/squirrel/sqtable.h	/^#define hashptr(/;"	d
key	extlibs/squirrel/squirrel/sqtable.h	/^		SQObjectPtr key;$/;"	m	struct:SQTable::_HashNode
next	extlibs/squirrel/squirrel/sqtable.h	/^		_HashNode *next;$/;"	m	struct:SQTable::_HashNode
val	extlibs/squirrel/squirrel/sqtable.h	/^		SQObjectPtr val;$/;"	m	struct:SQTable::_HashNode
~SQTable	extlibs/squirrel/squirrel/sqtable.h	/^	~SQTable()$/;"	f	struct:SQTable
Create	extlibs/squirrel/squirrel/squserdata.h	/^	static SQUserData* Create(SQSharedState *ss, SQInteger size)$/;"	f	struct:SQUserData
Finalize	extlibs/squirrel/squirrel/squserdata.h	/^	void Finalize(){SetDelegate(NULL);}$/;"	f	struct:SQUserData
GetType	extlibs/squirrel/squirrel/squserdata.h	/^	SQObjectType GetType(){ return OT_USERDATA;}$/;"	f	struct:SQUserData
Release	extlibs/squirrel/squirrel/squserdata.h	/^	void Release() {$/;"	f	struct:SQUserData
SQUserData	extlibs/squirrel/squirrel/squserdata.h	/^	SQUserData(SQSharedState *ss){ _delegate = 0; _hook = NULL; INIT_CHAIN(); ADD_TO_CHAIN(&_ss(this)->_gc_chain, this); }$/;"	f	struct:SQUserData
SQUserData	extlibs/squirrel/squirrel/squserdata.h	/^struct SQUserData : SQDelegable$/;"	s
_SQUSERDATA_H_	extlibs/squirrel/squirrel/squserdata.h	/^#define _SQUSERDATA_H_$/;"	d
_hook	extlibs/squirrel/squirrel/squserdata.h	/^	SQRELEASEHOOK _hook;$/;"	m	struct:SQUserData
_size	extlibs/squirrel/squirrel/squserdata.h	/^	SQInteger _size;$/;"	m	struct:SQUserData
_typetag	extlibs/squirrel/squirrel/squserdata.h	/^	SQUserPointer _typetag;$/;"	m	struct:SQUserData
~SQUserData	extlibs/squirrel/squirrel/squserdata.h	/^	~SQUserData()$/;"	f	struct:SQUserData
SQ_FREE	extlibs/squirrel/squirrel/squtils.h	/^#define SQ_FREE(/;"	d
SQ_MALLOC	extlibs/squirrel/squirrel/squtils.h	/^#define SQ_MALLOC(/;"	d
SQ_REALLOC	extlibs/squirrel/squirrel/squtils.h	/^#define SQ_REALLOC(/;"	d
_SQUTILS_H_	extlibs/squirrel/squirrel/squtils.h	/^#define _SQUTILS_H_$/;"	d
_allocated	extlibs/squirrel/squirrel/squtils.h	/^	SQUnsignedInteger _allocated;$/;"	m	class:sqvector
_realloc	extlibs/squirrel/squirrel/squtils.h	/^	void _realloc(SQUnsignedInteger newsize)$/;"	f	class:sqvector
_size	extlibs/squirrel/squirrel/squtils.h	/^	SQUnsignedInteger _size;$/;"	m	class:sqvector
_vals	extlibs/squirrel/squirrel/squtils.h	/^	T* _vals;$/;"	m	class:sqvector
back	extlibs/squirrel/squirrel/squtils.h	/^	inline T &back() const { return _vals[_size - 1]; }$/;"	f	class:sqvector
capacity	extlibs/squirrel/squirrel/squtils.h	/^	SQUnsignedInteger capacity() { return _allocated; }$/;"	f	class:sqvector
copy	extlibs/squirrel/squirrel/squtils.h	/^	void copy(const sqvector<T>& v)$/;"	f	class:sqvector
empty	extlibs/squirrel/squirrel/squtils.h	/^	bool empty() const { return (_size <= 0); }$/;"	f	class:sqvector
insert	extlibs/squirrel/squirrel/squtils.h	/^	void insert(SQUnsignedInteger idx, const T& val)$/;"	f	class:sqvector
operator []	extlibs/squirrel/squirrel/squtils.h	/^	inline T& operator[](SQUnsignedInteger pos) const{ return _vals[pos]; }$/;"	f	class:sqvector
pop_back	extlibs/squirrel/squirrel/squtils.h	/^	inline void pop_back()$/;"	f	class:sqvector
push_back	extlibs/squirrel/squirrel/squtils.h	/^	inline T &push_back(const T& val = T())$/;"	f	class:sqvector
remove	extlibs/squirrel/squirrel/squtils.h	/^	void remove(SQUnsignedInteger idx)$/;"	f	class:sqvector
reserve	extlibs/squirrel/squirrel/squtils.h	/^	void reserve(SQUnsignedInteger newsize) { _realloc(newsize); }$/;"	f	class:sqvector
resize	extlibs/squirrel/squirrel/squtils.h	/^	void resize(SQUnsignedInteger newsize, const T& fill = T())$/;"	f	class:sqvector
shrinktofit	extlibs/squirrel/squirrel/squtils.h	/^	void shrinktofit() { if(_size > 4) { _realloc(_size); } }$/;"	f	class:sqvector
size	extlibs/squirrel/squirrel/squtils.h	/^	inline SQUnsignedInteger size() const { return _size; }$/;"	f	class:sqvector
sq_aligning	extlibs/squirrel/squirrel/squtils.h	/^#define sq_aligning(/;"	d
sq_delete	extlibs/squirrel/squirrel/squtils.h	/^#define sq_delete(/;"	d
sq_new	extlibs/squirrel/squirrel/squtils.h	/^#define sq_new(/;"	d
sqvector	extlibs/squirrel/squirrel/squtils.h	/^	sqvector()$/;"	f	class:sqvector
sqvector	extlibs/squirrel/squirrel/squtils.h	/^	sqvector(const sqvector<T>& v)$/;"	f	class:sqvector
sqvector	extlibs/squirrel/squirrel/squtils.h	/^template<typename T> class sqvector$/;"	c
top	extlibs/squirrel/squirrel/squtils.h	/^	T& top() const { return _vals[_size - 1]; }$/;"	f	class:sqvector
~sqvector	extlibs/squirrel/squirrel/squtils.h	/^	~sqvector()$/;"	f	class:sqvector
ARITH_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::ARITH_OP(SQUnsignedInteger op,SQObjectPtr &trg,const SQObjectPtr &o1,const SQObjectPtr &o2)$/;"	f	class:SQVM
ArithMetaMethod	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::ArithMetaMethod(SQInteger op,const SQObjectPtr &o1,const SQObjectPtr &o2,SQObjectPtr &dest)$/;"	f	class:SQVM
BW_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::BW_OP(SQUnsignedInteger op,SQObjectPtr &trg,const SQObjectPtr &o1,const SQObjectPtr &o2)$/;"	f	class:SQVM
CLASS_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CLASS_OP(SQObjectPtr &target,SQInteger baseclass,SQInteger attributes)$/;"	f	class:SQVM
CLOSURE_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CLOSURE_OP(SQObjectPtr &target, SQFunctionProto *func)$/;"	f	class:SQVM
CMP_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CMP_OP(CmpOP op, const SQObjectPtr &o1,const SQObjectPtr &o2,SQObjectPtr &res)$/;"	f	class:SQVM
COND_LITERAL	extlibs/squirrel/squirrel/sqvm.cpp	/^#define COND_LITERAL /;"	d	file:
Call	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Call(SQObjectPtr &closure,SQInteger nparams,SQInteger stackbase,SQObjectPtr &outres,SQBool raiseerror)$/;"	f	class:SQVM
CallDebugHook	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::CallDebugHook(SQInteger type,SQInteger forcedline)$/;"	f	class:SQVM
CallErrorHandler	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::CallErrorHandler(SQObjectPtr &error)$/;"	f	class:SQVM
CallMetaMethod	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CallMetaMethod(SQObjectPtr &closure,SQMetaMethod mm,SQInteger nparams,SQObjectPtr &outres)$/;"	f	class:SQVM
CallNative	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CallNative(SQNativeClosure *nclosure, SQInteger nargs, SQInteger newbase, SQObjectPtr &retval, bool &suspend)$/;"	f	class:SQVM
Clone	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Clone(const SQObjectPtr &self,SQObjectPtr &target)$/;"	f	class:SQVM
CloseOuters	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::CloseOuters(SQObjectPtr *stackindex) {$/;"	f	class:SQVM
CreateClassInstance	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::CreateClassInstance(SQClass *theclass, SQObjectPtr &inst, SQObjectPtr &constructor)$/;"	f	class:SQVM
DeleteSlot	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::DeleteSlot(const SQObjectPtr &self,const SQObjectPtr &key,SQObjectPtr &res)$/;"	f	class:SQVM
DerefInc	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::DerefInc(SQInteger op,SQObjectPtr &target, SQObjectPtr &self, SQObjectPtr &key, SQObjectPtr &incr, bool postfix,SQInteger selfidx)$/;"	f	class:SQVM
EnterFrame	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::EnterFrame(SQInteger newbase, SQInteger newtop, bool tailcall)$/;"	f	class:SQVM
Execute	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Execute(SQObjectPtr &closure, SQInteger nargs, SQInteger stackbase,SQObjectPtr &outres, SQBool raiseerror,ExecutionType et)$/;"	f	class:SQVM
FALLBACK_ERROR	extlibs/squirrel/squirrel/sqvm.cpp	/^#define FALLBACK_ERROR	/;"	d	file:
FALLBACK_NO_MATCH	extlibs/squirrel/squirrel/sqvm.cpp	/^#define FALLBACK_NO_MATCH	/;"	d	file:
FALLBACK_OK	extlibs/squirrel/squirrel/sqvm.cpp	/^#define FALLBACK_OK	/;"	d	file:
FOREACH_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::FOREACH_OP(SQObjectPtr &o1,SQObjectPtr &o2,SQObjectPtr $/;"	f	class:SQVM
FallBackGet	extlibs/squirrel/squirrel/sqvm.cpp	/^SQInteger SQVM::FallBackGet(const SQObjectPtr &self,const SQObjectPtr &key,SQObjectPtr &dest)$/;"	f	class:SQVM
FallBackSet	extlibs/squirrel/squirrel/sqvm.cpp	/^SQInteger SQVM::FallBackSet(const SQObjectPtr &self,const SQObjectPtr &key,const SQObjectPtr &val)$/;"	f	class:SQVM
Finalize	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::Finalize()$/;"	f	class:SQVM
FindOuter	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::FindOuter(SQObjectPtr &target, SQObjectPtr *stackindex)$/;"	f	class:SQVM
Get	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Get(const SQObjectPtr &self,const SQObjectPtr &key,SQObjectPtr &dest,bool raw, SQInteger selfidx)$/;"	f	class:SQVM
GetAt	extlibs/squirrel/squirrel/sqvm.cpp	/^SQObjectPtr &SQVM::GetAt(SQInteger n) { return _stack[n]; }$/;"	f	class:SQVM
GetUp	extlibs/squirrel/squirrel/sqvm.cpp	/^SQObjectPtr &SQVM::GetUp(SQInteger n) { return _stack[_top+n]; }$/;"	f	class:SQVM
Init	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Init(SQVM *friendvm, SQInteger stacksize)$/;"	f	class:SQVM
InvokeDefaultDelegate	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::InvokeDefaultDelegate(const SQObjectPtr &self,const SQObjectPtr &key,SQObjectPtr &dest)$/;"	f	class:SQVM
IsEqual	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::IsEqual(const SQObjectPtr &o1,const SQObjectPtr &o2,bool &res)$/;"	f	class:SQVM
IsFalse	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::IsFalse(SQObjectPtr &o)$/;"	f	class:SQVM
LeaveFrame	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::LeaveFrame() {$/;"	f	class:SQVM
NEG_OP	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::NEG_OP(SQObjectPtr &trg,const SQObjectPtr &o)$/;"	f	class:SQVM
NewSlot	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::NewSlot(const SQObjectPtr &self,const SQObjectPtr &key,const SQObjectPtr &val,bool bstatic)$/;"	f	class:SQVM
NewSlotA	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::NewSlotA(const SQObjectPtr &self,const SQObjectPtr &key,const SQObjectPtr &val,const SQObjectPtr &attrs,bool bstatic,bool raw)$/;"	f	class:SQVM
ObjCmp	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::ObjCmp(const SQObjectPtr &o1,const SQObjectPtr &o2,SQInteger &result)$/;"	f	class:SQVM
PLOCAL_INC	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::PLOCAL_INC(SQInteger op,SQObjectPtr &target, SQObjectPtr &a, SQObjectPtr &incr)$/;"	f	class:SQVM
Pop	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::Pop() {$/;"	f	class:SQVM
Pop	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::Pop(SQInteger n) {$/;"	f	class:SQVM
PopGet	extlibs/squirrel/squirrel/sqvm.cpp	/^SQObjectPtr &SQVM::PopGet() { return _stack[--_top]; }$/;"	f	class:SQVM
Push	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::Push(const SQObjectPtr &o) { _stack[_top++] = o; }$/;"	f	class:SQVM
PushNull	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::PushNull() { _stack[_top++].Null(); }$/;"	f	class:SQVM
RelocateOuters	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::RelocateOuters()$/;"	f	class:SQVM
Remove	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::Remove(SQInteger n) {$/;"	f	class:SQVM
Return	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Return(SQInteger _arg0, SQInteger _arg1, SQObjectPtr &retval)$/;"	f	class:SQVM
SQVM	extlibs/squirrel/squirrel/sqvm.cpp	/^SQVM::SQVM(SQSharedState *ss)$/;"	f	class:SQVM
SQ_THROW	extlibs/squirrel/squirrel/sqvm.cpp	/^#define SQ_THROW(/;"	d	file:
Set	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::Set(const SQObjectPtr &self,const SQObjectPtr &key,const SQObjectPtr &val,SQInteger selfidx)$/;"	f	class:SQVM
StartCall	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::StartCall(SQClosure *closure,SQInteger target,SQInteger args,SQInteger stackbase,bool tailcall)$/;"	f	class:SQVM
StringCat	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::StringCat(const SQObjectPtr &str,const SQObjectPtr &obj,SQObjectPtr &dest)$/;"	f	class:SQVM
Suspend	extlibs/squirrel/squirrel/sqvm.cpp	/^SQRESULT SQVM::Suspend()$/;"	f	class:SQVM
TOP	extlibs/squirrel/squirrel/sqvm.cpp	/^#define TOP(/;"	d	file:
ToString	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::ToString(const SQObjectPtr &o,SQObjectPtr &res)$/;"	f	class:SQVM
Top	extlibs/squirrel/squirrel/sqvm.cpp	/^SQObjectPtr &SQVM::Top() { return _stack[_top-1]; }$/;"	f	class:SQVM
TypeOf	extlibs/squirrel/squirrel/sqvm.cpp	/^bool SQVM::TypeOf(const SQObjectPtr &obj1,SQObjectPtr &dest)$/;"	f	class:SQVM
_ARITH_	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _ARITH_(/;"	d	file:
_ARITH_NOZERO	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _ARITH_NOZERO(/;"	d	file:
_FINISH	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _FINISH(/;"	d	file:
_GUARD	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _GUARD(/;"	d	file:
_RET_ON_FAIL	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _RET_ON_FAIL(/;"	d	file:
_RET_SUCCEED	extlibs/squirrel/squirrel/sqvm.cpp	/^#define _RET_SUCCEED(/;"	d	file:
arg0	extlibs/squirrel/squirrel/sqvm.cpp	/^#define arg0 /;"	d	file:
arg1	extlibs/squirrel/squirrel/sqvm.cpp	/^#define arg1 /;"	d	file:
arg2	extlibs/squirrel/squirrel/sqvm.cpp	/^#define arg2 /;"	d	file:
arg3	extlibs/squirrel/squirrel/sqvm.cpp	/^#define arg3 /;"	d	file:
dumpstack	extlibs/squirrel/squirrel/sqvm.cpp	/^void SQVM::dumpstack(SQInteger stackbase,bool dumpall)$/;"	f	class:SQVM
sarg0	extlibs/squirrel/squirrel/sqvm.cpp	/^#define sarg0 /;"	d	file:
sarg1	extlibs/squirrel/squirrel/sqvm.cpp	/^#define sarg1 /;"	d	file:
sarg3	extlibs/squirrel/squirrel/sqvm.cpp	/^#define sarg3 /;"	d	file:
~SQVM	extlibs/squirrel/squirrel/sqvm.cpp	/^SQVM::~SQVM()$/;"	f	class:SQVM
AutoDec	extlibs/squirrel/squirrel/sqvm.h	/^	AutoDec(SQInteger *n) { _n = n; }$/;"	f	struct:AutoDec
AutoDec	extlibs/squirrel/squirrel/sqvm.h	/^struct AutoDec{$/;"	s
CallInfo	extlibs/squirrel/squirrel/sqvm.h	/^	struct CallInfo{$/;"	s	struct:SQVM
CallInfoVec	extlibs/squirrel/squirrel/sqvm.h	/^typedef sqvector<CallInfo> CallInfoVec;$/;"	t	struct:SQVM
DONT_FALL_BACK	extlibs/squirrel/squirrel/sqvm.h	/^#define DONT_FALL_BACK /;"	d
ET_CALL	extlibs/squirrel/squirrel/sqvm.h	/^	enum ExecutionType { ET_CALL, ET_RESUME_GENERATOR, ET_RESUME_VM,ET_RESUME_THROW_VM };$/;"	e	enum:SQVM::ExecutionType
ET_RESUME_GENERATOR	extlibs/squirrel/squirrel/sqvm.h	/^	enum ExecutionType { ET_CALL, ET_RESUME_GENERATOR, ET_RESUME_VM,ET_RESUME_THROW_VM };$/;"	e	enum:SQVM::ExecutionType
ET_RESUME_THROW_VM	extlibs/squirrel/squirrel/sqvm.h	/^	enum ExecutionType { ET_CALL, ET_RESUME_GENERATOR, ET_RESUME_VM,ET_RESUME_THROW_VM };$/;"	e	enum:SQVM::ExecutionType
ET_RESUME_VM	extlibs/squirrel/squirrel/sqvm.h	/^	enum ExecutionType { ET_CALL, ET_RESUME_GENERATOR, ET_RESUME_VM,ET_RESUME_THROW_VM };$/;"	e	enum:SQVM::ExecutionType
ExceptionsTraps	extlibs/squirrel/squirrel/sqvm.h	/^typedef sqvector<SQExceptionTrap> ExceptionsTraps;$/;"	t
ExecutionType	extlibs/squirrel/squirrel/sqvm.h	/^	enum ExecutionType { ET_CALL, ET_RESUME_GENERATOR, ET_RESUME_VM,ET_RESUME_THROW_VM };$/;"	g	struct:SQVM
GetType	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectType GetType() {return OT_THREAD;}$/;"	f	struct:SQVM
GrowCallStack	extlibs/squirrel/squirrel/sqvm.h	/^	void GrowCallStack() {$/;"	f	struct:SQVM
MAX_NATIVE_CALLS	extlibs/squirrel/squirrel/sqvm.h	/^#define MAX_NATIVE_CALLS /;"	d
MIN_STACK_OVERHEAD	extlibs/squirrel/squirrel/sqvm.h	/^#define MIN_STACK_OVERHEAD /;"	d
POP_CALLINFO	extlibs/squirrel/squirrel/sqvm.h	/^#define POP_CALLINFO(/;"	d
PUSH_CALLINFO	extlibs/squirrel/squirrel/sqvm.h	/^#define PUSH_CALLINFO(/;"	d
Release	extlibs/squirrel/squirrel/sqvm.h	/^	void Release(){ sq_delete(this,SQVM); }$/;"	f	struct:SQVM
SQExceptionTrap	extlibs/squirrel/squirrel/sqvm.h	/^	SQExceptionTrap() {}$/;"	f	struct:SQExceptionTrap
SQExceptionTrap	extlibs/squirrel/squirrel/sqvm.h	/^	SQExceptionTrap(SQInteger ss, SQInteger stackbase,SQInstruction *ip, SQInteger ex_target){ _stacksize = ss; _stackbase = stackbase; _ip = ip; _extarget = ex_target;}$/;"	f	struct:SQExceptionTrap
SQExceptionTrap	extlibs/squirrel/squirrel/sqvm.h	/^	SQExceptionTrap(const SQExceptionTrap &et) { (*this) = et;	}$/;"	f	struct:SQExceptionTrap
SQExceptionTrap	extlibs/squirrel/squirrel/sqvm.h	/^struct SQExceptionTrap{$/;"	s
SQVM	extlibs/squirrel/squirrel/sqvm.h	/^struct SQVM : public CHAINABLE_OBJ$/;"	s
SQ_SUSPEND_FLAG	extlibs/squirrel/squirrel/sqvm.h	/^#define SQ_SUSPEND_FLAG /;"	d
STK	extlibs/squirrel/squirrel/sqvm.h	/^#define STK(/;"	d
TARGET	extlibs/squirrel/squirrel/sqvm.h	/^#define TARGET /;"	d
_INLINE	extlibs/squirrel/squirrel/sqvm.h	/^#define _INLINE /;"	d
_SQVM_H_	extlibs/squirrel/squirrel/sqvm.h	/^#define _SQVM_H_$/;"	d
_alloccallsstacksize	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _alloccallsstacksize;$/;"	m	struct:SQVM
_callsstack	extlibs/squirrel/squirrel/sqvm.h	/^	CallInfo* _callsstack;$/;"	m	struct:SQVM
_callsstacksize	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _callsstacksize;$/;"	m	struct:SQVM
_callstackdata	extlibs/squirrel/squirrel/sqvm.h	/^	sqvector<CallInfo>  _callstackdata;$/;"	m	struct:SQVM
_closure	extlibs/squirrel/squirrel/sqvm.h	/^		SQObjectPtr _closure;$/;"	m	struct:SQVM::CallInfo
_debughook	extlibs/squirrel/squirrel/sqvm.h	/^	bool _debughook;$/;"	m	struct:SQVM
_debughook_closure	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtr _debughook_closure;$/;"	m	struct:SQVM
_debughook_native	extlibs/squirrel/squirrel/sqvm.h	/^	SQDEBUGHOOK _debughook_native;$/;"	m	struct:SQVM
_errorhandler	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtr _errorhandler;$/;"	m	struct:SQVM
_etraps	extlibs/squirrel/squirrel/sqvm.h	/^		SQInt32 _etraps;$/;"	m	struct:SQVM::CallInfo
_etraps	extlibs/squirrel/squirrel/sqvm.h	/^	ExceptionsTraps _etraps;$/;"	m	struct:SQVM
_extarget	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _extarget;$/;"	m	struct:SQExceptionTrap
_foreignptr	extlibs/squirrel/squirrel/sqvm.h	/^	void *_foreignptr;$/;"	m	struct:SQVM
_generator	extlibs/squirrel/squirrel/sqvm.h	/^		SQGenerator *_generator;$/;"	m	struct:SQVM::CallInfo
_ip	extlibs/squirrel/squirrel/sqvm.h	/^		SQInstruction *_ip;$/;"	m	struct:SQVM::CallInfo
_ip	extlibs/squirrel/squirrel/sqvm.h	/^	SQInstruction *_ip;$/;"	m	struct:SQExceptionTrap
_lasterror	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtr _lasterror;$/;"	m	struct:SQVM
_literals	extlibs/squirrel/squirrel/sqvm.h	/^		SQObjectPtr *_literals;$/;"	m	struct:SQVM::CallInfo
_n	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger *_n;$/;"	m	struct:AutoDec
_ncalls	extlibs/squirrel/squirrel/sqvm.h	/^		SQInt32 _ncalls;$/;"	m	struct:SQVM::CallInfo
_nmetamethodscall	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _nmetamethodscall;$/;"	m	struct:SQVM
_nnativecalls	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _nnativecalls;$/;"	m	struct:SQVM
_openouters	extlibs/squirrel/squirrel/sqvm.h	/^	SQOuter	*_openouters;$/;"	m	struct:SQVM
_opt_ss	extlibs/squirrel/squirrel/sqvm.h	/^#define _opt_ss(/;"	d
_prevstkbase	extlibs/squirrel/squirrel/sqvm.h	/^		SQInt32 _prevstkbase;$/;"	m	struct:SQVM::CallInfo
_prevtop	extlibs/squirrel/squirrel/sqvm.h	/^		SQInt32 _prevtop;$/;"	m	struct:SQVM::CallInfo
_root	extlibs/squirrel/squirrel/sqvm.h	/^		SQBool _root;$/;"	m	struct:SQVM::CallInfo
_roottable	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtr _roottable;$/;"	m	struct:SQVM
_sharedstate	extlibs/squirrel/squirrel/sqvm.h	/^	SQSharedState *_sharedstate;$/;"	m	struct:SQVM
_ss	extlibs/squirrel/squirrel/sqvm.h	/^#define _ss(/;"	d
_stack	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtrVec _stack;$/;"	m	struct:SQVM
_stackbase	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _stackbase;$/;"	m	struct:SQExceptionTrap
_stackbase	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _stackbase;$/;"	m	struct:SQVM
_stacksize	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _stacksize;$/;"	m	struct:SQExceptionTrap
_suspended	extlibs/squirrel/squirrel/sqvm.h	/^	SQBool _suspended;$/;"	m	struct:SQVM
_suspended_root	extlibs/squirrel/squirrel/sqvm.h	/^	SQBool _suspended_root;$/;"	m	struct:SQVM
_suspended_target	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _suspended_target;$/;"	m	struct:SQVM
_suspended_traps	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _suspended_traps;$/;"	m	struct:SQVM
_target	extlibs/squirrel/squirrel/sqvm.h	/^		SQInt32 _target;$/;"	m	struct:SQVM::CallInfo
_top	extlibs/squirrel/squirrel/sqvm.h	/^	SQInteger _top;$/;"	m	struct:SQVM
ci	extlibs/squirrel/squirrel/sqvm.h	/^	CallInfo *ci;$/;"	m	struct:SQVM
stack_get	extlibs/squirrel/squirrel/sqvm.h	/^inline SQObjectPtr &stack_get(HSQUIRRELVM v,SQInteger idx){return ((idx>=0)?(v->GetAt(idx+v->_stackbase-1)):(v->GetUp(idx)));}$/;"	f
temp_reg	extlibs/squirrel/squirrel/sqvm.h	/^	SQObjectPtr temp_reg;$/;"	m	struct:SQVM
~AutoDec	extlibs/squirrel/squirrel/sqvm.h	/^	~AutoDec() { (*_n)--; }$/;"	f	struct:AutoDec
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
MARMOT_ERROR_HPP	include/marmot/Error.hpp	/^#define MARMOT_ERROR_HPP$/;"	d
MarmotError	include/marmot/Error.hpp	/^  class MarmotError : public std::runtime_error {$/;"	c	namespace:marmot
marmot	include/marmot/Error.hpp	/^namespace marmot {$/;"	n
MARMOT_REFERENCE_HPP	include/marmot/Reference.hpp	/^#define MARMOT_REFERENCE_HPP$/;"	d
Reference	include/marmot/Reference.hpp	/^    Reference(HSQUIRRELVM vm, int index)$/;"	f	class:marmot::Reference
Reference	include/marmot/Reference.hpp	/^  class Reference {$/;"	c	namespace:marmot
detail	include/marmot/Reference.hpp	/^  namespace detail {$/;"	n	namespace:marmot
getReferenceCount	include/marmot/Reference.hpp	/^    unsigned int getReferenceCount() {$/;"	f	class:marmot::Reference
getTypeString	include/marmot/Reference.hpp	/^    std::string getTypeString() {$/;"	f	class:marmot::Reference
marmot	include/marmot/Reference.hpp	/^namespace marmot {$/;"	n
obj	include/marmot/Reference.hpp	/^    HSQOBJECT obj;$/;"	m	class:marmot::Reference
push	include/marmot/Reference.hpp	/^    void push() {$/;"	f	class:marmot::Reference
release	include/marmot/Reference.hpp	/^    bool release() {$/;"	f	class:marmot::Reference
releaseCount	include/marmot/Reference.hpp	/^    static int releaseCount;$/;"	m	class:marmot::Reference
releaseCount	include/marmot/Reference.hpp	/^  int Reference::releaseCount = 0;$/;"	m	class:marmot::Reference
vm	include/marmot/Reference.hpp	/^      : vm(nullptr)$/;"	f	class:marmot::Reference
vm	include/marmot/Reference.hpp	/^    HSQUIRRELVM vm = nullptr; \/\/ Non-owning pointer$/;"	m	class:marmot::Reference
~Reference	include/marmot/Reference.hpp	/^    virtual ~Reference() {$/;"	f	class:marmot::Reference
MARMOT_STATE_HPP	include/marmot/State.hpp	/^#define MARMOT_STATE_HPP$/;"	d
State	include/marmot/State.hpp	/^    State(const unsigned int stackSize = 1024)$/;"	f	class:marmot::State
State	include/marmot/State.hpp	/^  class State {$/;"	c	namespace:marmot
detail	include/marmot/State.hpp	/^  namespace detail {$/;"	n	namespace:marmot
error	include/marmot/State.hpp	/^    void error(HSQUIRRELVM vm, const SQChar *s, ...) {$/;"	f	namespace:marmot::detail
getRootTable	include/marmot/State.hpp	/^    Reference && getRootTable() {$/;"	f	class:marmot::State
marmot	include/marmot/State.hpp	/^namespace marmot {$/;"	n
print	include/marmot/State.hpp	/^    void print(HSQUIRRELVM vm, const SQChar *s, ...) {$/;"	f	namespace:marmot::detail
root	include/marmot/State.hpp	/^    Reference root;$/;"	m	class:marmot::State
vm	include/marmot/State.hpp	/^    std::unique_ptr<SQVM, void(*)(SQVM*)> vm;$/;"	m	class:marmot::State
~State	include/marmot/State.hpp	/^    ~State() {$/;"	f	class:marmot::State
MARMOT_VM_INCLUDED	include/marmot/VM.hpp	/^#define MARMOT_VM_INCLUDED$/;"	d
VM	include/marmot/VM.hpp	/^    VM()$/;"	f	class:marmot::VM
VM	include/marmot/VM.hpp	/^  class VM {$/;"	c	namespace:marmot
detail	include/marmot/VM.hpp	/^  namespace detail {$/;"	n	namespace:marmot
get	include/marmot/VM.hpp	/^    void get(int index) {$/;"	f	class:marmot::VM
getStackTop	include/marmot/VM.hpp	/^    int getStackTop() const {$/;"	f	class:marmot::VM
instance	include/marmot/VM.hpp	/^    HSQUIRRELVM instance;$/;"	m	class:marmot::VM
marmot	include/marmot/VM.hpp	/^namespace marmot {  $/;"	n
pop	include/marmot/VM.hpp	/^    void pop(int numElements) {$/;"	f	class:marmot::VM
popTop	include/marmot/VM.hpp	/^    void popTop() {$/;"	f	class:marmot::VM
print_foo_bar	include/marmot/VM.hpp	/^    SQInteger print_foo_bar(HSQUIRRELVM vm) {$/;"	f	namespace:marmot::detail
push	include/marmot/VM.hpp	/^    void push() {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const SQChar * value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const T value, const Ts... values) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const bool value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const float value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const int value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const std::string & value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(const std::string && value) {$/;"	f	class:marmot::VM
push	include/marmot/VM.hpp	/^    void push(std::nullptr_t value) {$/;"	f	class:marmot::VM
pushRootTable	include/marmot/VM.hpp	/^    void pushRootTable() {$/;"	f	class:marmot::VM
remove	include/marmot/VM.hpp	/^    void remove(int index) {$/;"	f	class:marmot::VM
squirrelPrintFunction	include/marmot/VM.hpp	/^    void squirrelPrintFunction(HSQUIRRELVM vm, const SQChar *s, ...) {$/;"	f	namespace:marmot::detail
~VM	include/marmot/VM.hpp	/^    ~VM() {$/;"	f	class:marmot::VM
main	src/Main.cpp	/^int main(int argc, char** argv) {$/;"	f
marmot	src/marmot/VM.cpp	/^namespace marmot {$/;"	n	file:
