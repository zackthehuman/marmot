{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sq_get",
				"sq_getrefcount"
			],
			[
				"sq_re",
				"sq_release"
			],
			[
				"type",
				"typeString"
			],
			[
				"pri",
				"print_foo_bar"
			],
			[
				"arg",
				"argCount"
			],
			[
				"remove",
				"removeIndex"
			],
			[
				"outp",
				"output1"
			],
			[
				"out",
				"output2"
			],
			[
				"size",
				"sizeof"
			],
			[
				"SQF",
				"SQFalse"
			],
			[
				"SQ",
				"SQ_SUCCEEDED"
			],
			[
				"null",
				"nullptr_t"
			],
			[
				"pop",
				"popIndex"
			],
			[
				"get",
				"getStackTop"
			],
			[
				"sq_pus",
				"sq_pushstring"
			],
			[
				"l",
				"length"
			],
			[
				"sq",
				"sq_pushfloat"
			],
			[
				"getVel",
				"getVelocityX"
			],
			[
				"offs",
				"offsetX"
			],
			[
				"room",
				"roomOriginY"
			],
			[
				"roomO",
				"roomOriginX"
			],
			[
				"offset",
				"offsetY"
			],
			[
				"fade",
				"fadeOverlay"
			],
			[
				"chan",
				"changeAction"
			],
			[
				"Wait",
				"WaitTask"
			],
			[
				"weapon",
				"weaponInstance"
			],
			[
				"usage",
				"usageSound"
			],
			[
				"make",
				"make_shared"
			],
			[
				"task",
				"taskQueue"
			],
			[
				"pl",
				"player"
			],
			[
				"sam",
				"samplePlayer"
			],
			[
				"other",
				"otherPlayer"
			],
			[
				"samplePl",
				"samplePlayer"
			],
			[
				"sample",
				"sampleSoundBuffer"
			],
			[
				"Sample",
				"SamplePlayer"
			],
			[
				"Sound",
				"SoundBuffer"
			],
			[
				"buffer",
				"bufferSize"
			],
			[
				"sound",
				"soundPlayer"
			],
			[
				"sampleS",
				"sampleSoundBuffers"
			],
			[
				"my",
				"myBuffer"
			],
			[
				"myBuff",
				"myBufferSize"
			],
			[
				"tr",
				"track_ended"
			],
			[
				"Soud",
				"SoundBuffer"
			],
			[
				"pla",
				"playSample"
			],
			[
				"Sel",
				"Selected"
			],
			[
				"sampl",
				"sampleSampler"
			],
			[
				"cur",
				"currentlyPlayingSample"
			],
			[
				"str",
				"stream"
			],
			[
				"PRO",
				"PROP_PRIORITY"
			],
			[
				"music",
				"music"
			],
			[
				"musi",
				"musicEntry"
			],
			[
				"PROP",
				"PROP_MUSIC"
			],
			[
				"curr",
				"currentLibrary"
			],
			[
				"mus",
				"musicStream"
			],
			[
				"et",
				"etanksCaption"
			],
			[
				"liv",
				"livesCaption"
			],
			[
				"setV",
				"setVisible"
			],
			[
				"playe",
				"playerLives"
			],
			[
				"end",
				"endWaypoint"
			],
			[
				"con",
				"controller"
			],
			[
				"coll",
				"collisionHandler"
			],
			[
				"tart",
				"targetPosition"
			],
			[
				"pat",
				"pathPtr"
			],
			[
				"vel",
				"velocity"
			],
			[
				"del",
				"delta"
			],
			[
				"Vecto",
				"Vector2"
			],
			[
				"de",
				"destY"
			],
			[
				"des",
				"destY"
			],
			[
				"inc",
				"include"
			],
			[
				"pro",
				"projectileToRemove"
			],
			[
				"proj",
				"projectileToRemove"
			],
			[
				"proje",
				"projectileControllers"
			],
			[
				"Creep",
				"CreepModel"
			],
			[
				"dead",
				"deadFlag"
			],
			[
				"Proje",
				"ProjectileSpawner"
			],
			[
				"up",
				"updateTowers"
			],
			[
				"upd",
				"updateCreeps"
			],
			[
				"att",
				"attackCooldown"
			],
			[
				"creep",
				"creepModels"
			],
			[
				"Game",
				"GameWorld"
			],
			[
				"cree",
				"creepModels"
			],
			[
				"Cree",
				"CreepModel"
			],
			[
				"tower",
				"towerControllers"
			],
			[
				"upda",
				"updateTowers"
			],
			[
				"Tower",
				"TowerController"
			],
			[
				"way",
				"waypointPosition"
			],
			[
				"angl",
				"angleToWaypoint"
			],
			[
				"en",
				"endl"
			],
			[
				"draw",
				"drawAttribute"
			],
			[
				"grid",
				"gridSize"
			],
			[
				"gi",
				"gridSize"
			],
			[
				"tile",
				"tileCanvas"
			],
			[
				"tileP",
				"tilePositionX"
			],
			[
				"tilePo",
				"tilePositionY"
			],
			[
				"pix",
				"pixelHeight"
			],
			[
				"px",
				"pixelHeight"
			],
			[
				"til",
				"tileHeight"
			],
			[
				"rend",
				"_renderAttrLayer"
			],
			[
				"edit",
				"editorModel"
			],
			[
				"Edit",
				"EditorController"
			],
			[
				"_hand",
				"_handleTileClick"
			],
			[
				"tileset",
				"tilesetController"
			],
			[
				"Tile",
				"TilesetController"
			],
			[
				"sele",
				"selectedTileIndex"
			],
			[
				"tileInd",
				"tileIndex"
			],
			[
				"on",
				"onTileClicked"
			],
			[
				"tileEle",
				"tileElement"
			],
			[
				"tileE",
				"tileElement"
			],
			[
				"tileInde",
				"tileIndexMap"
			],
			[
				"mous",
				"mouseOffsetY"
			],
			[
				"mouse",
				"mouseOffsetX"
			],
			[
				"mov",
				"movingLock"
			],
			[
				"tileElem",
				"tileElements"
			],
			[
				"tilse",
				"tilesetImage"
			],
			[
				"Tiles",
				"TilesetView"
			],
			[
				"editmo",
				"editModeChanged"
			],
			[
				"set",
				"setEditMode"
			],
			[
				"edi",
				"editMode"
			],
			[
				"too",
				"toolName"
			],
			[
				"fuc",
				"function"
			],
			[
				"stage",
				"stageModel"
			],
			[
				"app",
				"append"
			],
			[
				"attr",
				"attrLayer"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"font",
				"font-size"
			],
			[
				"togg",
				"toggler"
			],
			[
				"appl",
				"appliedClass"
			],
			[
				"tog",
				"toggle-transitions"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat/sqratObject.h",
			"settings":
			{
				"buffer_size": 8705,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Reference.hpp",
			"settings":
			{
				"buffer_size": 5747,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat.h",
			"settings":
			{
				"buffer_size": 1255,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat/sqratTable.h",
			"settings":
			{
				"buffer_size": 4370,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 60 files for \"Squirtle\" (case sensitive)\n\n/Users/zack/Dev/marmot/include/squirtle/Error.hpp:\n   27  \n   28  namespace squirtle {\n   29:   class SquirtleError : public std::runtime_error {\n   30    public:\n   31:     SquirtleError(const std::string& str) noexcept: std::runtime_error(\"squirtle: error: \" + str){\n   32        \n   33      }\n\n/Users/zack/Dev/marmot/include/squirtle/Reference.hpp:\n  146            break;\n  147          default:\n  148:           throw SquirtleError(\"invalid object type\");\n  149        }\n  150        sq_pop(vm, 1);\n\n/Users/zack/Dev/marmot/src/Main.cpp:\n    7  int main(int argc, char** argv) {\n    8    squirtle::State sq;\n    9:   // std::cout << \"Squirtle test program.\" << std::endl;\n   10  \n   11    // squirtle::VM machine;\n\n4 matches across 3 files\n\n\nSearching 60 files for \"squirtle\" (case sensitive)\n\n/Users/zack/Dev/marmot/CMakeLists.txt:\n   30  cmake_minimum_required(VERSION 2.8)\n   31  \n   32: project(squirtle)\n   33  \n   34: set(SQUIRTLE_EXE_NAME squirtle)\n   35: set(SQUIRTLE_LIBRARY_NAME libsquirtle)\n   36  \n   37  if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n   ..\n   64  #\n   65  set(SQUIRTLE_SRC_LIBRARY\n   66:     src/squirtle/VM.cpp\n   67  )\n   68  \n   69  set(SQUIRTLE_SRC_LIBRARY\n   70:     include/squirtle/VM.hpp\n   71:     include/squirtle/Error.hpp\n   72:     include/squirtle/State.hpp\n   73  )\n   74  \n   ..\n  110  \n  111  #\n  112: # squirtle (executable)\n  113  #\n  114  add_executable(\n\n/Users/zack/Dev/marmot/include/squirtle/Error.hpp:\n   26  #include <string>\n   27  \n   28: namespace squirtle {\n   29    class MarmotError : public std::runtime_error {\n   30    public:\n   31:     MarmotError(const std::string& str) noexcept: std::runtime_error(\"squirtle: error: \" + str){\n   32        \n   33      }\n   34    };\n   35: } // squirtle\n   36  \n   37  #endif // SQUIRTLE_ERROR_HPP\n\n/Users/zack/Dev/marmot/include/squirtle/Reference.hpp:\n   23  #define SQUIRTLE_REFERENCE_HPP\n   24  \n   25: #include \"squirtle/Error.hpp\"\n   26  #include <squirrel.h>\n   27  #include <iostream>\n   ..\n   29  #include <string>\n   30  \n   31: namespace squirtle {\n   32    namespace detail {\n   33  \n   ..\n  154  \n  155    };\n  156: } // squirtle\n  157  \n  158  #endif // SQUIRTLE_REFERENCE_HPP\n\n/Users/zack/Dev/marmot/include/squirtle/State.hpp:\n   23  #define SQUIRTLE_STATE_HPP\n   24  \n   25: #include \"squirtle/Error.hpp\"\n   26: #include \"squirtle/Reference.hpp\"\n   27  #include <squirrel.h>\n   28  #include <iostream>\n   ..\n   30  #include <string>\n   31  \n   32: namespace squirtle {\n   33    namespace detail {\n   34      void print(HSQUIRRELVM vm, const SQChar *s, ...) {\n   ..\n   68        sq_get(vm.get(), -2);         //get the function from the root table\n   69        sq_pushroottable(vm.get());   //’this’ (function environment object)\n   70:       sq_pushstring(vm.get(), \"Hello from squirtle::State.\", -1);\n   71        sq_call(vm.get(), 2, SQFalse, SQFalse);\n   72        sq_pop(vm.get(), 2);          //pops the roottable and the function\n   ..\n   84      }\n   85    };\n   86: } // squirtle\n   87  \n   88  #endif // SQUIRTLE_STATE_HPP\n\n/Users/zack/Dev/marmot/include/squirtle/VM.hpp:\n   11  #include <sqstdio.h>\n   12  \n   13: namespace squirtle {  \n   14  \n   15    namespace detail {\n   ..\n   49        pushRootTable();\n   50        sqstd_register_iolib(instance);\n   51:       sqstd_dofile(instance, _SC(\"squirtle.nut\"), SQFalse, SQTrue);\n   52        pop(1);\n   53      }\n   ..\n  132      template<typename T> T read(int index) const;\n  133  \n  134:     #include \"squirtle/VM_pop.inl\"\n  135:     #include \"squirtle/VM_call.inl\"\n  136    };\n  137  \n  138:   #include \"squirtle/VM_read.inl\"\n  139  \n  140: } // squirtle\n  141  \n  142  #endif // SQUIRTLE_VM_INCLUDED\n\n/Users/zack/Dev/marmot/include/squirtle/VM_call.inl:\n    1  /*\n    2:  * Templated call function for class squirtle::VM\n    3   */\n    4  \n\n/Users/zack/Dev/marmot/include/squirtle/VM_pop.inl:\n    1  /*\n    2:  * Templated pop function and _Popper helper struct for class squirtle::VM.\n    3   * Implements variadic popping based on type.\n    4   */\n\n/Users/zack/Dev/marmot/include/squirtle/VM_read.inl:\n    1  /*\n    2:  * Templated read functions for class squirtle::VM\n    3   */\n    4  \n\n/Users/zack/Dev/marmot/src/Main.cpp:\n    1  #include \"Main.hpp\"\n    2: #include \"squirtle/VM.hpp\"\n    3: #include \"squirtle/State.hpp\"\n    4  \n    5  #include <iostream>\n    6  \n    7  int main(int argc, char** argv) {\n    8:   squirtle::State sq;\n    9    // std::cout << \"Marmot test program.\" << std::endl;\n   10  \n   11:   // squirtle::VM machine;\n   12    // std::cout << \"Stack size: \" << machine.getStackTop() << std::endl;\n   13    // std::cout << \"Stack bottom: \" << machine.read<int>(2) << std::endl;\n\n/Users/zack/Dev/marmot/src/squirtle/VM.cpp:\n    1: #include \"squirtle/VM.hpp\"\n    2  \n    3: namespace squirtle {\n    4  \n    5: } // squirtle\n    6  \n\n35 matches across 10 files\n\n\nSearching 60 files for \"SQUIRTLE\" (case sensitive)\n\n0 matches across 0 files\n",
			"settings":
			{
				"buffer_size": 4987,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "VM.hpp",
			"settings":
			{
				"buffer_size": 3005,
				"line_ending": "Unix"
			}
		},
		{
			"file": "State.hpp",
			"settings":
			{
				"buffer_size": 3395,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/zack/Dev/marmot/src/Main.cpp",
			"settings":
			{
				"buffer_size": 3733,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/Squirrel (sq).sublime-build",
	"command_palette":
	{
		"height": 67.0,
		"selected_items":
		[
			[
				"c++",
				"Set Syntax: C++"
			],
			[
				"con",
				"Package Control: Install Package"
			],
			[
				"javascript",
				"Set Syntax: JavaScript"
			],
			[
				"javasc",
				"Set Syntax: JavaScript"
			],
			[
				"sq",
				"Set Syntax: Squirrel"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"pacinst",
				"Package Control: Install Package"
			],
			[
				"pacin",
				"Package Control: Install Package"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/zack/Dev/squirtle/extlibs/squirrel/squirrel/sqstate.cpp",
		"/Users/zack/Dev/marmot/include/marmot/State.hpp",
		"/Users/zack/Dev/marmot/include/marmot/Reference.hpp",
		"/Users/zack/Dev/marmot/include/marmot/Error.hpp",
		"/Users/zack/Dev/marmot/CMakeLists.txt",
		"/Users/zack/Dev/marmot/src/squirtle/VM.cpp",
		"/Users/zack/Dev/marmot/src/Main.cpp",
		"/Users/zack/Dev/marmot/include/squirtle/VM_read.inl",
		"/Users/zack/Dev/marmot/include/squirtle/VM_pop.inl",
		"/Users/zack/Dev/marmot/include/squirtle/VM_call.inl",
		"/Users/zack/Dev/marmot/include/squirtle/VM.hpp",
		"/Users/zack/Dev/marmot/include/squirtle/Error.hpp",
		"/Users/zack/Dev/marmot/include/squirtle/State.hpp",
		"/Users/zack/Dev/marmot/include/squirtle/Reference.hpp",
		"/Users/zack/Dev/squirtle/CMakeLists.txt",
		"/Users/zack/Dev/squirtle/src/Main.cpp",
		"/Users/zack/Dev/squirtle/include/Main.hpp",
		"/Users/zack/Dev/squirtle/src/squirtle/VM.cpp",
		"/Users/zack/Dev/squirtle/include/squirtle/Error.hpp",
		"/Users/zack/Dev/squirtle/include/squirtle/State.hpp",
		"/Users/zack/Dev/squirtle/include/squirtle/VM.hpp",
		"/Users/zack/Dev/squirtle/include/squirtle/Reference.hpp",
		"/Users/zack/Dev/squirtle/include/squirtle/VM_read.inl",
		"/Users/zack/Dev/squirtle/include/squirtle/VM_call.inl",
		"/Users/zack/Dev/squirtle/include/squirtle/VM_pop.inl",
		"/Users/zack/Dev/build-squirtle/squirtle.nut",
		"/Users/zack/Dev/build-risu/boot.nut",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/audio/AudioService.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/audio/NSFSoundStream.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/audio/GMESoundStream.hpp",
		"/Users/zack/Dev/sfml/include/SFML/Audio/SoundBufferRecorder.hpp",
		"/Users/zack/Dev/sfml/include/SFML/Audio/SoundRecorder.hpp",
		"/Users/zack/Dev/sfml/include/SFML/Audio/SoundBuffer.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/scripting/AudioServiceScriptProxy.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/scripting/AudioServiceScriptProxy.cpp",
		"/Users/zack/Dev/hikari/extlibs/gme-nes/Music_Emu.h",
		"/Users/zack/Dev/hikari/extlibs/gme-nes/Music_Emu.cpp",
		"/Users/zack/Dev/hikari/engine/CMakeLists.txt",
		"/Users/zack/Dev/hikari/content/assets/stages/map-pearl.json",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/game/map/Map.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/core/game/map/Map.cpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/TitleState.cpp",
		"/Users/zack/Dev/hikari/extlibs/gme-nes/Nsfe_Emu.cpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/core/util/StringUtils.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/util/StringUtils.hpp",
		"/Users/zack/Dev/hikari/extlibs/gme-nes/Gme_File.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/GuiTestState.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/GuiTestState.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/SpriteTestState.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/SpriteTestState.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/game/StateTransition.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/core/game/StateTransition.cpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/OptionsState.cpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/RefillHealthTask.cpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/core/game/map/MapRenderer.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/StageSelectState.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/game/GameState.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/OptionsState.hpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/TitleState.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/PasswordState.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/PasswordState.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/core/game/GameController.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/game/GameController.hpp",
		"/Users/zack/Dev/hikari/content/assets/animations/door.json",
		"/Users/zack/Dev/hikari/content/assets/animations/metool.json",
		"/Users/zack/Dev/hikari/content/assets/animations/komasaburo.json",
		"/Users/zack/Dev/hikari/content/assets/animations/items.json",
		"/Users/zack/Dev/hikari/content/assets/animations/heroes.json",
		"/Users/zack/Dev/hikari/content/assets/animations/heroes-dev.json",
		"/Users/zack/Dev/hikari/content/assets/animations/enemies.json",
		"/Users/zack/Dev/hikari/content/assets/templates/enemies.json",
		"/Users/zack/Dev/hikari/tools/content/assets/animations/metool.json",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/MapResourceService.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/CreepModel.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/screens/GamePlayScreen.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/GameWindow.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/Main.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/ProjectileModel.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/CreepModel.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/GameSimulation.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/GameWorld.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/CollisionHandler.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/CollisionHandler.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/GameWorld.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/ProjectileModel.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/GameSimulation.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/TowerModel.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/ProjectileController.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/ProjectileController.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/CreepController.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/Vector2.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/CreepController.cpp",
		"/Users/zack/Dev/maladroids/CMakeLists.txt",
		"/Users/zack/Dev/maladroids/include/maladroids/Waypoint.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/ProjectileSpawner.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/TowerModel.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/TowerController.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/ProjectileSpawner.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/screens/GamePlayScreen.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/GameScreen.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/Waypoint.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/TowerController.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/Path.cpp",
		"/Users/zack/Dev/maladroids/src/maladroids/screens/TitleScreen.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/core/math/Vector2.hpp",
		"/Users/zack/Dev/maladroids/include/maladroids/CreepFinder.hpp",
		"/Users/zack/Dev/hikari/engine/src/hikari/client/game/GamePlayState.cpp",
		"/Users/zack/Dev/hikari/engine/include/hikari/client/game/GameWorld.hpp",
		"/Users/zack/Dev/maladroids/src/maladroids/CreepFinder.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/CreepFinder.cpp",
		"/Users/zack/Dev/maladroids/include/maladroids/Main.hpp",
		"/Users/zack/Dev/maladroids/src/Main.cpp",
		"/Users/zack/Dev/guichan/README",
		"/Users/zack/Dev/guichan/include/guichan.hpp",
		"/Users/zack/Dev/asobiba/CMakeLists.txt",
		"/Users/zack/Dev/maladroids/README.md",
		"/Users/zack/Dev/maladroids/include/Main.hpp",
		"/Users/zack/Dev/hikari/tools/uchuu-html/README.md",
		"/Users/zack/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/zack/Dev/hikari/content/assets/animations/dada.json",
		"/Users/zack/Dev/hikari/content/assets/stages/map-test4.json",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/KomasaburoEnemyBehavior.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/EnemyBehavior.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/BikkyEnemyBehavior.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/Bootstrap.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/MetoolEnemyBehavior.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/DadaEnemyBehavior.nut",
		"/Users/zack/Dev/hikari/content/assets/scripts/behaviors/TellyBehavior.nut"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/zack/Dev/marmot",
			"/Users/zack/Dev/hikari",
			"/Users/zack/Dev/SFML/src",
			"/Users/zack/Dev/hikari",
			"<open folders>"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"std",
			"std::cout",
			"Reference::",
			"addref",
			"sq_release",
			"squi",
			"SQUIRTLE",
			"squirtle",
			"Squirtle",
			"o)",
			"reference",
			"printf",
			"sq_gettop",
			"(v",
			"reference",
			"SQUIRTLE_STATE_HPP",
			"(v",
			"SQUIRTLE_ERROR_HPP",
			"sol",
			"SOL_ERROR_HPP",
			"(v",
			"squirrelPrintFunction",
			"VM::",
			"read",
			"VM::",
			"SQUIRTLE_SRC_LIBRARY",
			"_MAIN",
			"SQUIRTLE_SRC_MAIN",
			"SQUIRTLE_EXE_NAME",
			"RISU_",
			"risu",
			"std::cout << \"Stack bottom: \" << machine.read<int>(1) << std::endl;",
			"0 - (sizeof...(Ret))",
			"static_cast<int>(sizeof...(Ret) + 1))",
			"remove",
			"sq_get",
			"_pop",
			"num_args",
			"typename... Ret",
			"v",
			"sq_push",
			"(-size) + index - 1",
			"(-size) + index - 1)",
			"l",
			"_Pop",
			"Luab",
			"nullptr_t",
			");",
			"pop",
			"Read",
			"getVelocityX",
			"hero->getBou",
			"colli",
			"isVul",
			"isShooting",
			"shooting",
			"fire",
			"isObstacle",
			"obstacle",
			"ene",
			"musicId",
			"constructSpawner",
			"constructSpawn",
			"\"hotspotY\" : 16, ",
			"debug",
			"enableDebug",
			"segments",
			" ;",
			"float",
			"::Ret",
			"enter",
			"startR",
			"fadeOut",
			"gamePlayState.",
			"startR",
			"changeSubState",
			"startround",
			"taskQueue",
			"functiontas",
			"startRound",
			"::Next",
			"startrou",
			"changeSubState",
			"startRound",
			"gamePlayState.",
			"gamePlayState",
			"taskQueue",
			"startround",
			"fadecolortask",
			"drawInf",
			"SubState::CONTINUE",
			"taskqueu",
			"enemyPtr",
			"projectil",
			"deathType",
			"death",
			"handleEntityDeathEvent",
			"death",
			"getWeaponById",
			"shot",
			"\"usageSound\": \"Plasma Bullet\"",
			"Plasma Bullet",
			"func",
			"FunctionTask",
			"HIKARI_CLIENT_GAME_FUNCTIONTASK",
			"counter1",
			"counter",
			"audioService",
			"const float",
			"update",
			"taskQueue",
			"isDebugLadderRenderingEnabled",
			"ladder",
			"p.",
			"currentlyPlayingSample",
			"samplers",
			"addSample",
			"samplePlayers",
			"samplers",
			"SamplerPair",
			"iterator",
			"myBufferSize / 2",
			"sample_rate",
			"track_info",
			"track_info_t",
			">",
			"<",
			"track_info_t"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"MARMOT",
			"marmot",
			"Marmot",
			"FadeStateTransition",
			"EventBus",
			"openFileRead",
			"Platform",
			"tileIsPlatform"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat/sqratObject.h",
					"settings":
					{
						"buffer_size": 8705,
						"regions":
						{
						},
						"selection":
						[
							[
								1971,
								1978
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 525.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Reference.hpp",
					"settings":
					{
						"buffer_size": 5747,
						"regions":
						{
						},
						"selection":
						[
							[
								4128,
								4128
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1634.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat.h",
					"settings":
					{
						"buffer_size": 1255,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/Users/zack/Dev/hikari/extlibs/sqrat/include/sqrat/sqratTable.h",
					"settings":
					{
						"buffer_size": 4370,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"settings":
					{
						"buffer_size": 4987,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										154,
										162
									],
									[
										226,
										234
									],
									[
										475,
										483
									],
									[
										690,
										698
									],
									[
										955,
										963
									],
									[
										1002,
										1010
									],
									[
										1048,
										1056
									],
									[
										1167,
										1175
									],
									[
										1251,
										1259
									],
									[
										1286,
										1294
									],
									[
										1324,
										1332
									],
									[
										1392,
										1400
									],
									[
										1548,
										1556
									],
									[
										1710,
										1718
									],
									[
										1788,
										1796
									],
									[
										1960,
										1968
									],
									[
										2092,
										2100
									],
									[
										2177,
										2185
									],
									[
										2345,
										2353
									],
									[
										2382,
										2390
									],
									[
										2518,
										2526
									],
									[
										2838,
										2846
									],
									[
										3039,
										3047
									],
									[
										3194,
										3202
									],
									[
										3365,
										3373
									],
									[
										3525,
										3533
									],
									[
										3567,
										3575
									],
									[
										3628,
										3636
									],
									[
										3670,
										3678
									],
									[
										3833,
										3841
									],
									[
										3997,
										4005
									],
									[
										4184,
										4192
									],
									[
										4298,
										4306
									],
									[
										4332,
										4340
									],
									[
										4445,
										4453
									],
									[
										4547,
										4555
									],
									[
										4790,
										4798
									],
									[
										4832,
										4840
									],
									[
										4863,
										4871
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								4910,
								4910
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 3,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2590.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "VM.hpp",
					"settings":
					{
						"buffer_size": 3005,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "State.hpp",
					"settings":
					{
						"buffer_size": 3395,
						"regions":
						{
						},
						"selection":
						[
							[
								3171,
								3171
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 854.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/Users/zack/Dev/marmot/src/Main.cpp",
					"settings":
					{
						"buffer_size": 3733,
						"regions":
						{
						},
						"selection":
						[
							[
								221,
								221
							],
							[
								345,
								345
							],
							[
								441,
								441
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 30.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 222.0
	},
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"ref",
				"include/marmot/Reference.hpp"
			],
			[
				"",
				"/Users/zack/Dev/marmot/include/squirtle/State.hpp"
			],
			[
				"sqstate",
				"extlibs/squirrel/squirrel/sqstate.cpp"
			],
			[
				"main",
				"src/Main.cpp"
			],
			[
				"cmak",
				"CMakeLists.txt"
			],
			[
				"cmake",
				"CMakeLists.txt"
			],
			[
				"enemies",
				"content/assets/templates/enemies.json"
			],
			[
				"ent",
				"engine/include/hikari/client/game/objects/Entity.hpp"
			],
			[
				"collect",
				"engine/src/hikari/client/game/objects/CollectableItem.cpp"
			],
			[
				"gamepl",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"metool",
				"content/assets/scripts/behaviors/MetoolEnemyBehavior.nut"
			],
			[
				"gampla",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"hero.hpp",
				"engine/include/hikari/client/game/objects/Hero.hpp"
			],
			[
				"hero",
				"engine/src/hikari/client/game/objects/Hero.cpp"
			],
			[
				"gameplay",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"gaug",
				"engine/src/hikari/client/gui/EnergyGauge.cpp"
			],
			[
				"map-test2",
				"content/assets/stages/map-test2.json"
			],
			[
				"mapte",
				"content/assets/stages/map-test6.json"
			],
			[
				"mapload",
				"engine/include/hikari/core/game/map/MapLoader.hpp"
			],
			[
				"factorh",
				"engine/src/hikari/client/game/objects/FactoryHelpers.cpp"
			],
			[
				"client",
				"engine/src/hikari/client/Client.cpp"
			],
			[
				"ene",
				"content/assets/templates/enemies.json"
			],
			[
				"p",
				"content/assets/animations/peterchy.json"
			],
			[
				"proj",
				"content/assets/templates/projectiles.json"
			],
			[
				"proje",
				"content/assets/animations/projectiles.json"
			],
			[
				"fadeco",
				"engine/include/hikari/client/game/FadeColorTask.hpp"
			],
			[
				"fadeta",
				"engine/src/hikari/client/game/FadeColorTask.cpp"
			],
			[
				"gameplat",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"stas",
				"engine/src/hikari/client/game/StageSelectState.cpp"
			],
			[
				"enti",
				"engine/include/hikari/client/game/objects/Entity.hpp"
			],
			[
				"helper",
				"engine/src/hikari/client/game/objects/FactoryHelpers.cpp"
			],
			[
				"projectil",
				"content/assets/templates/projectiles.json"
			],
			[
				"enemy",
				"engine/src/hikari/client/game/objects/Enemy.cpp"
			],
			[
				"enty",
				"engine/src/hikari/client/game/objects/Entity.cpp"
			],
			[
				"gamplast",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"project",
				"engine/src/hikari/client/game/objects/Projectile.cpp"
			],
			[
				"shot",
				"engine/src/hikari/client/game/Shot.cpp"
			],
			[
				"game",
				"content/game.json"
			],
			[
				"soundlib",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"weaponcpp",
				"engine/src/hikari/client/game/Weapon.cpp"
			],
			[
				"gameprog",
				"engine/src/hikari/client/game/GameProgress.cpp"
			],
			[
				"weapon",
				"engine/include/hikari/client/game/Weapon.hpp"
			],
			[
				"weapontabl",
				"engine/include/hikari/client/game/WeaponTable.hpp"
			],
			[
				"gamplayst",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"weapn",
				"content/assets/weapons/weapons.json"
			],
			[
				"cmakl",
				"engine/CMakeLists.txt"
			],
			[
				"functas",
				"engine/src/hikari/client/game/FunctionTask.cpp"
			],
			[
				"functiontak",
				"engine/include/hikari/client/game/FunctionTask.hpp"
			],
			[
				"passwo",
				"engine/src/hikari/client/game/PasswordState.cpp"
			],
			[
				"stagesele",
				"engine/include/hikari/client/game/StageSelectState.hpp"
			],
			[
				"stage",
				"engine/src/hikari/client/game/StageSelectState.cpp"
			],
			[
				"stater",
				"engine/src/hikari/core/game/StateTransition.cpp"
			],
			[
				"statet",
				"engine/include/hikari/core/game/StateTransition.hpp"
			],
			[
				"sprite",
				"engine/src/hikari/client/game/SpriteTestState.cpp"
			],
			[
				"spritete",
				"engine/include/hikari/client/game/SpriteTestState.hpp"
			],
			[
				"guite",
				"engine/src/hikari/client/game/GuiTestState.cpp"
			],
			[
				"guites",
				"engine/include/hikari/client/game/GuiTestState.hpp"
			],
			[
				"optio",
				"engine/src/hikari/client/game/OptionsState.cpp"
			],
			[
				"option",
				"engine/include/hikari/client/game/OptionsState.hpp"
			],
			[
				"titlscp",
				"engine/src/hikari/client/game/TitleState.cpp"
			],
			[
				"titl",
				"engine/include/hikari/client/game/TitleState.hpp"
			],
			[
				"passworc",
				"engine/src/hikari/client/game/PasswordState.cpp"
			],
			[
				"gamplay",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"gamcon.cp",
				"engine/src/hikari/core/game/GameController.cpp"
			],
			[
				"controll",
				"engine/include/hikari/core/game/GameController.hpp"
			],
			[
				"gamsta",
				"engine/include/hikari/core/game/GameState.hpp"
			],
			[
				"gamst",
				"engine/include/hikari/core/game/GameState.hpp"
			],
			[
				"stagse",
				"engine/include/hikari/client/game/StageSelectState.hpp"
			],
			[
				"mapr",
				"engine/src/hikari/core/game/map/MapRenderer.cpp"
			],
			[
				"gameplst.cp",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"refill",
				"engine/src/hikari/client/game/RefillHealthTask.cpp"
			],
			[
				"lib",
				"content/assets/sound/library.json"
			],
			[
				"gmesou",
				"engine/include/hikari/client/audio/GMESoundStream.hpp"
			],
			[
				"soundl",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"stag",
				"engine/src/hikari/client/game/StageSelectState.cpp"
			],
			[
				"gmef",
				"extlibs/gme-nes/Gme_File.cpp"
			],
			[
				"striu",
				"engine/include/hikari/core/util/StringUtils.hpp"
			],
			[
				"strin",
				"engine/src/hikari/core/util/StringUtils.cpp"
			],
			[
				"nsf",
				"extlibs/gme-nes/Nsfe_Emu.cpp"
			],
			[
				"muic",
				"extlibs/gme-nes/Music_Emu.h"
			],
			[
				"gme",
				"engine/src/hikari/client/audio/GMESoundStream.cpp"
			],
			[
				"stagsele",
				"engine/src/hikari/client/game/StageSelectState.cpp"
			],
			[
				"gampl",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"map.cp",
				"engine/src/hikari/core/game/map/Map.cpp"
			],
			[
				"map.h",
				"engine/include/hikari/core/game/map/Map.hpp"
			],
			[
				"map-",
				"content/assets/stages/map-pearl.json"
			],
			[
				"gmeso",
				"engine/src/hikari/client/audio/GMESoundStream.cpp"
			],
			[
				"audi",
				"engine/src/hikari/client/audio/AudioService.cpp"
			],
			[
				"sodlb",
				"engine/include/hikari/client/audio/SoundLibrary.hpp"
			],
			[
				"musicem",
				"extlibs/gme-nes/Music_Emu.h"
			],
			[
				"effect.nut",
				"content/assets/scripts/effects/ExtraLifeEffect.nut"
			],
			[
				"effect.nu",
				"content/assets/scripts/effects/AddETankEffect.nut"
			],
			[
				"soundlb",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"musicemu",
				"extlibs/gme-nes/Music_Emu.cpp"
			],
			[
				"nesemu",
				"extlibs/gme-nes/Music_Emu.h"
			],
			[
				".nut",
				"content/assets/scripts/effects/AddETankEffect.nut"
			],
			[
				"audpro",
				"engine/src/hikari/client/scripting/AudioServiceScriptProxy.cpp"
			],
			[
				"audprox",
				"engine/include/hikari/client/scripting/AudioServiceScriptProxy.hpp"
			],
			[
				"gamepa",
				"engine/src/hikari/client/game/GamePlayState.cpp"
			],
			[
				"sou",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"audserh",
				"engine/include/hikari/client/audio/AudioService.hpp"
			],
			[
				"sound",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"audio",
				"engine/src/hikari/client/audio/AudioService.cpp"
			],
			[
				"audioser",
				"engine/src/hikari/client/audio/AudioService.cpp"
			],
			[
				"nsfso",
				"engine/src/hikari/client/audio/NSFSoundStream.cpp"
			],
			[
				"sounlib",
				"engine/src/hikari/client/audio/SoundLibrary.cpp"
			],
			[
				"gameco",
				"engine/src/hikari/client/game/GameConfig.cpp"
			],
			[
				"gameplayst",
				"engine/include/hikari/client/game/GamePlayState.hpp"
			],
			[
				"clien",
				"engine/include/hikari/client/Client.hpp"
			],
			[
				"gamecon",
				"engine/include/hikari/client/game/GameConfig.hpp"
			],
			[
				"weapo",
				"content/assets/weapons/weapons.json"
			],
			[
				".json",
				"content/game.json"
			],
			[
				"gamepro",
				"engine/src/hikari/client/game/GameProgress.cpp"
			],
			[
				"gampero",
				"engine/src/hikari/client/scripting/GameProgressScriptProxy.cpp"
			],
			[
				"gameprscr",
				"engine/include/hikari/client/scripting/GameProgressScriptProxy.hpp"
			],
			[
				"etank",
				"content/assets/scripts/effects/AddETankEffect.nut"
			],
			[
				"audoser",
				"engine/src/hikari/client/audio/AudioService.cpp"
			],
			[
				"modify",
				"content/assets/scripts/effects/ModifyHealthEffect.nut"
			],
			[
				"extra",
				"content/assets/scripts/effects/ExtraLifeEffect.nut"
			],
			[
				"komasa",
				"content/assets/scripts/behaviors/KomasaburoEnemyBehavior.nut"
			],
			[
				"enemyh",
				"content/assets/scripts/behaviors/EnemyBehavior.nut"
			],
			[
				"dadabeh",
				"content/assets/scripts/behaviors/DadaEnemyBehavior.nut"
			],
			[
				"bikky",
				"content/assets/scripts/behaviors/BikkyEnemyBehavior.nut"
			],
			[
				"bootstr",
				"content/assets/scripts/Bootstrap.nut"
			],
			[
				"fonts",
				"content/assets/fonts.json"
			],
			[
				"telly",
				"content/assets/animations/telly.json"
			],
			[
				"projec",
				"content/assets/animations/projectiles.json"
			],
			[
				"peter",
				"content/assets/animations/peterchy.json"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 213.0,
	"status_bar_visible": true
}
